{
  "edges": [
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.provider.FirebaseInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"FirebaseInitProvider ProviderInfo cannot be null.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.provider.FirebaseInitProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)\u003e($r1)",
      "kind": "CLINIT",
      "component": [
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e(com.google.firebase.FirebaseApp$1)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e(com.google.firebase.FirebaseApp$1)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e(com.google.firebase.FirebaseApp$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$UiExecutor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "com.google.firebase.provider.FirebaseInitProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: int hashCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003cjava.lang.Object: int hashCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e($param0, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"google_app_id\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"google_api_key\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"firebase_database_url\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"ga_trackingId\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"gcm_defaultSenderId\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"google_storage_bucket\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)\u003e(\"project_id\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e($r2, $r4, $r5, $r6, $r7, $r8, $r9)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Strings: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e($z0, \"ApplicationId must be set.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)\u003e($param0, $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e($param0, $param1, \"[DEFAULT]\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwich()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwich()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)\u003e($r2)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector getInstance()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003ccom.google.android.gms.common.api.internal.BackgroundDetector: void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String normalize(java.lang.String)\u003e",
      "sourceStatement": "$param2 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp: java.lang.String normalize(java.lang.String)\u003e($param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e($z0, $r7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Application context cannot be null.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e($param0, $param2, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)\u003e($param0, class \"Lcom/google/firebase/components/ComponentDiscoveryService;\")",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)\u003e($param0, class \"Lcom/google/firebase/components/ComponentDiscoveryService;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)\u003e($param1, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: void \u003cinit\u003e(java.lang.Class)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: void \u003cinit\u003e(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.components.ComponentDiscovery: void \u003cinit\u003e(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)\u003e($param0, $r3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: void \u003cinit\u003e(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r9.\u003ccom.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r2.\u003ccom.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever: java.util.List retrieve(java.lang.Object)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: android.os.Bundle getMetadata(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: android.os.Bundle getMetadata(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(java.lang.String)\u003e($r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: void \u003cinit\u003e(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)\u003e($r11)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: com.google.firebase.inject.Provider lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: com.google.firebase.inject.Provider lambdaFactory$()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime$$Lambda$5: com.google.firebase.inject.Provider lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)\u003e($r11)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.ComponentRuntime$Builder: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection)\u003e($r10)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r13.\u003ccom.google.firebase.FirebaseCommonRegistrar: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)\u003e($r13)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRegistrar)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRegistrar)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRegistrar)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRegistrar)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRegistrar)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRegistrar)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e($param0, class \"Landroid/content/Context;\", $r14)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])\u003e($param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)\u003e($param0, $param1, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[])\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null interface\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.components.Component$$Lambda$2: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: void \u003cinit\u003e(java.lang.Object)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Component$$Lambda$2: void \u003cinit\u003e(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: void \u003cinit\u003e(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null factory\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)\u003e($z0, \"Missing required property: factory.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)\u003e($r1, $r2, $i0, $i1, $r3, $r4, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)\u003e($param0, $param1, $param2, $param3, $param4, $param5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: void \u003cinit\u003e(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e($r15)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e(this, class \"Lcom/google/firebase/FirebaseApp;\", $r14)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e($r15)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e($param2, class \"Lcom/google/firebase/FirebaseOptions;\", $r14)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)\u003e($r15)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()\u003e",
      "sourceStatement": "$r16 \u003d virtualinvoke $r12.\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)\u003e($r2, $r3, $r4, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.EventBus: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003ccom.google.firebase.components.EventBus: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.EventBus: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e($r6, class \"Lcom/google/firebase/components/EventBus;\", $r8)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[])\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null interface\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])\u003e(this, class \"Lcom/google/firebase/dynamicloading/ComponentLoader;\", $r8)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List iterableToList(java.lang.Iterable)\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime: java.util.List iterableToList(java.lang.Iterable)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void \u003cinit\u003e(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e($r7)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: java.lang.Object get()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r6.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery$$Lambda$1: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar lambda$discoverLazy$0(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar lambda$discoverLazy$0(java.lang.String)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar lambda$discoverLazy$0(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r7.\u003ccom.google.firebase.components.ComponentRegistrar: java.util.List getComponents()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/installations/FirebaseInstallationsApi;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: void \u003cinit\u003e(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)\u003e($param0, $r2, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e($param0, 1, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null dependency anInterface.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null dependency\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: void checkArgument(boolean,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: void checkArgument(boolean,java.lang.String)\u003e($z0, \"Components are not allowed to depend on interfaces they themselves provide.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: int hashCode()\u003e",
      "targetMethod": "\u003cjava.lang.Object: int hashCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: int hashCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e($param0, 0, 1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"fire-installations\", \"16.3.5\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.AutoValue_LibraryVersion: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.platforminfo.AutoValue_LibraryVersion: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.AutoValue_LibraryVersion: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.platforminfo.LibraryVersion: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e($r2, class \"Lcom/google/firebase/platforminfo/LibraryVersion;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder intoSet()\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke $param0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder intoSet()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Component$$Lambda$3: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: void \u003cinit\u003e(java.lang.Object)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Component$$Lambda$3: void \u003cinit\u003e(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: void \u003cinit\u003e(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r7.\u003ccom.google.firebase.components.ComponentRegistrar: java.util.List getComponents()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/android/datatransport/TransportFactory;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r7.\u003ccom.google.firebase.components.ComponentRegistrar: java.util.List getComponents()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/iid/FirebaseInstanceId;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/installations/FirebaseInstallationsApi;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$0: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$0: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.Registrar$$Lambda$0: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder setInstantiation(int)\u003e",
      "sourceStatement": "this \u003d specialinvoke this.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder setInstantiation(int)\u003e(1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder setInstantiation(int)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)\u003e($z0, \"Instantiation type has already been set.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/iid/internal/FirebaseInstanceIdInternal;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/iid/FirebaseInstanceId;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.Registrar$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"fire-iid\", \"21.0.1\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r7.\u003ccom.google.firebase.components.ComponentRegistrar: java.util.List getComponents()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/messaging/FirebaseMessaging;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/iid/FirebaseInstanceId;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optionalProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optional(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optional(java.lang.Class)\u003e(class \"Lcom/google/android/datatransport/TransportFactory;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency optional(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e($param0, 0, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/installations/FirebaseInstallationsApi;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Lcom/google/firebase/events/Subscriber;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder alwaysEager()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"fire-fcm\", \"20.1.7_1p\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: java.lang.Object get()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r6.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder$$Lambda$1: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRegistrar lambda$addComponentRegistrar$0(com.google.firebase.components.ComponentRegistrar)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRegistrar lambda$addComponentRegistrar$0(com.google.firebase.components.ComponentRegistrar)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r7.\u003ccom.google.firebase.components.ComponentRegistrar: java.util.List getComponents()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/LibraryVersion;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.Dependency: void \u003cinit\u003e(java.lang.Class,int,int)\u003e($param0, 2, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: java.util.concurrent.ThreadFactory lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: java.util.concurrent.ThreadFactory lambdaFactory$()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$5: java.util.concurrent.ThreadFactory lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatConsumer;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: com.google.firebase.components.ComponentFactory lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r0.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"fire-android\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"fire-core\", \"19.5.0\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"device-name\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"device-model\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"device-brand\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e(\"android-target-sdk\", $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/LibraryVersion;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: com.google.firebase.components.ComponentFactory lambdaFactory$(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: void \u003cinit\u003e(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: void \u003cinit\u003e(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: void \u003cinit\u003e(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r2.\u003ccom.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e(\"android-min-sdk\", $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e(\"android-platform\", $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)\u003e(\"android-installer\", $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.KotlinVersion$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.KotlinVersion$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.KotlinVersionCurrentValue: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ckotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersionCurrentValue: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()\u003e",
      "targetMethod": "\u003ckotlin.KotlinVersion: void \u003cinit\u003e(int,int,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ckotlin.KotlinVersion: void \u003cinit\u003e(int,int,int)\u003e(1, 8, 20)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: void \u003cinit\u003e(int,int,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: void \u003cinit\u003e(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntProgression: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntProgression$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ckotlin.ranges.IntProgression$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntProgression$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ckotlin.ranges.IntRange$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e(1, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntProgression: void \u003cinit\u003e(int,int,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ckotlin.ranges.IntProgression: void \u003cinit\u003e(int,int,int)\u003e($param0, $param1, 1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntProgression: void \u003cinit\u003e(int,int,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntProgression: void \u003cinit\u003e(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ckotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e(0, 255)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ckotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)\u003e($param1, $param0, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e($param0, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e($param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ckotlin.internal.ProgressionUtilKt: int mod(int,int)\u003e($param0, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r1.\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntProgression: int getFirst()\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003ckotlin.ranges.IntRange: int getFirst()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntProgression: int getLast()\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003ckotlin.ranges.IntRange: int getLast()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e(0, 255)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r1.\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.ranges.IntRange: void \u003cinit\u003e(int,int)\u003e(0, 255)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.KotlinVersion: int versionOf(int,int,int)\u003e",
      "targetMethod": "\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r1.\u003ckotlin.ranges.IntRange: boolean contains(int)\u003e($param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()\u003e",
      "targetMethod": "\u003ckotlin.KotlinVersion: java.lang.String toString()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r2.\u003ckotlin.KotlinVersion: java.lang.String toString()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)\u003e(\"kotlin\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void \u003cinit\u003e(com.google.firebase.components.Component)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void \u003cinit\u003e(com.google.firebase.components.Component)\u003e($r4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void \u003cinit\u003e(com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r4.\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: boolean isValue()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003ccom.google.firebase.components.Component: boolean isValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)\u003e($r8, $z0, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: int hashCode()\u003e",
      "targetMethod": "\u003cjava.lang.Object: int hashCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: int hashCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: boolean equals(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: boolean access$100(com.google.firebase.components.CycleDetector$Dep)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.components.CycleDetector$Dep: boolean access$100(com.google.firebase.components.CycleDetector$Dep)\u003e($r9)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component getComponent()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r5.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component getComponent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r4.\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isDirectInjection()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r16.\u003ccom.google.firebase.components.Dependency: boolean isDirectInjection()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r16.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r16.\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003ccom.google.firebase.components.CycleDetector$Dep: void \u003cinit\u003e(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)\u003e($r8, $z0, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void addDependency(com.google.firebase.components.CycleDetector$ComponentNode)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void addDependency(com.google.firebase.components.CycleDetector$ComponentNode)\u003e($r18)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void addDependent(com.google.firebase.components.CycleDetector$ComponentNode)\u003e",
      "sourceStatement": "virtualinvoke $r18.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void addDependent(com.google.firebase.components.CycleDetector$ComponentNode)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: java.util.Set getDependencies()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: java.util.Set getDependencies()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.CycleDetector: void detect(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Lazy: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e(this, $r12)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: void \u003cinit\u003e(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r13.\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: boolean isValue()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003ccom.google.firebase.components.Component: boolean isValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r5.\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: boolean isValue()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r8.\u003ccom.google.firebase.components.Component: boolean isValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r8.\u003ccom.google.firebase.components.Component: java.util.Set getProvidedInterfaces()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)\u003e",
      "sourceStatement": "$r14 \u003d staticinvoke \u003ccom.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)\u003e($r13)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: void \u003cinit\u003e(java.util.Collection)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.components.LazySet: void \u003cinit\u003e(java.util.Collection)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.LazySet: void \u003cinit\u003e(java.util.Collection)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r5.\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isRequired()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: boolean isRequired()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void processDependencies()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void maybeInitializeEagerComponents()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: void maybeInitializeEagerComponents()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.FirebaseApp,android.content.Context)\u003e",
      "sourceStatement": "$r18 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.FirebaseApp,android.content.Context)\u003e(this, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(com.google.firebase.FirebaseApp,android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp$$Lambda$1: void \u003cinit\u003e(com.google.firebase.FirebaseApp,android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.FirebaseApp$$Lambda$1: void \u003cinit\u003e(com.google.firebase.FirebaseApp,android.content.Context)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp$$Lambda$1: void \u003cinit\u003e(com.google.firebase.FirebaseApp,android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void \u003cinit\u003e(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r17.\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e($r18)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: int hashCode()\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke $param0.\u003cjava.lang.Object: int hashCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e",
      "sourceStatement": "$i2 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e($param0, $i1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: void allocArrays(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.collection.SimpleArrayMap: void allocArrays(int)\u003e($i3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)\u003e($r4, $r3, $i0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e",
      "targetMethod": "\u003candroidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e($z0, \"FirebaseApp was deleted\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: boolean isDefaultApp()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.firebase.FirebaseApp: boolean isDefaultApp()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: boolean isDefaultApp()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: void initializeAllApis()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003ccom.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e($r3, $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: boolean isAlwaysEager()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r6.\u003ccom.google.firebase.components.Component: boolean isAlwaysEager()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: boolean isEagerInDefaultApp()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r6.\u003ccom.google.firebase.components.Component: boolean isEagerInDefaultApp()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "interfaceinvoke $r7.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: java.lang.Object get()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime$$Lambda$1: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e($r3, $r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: com.google.firebase.components.ComponentFactory getFactory()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param1.\u003ccom.google.firebase.components.Component: com.google.firebase.components.ComponentFactory getFactory()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e($param1, $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $param0.\u003ccom.google.firebase.components.Component: java.util.Set getDependencies()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isDirectInjection()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: boolean isDirectInjection()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isDeferred()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: boolean isDeferred()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: boolean isSet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getPublishedEvents()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $param0.\u003ccom.google.firebase.components.Component: java.util.Set getPublishedEvents()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.util.Set getPublishedEvents()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $param0.\u003ccom.google.firebase.components.Component: java.util.Set getPublishedEvents()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"Null interface requested.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$2: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.lang.Object lambda$of$1(java.lang.Object,com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: java.lang.Object lambda$of$1(java.lang.Object,com.google.firebase.components.ComponentContainer)\u003e($r1, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e(class \"Lcom/google/firebase/events/Publisher;\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/installations/FirebaseInstallationsApi;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.FirebaseInstallations$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e($r3, $r4, $r5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void \u003cinit\u003e(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void \u003cinit\u003e(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e($r10, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void \u003cinit\u003e(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void \u003cinit\u003e(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.RequestLimiter: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.installations.remote.RequestLimiter: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.RequestLimiter: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.RequestLimiter: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.RequestLimiter: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock getInstance()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.time.SystemClock: com.google.firebase.installations.time.SystemClock getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.time.SystemClock: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.installations.time.SystemClock: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.time.SystemClock: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock)\u003e($r0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: void \u003cinit\u003e(com.google.firebase.installations.time.Clock)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.Utils: void \u003cinit\u003e(com.google.firebase.installations.time.Clock)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.Utils: void \u003cinit\u003e(com.google.firebase.installations.time.Clock)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.installations.local.PersistedInstallation: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r5.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: com.google.firebase.installations.Utils getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.IidStore: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "specialinvoke $r12.\u003ccom.google.firebase.installations.local.IidStore: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: void \u003cinit\u003e(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r13.\u003ccom.google.firebase.installations.RandomFidGenerator: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)\u003e($r5, $param0, $r9, $r4, $r11, $r12, $r13)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void \u003cinit\u003e(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r12.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e($r3, $r4, $r5, $r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.firebase.iid.Metadata: void \u003cinit\u003e(android.content.Context)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e(\"firebase-iid-executor\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String,int)\u003e($param0, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Name must not be null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.ExecutorService newCachedSingleThreadExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e($param0, $r5, $r7, $r8, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003ccom.google.firebase.iid.Store: void \u003cinit\u003e(android.content.Context)\u003e($r10)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: void checkForRestore(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.iid.Store: void checkForRestore(java.lang.String)\u003e(\"com.google.android.gms.appid-no-backup\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: void checkForRestore(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)\u003e($r2)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: void checkForRestore(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: void checkForRestore(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: boolean isEmpty()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.Store: boolean isEmpty()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "sourceStatement": "specialinvoke $r11.\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e($param0, $param1, $param4, $param5, $param6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzz: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzz: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.cloudmessaging.zzz: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzz: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003ccom.google.android.gms.cloudmessaging.Rpc: void \u003cinit\u003e(android.content.Context)\u003e($r7)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.gms.cloudmessaging.zzr: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzy: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.Rpc,android.os.Looper)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003ccom.google.android.gms.cloudmessaging.zzy: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.Rpc,android.os.Looper)\u003e(this, $r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzy: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.Rpc,android.os.Looper)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zze: void \u003cinit\u003e(android.os.Looper)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.internal.cloudmessaging.zze: void \u003cinit\u003e(android.os.Looper)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.android.gms.cloudmessaging.Rpc,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.android.gms.cloudmessaging.Rpc,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e($param0, $param1, $r6, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.android.gms.cloudmessaging.Rpc,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r12.\u003ccom.google.firebase.iid.RequestDeduplicator: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e($param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$0: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/FirebaseApp;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/iid/FirebaseInstanceId;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/UserAgentPublisher;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r6 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatInfo;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/installations/FirebaseInstallationsApi;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/android/datatransport/TransportFactory;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e($r2)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e(com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e(com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e(com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r2.\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e($param0)",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e",
      "sourceStatement": "this \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder setApplicationContext(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r2.\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: void checkBuilderRequirement(java.lang.Object,java.lang.Class)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: void checkBuilderRequirement(java.lang.Object,java.lang.Class)\u003e($r1, class \"Landroid/content/Context;\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e($r1, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e($r4)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void \u003cinit\u003e(javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void \u003cinit\u003e(javax.inject.Provider)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void \u003cinit\u003e(javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cinit\u003e(java.lang.Object)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cinit\u003e(java.lang.Object)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cinit\u003e(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"instance cannot be null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cinit\u003e(java.lang.Object)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void \u003cinit\u003e(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r5, $r6, $r7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory create(javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory create(javax.inject.Provider,javax.inject.Provider)\u003e($r1, $r8)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory create(javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e($r9)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r1, $r10, $r11)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()\u003e",
      "sourceStatement": "$r13 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory access$000()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory access$000()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r14 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r6, $r7, $r13, $r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e($r14)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory create(javax.inject.Provider)\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory create(javax.inject.Provider)\u003e($r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory create(javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: void \u003cinit\u003e(javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: void \u003cinit\u003e(javax.inject.Provider)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: void \u003cinit\u003e(javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r16 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r1, $r2, $r15, $r7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r18 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r1, $r2, $r16, $r17, $r17)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r21 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r17, $r19, $r2, $r20, $r1, $r2, $r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3, $param4, $param5, $param6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r22 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r1, $r2, $r17, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "$r23 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($r6, $r7, $r1, $r2, $r17)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: void \u003cinit\u003e(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)\u003e($r23)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.TransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r2.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.WallTimeClock: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.time.WallTimeClock: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.WallTimeClock: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.UptimeClock: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.time.UptimeClock: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.UptimeClock: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)\u003e($r4, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory newInstance(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory newInstance(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e($r3, $r4, $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory newInstance(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.CreationContextFactory: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry newInstance(android.content.Context,java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry newInstance(android.content.Context,java.lang.Object)\u003e($r3, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry newInstance(android.content.Context,java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e($param0, $r3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e($r3, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void \u003cinit\u003e(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider,com.google.android.datatransport.runtime.backends.CreationContextFactory)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder builder()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxStorageSizeInBytes(long)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxStorageSizeInBytes(long)\u003e(10485760L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setLoadBatchSize(int)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setLoadBatchSize(int)\u003e(200)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setCriticalSectionEnterTimeoutMs(int)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setCriticalSectionEnterTimeoutMs(int)\u003e(10000)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setEventCleanUpAge(long)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setEventCleanUpAge(long)\u003e(604800000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxBlobByteSizePerRow(int)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxBlobByteSizePerRow(int)\u003e(81920)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)\u003e($l0, $i1, $i2, $l3, $i4, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void \u003cinit\u003e(long,int,int,long,int)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Integer get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Integer get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Integer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: int schemaVersion()\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: int schemaVersion()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: int schemaVersion()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager newInstance(android.content.Context,java.lang.String,int)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager newInstance(android.content.Context,java.lang.String,int)\u003e($r3, $r4, $i0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager newInstance(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cinit\u003e(android.content.Context,java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void \u003cinit\u003e(android.content.Context,java.lang.String,int)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.Object,java.lang.Object)\u003e($r3, $r4, $r2, $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e(\"proto\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Encoding: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.Encoding: void \u003cinit\u003e(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Encoding: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)\u003e($param0, $param1, $r5, $r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder builder()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e(\"DEFAULT\", 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e(\"VERY_LOW\", 1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.Priority: void \u003cinit\u003e(java.lang.String,int)\u003e(\"HIGHEST\", 2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e(30000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e(86400000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set,com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$1)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set,com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$1)\u003e($l0, $l1, $r1, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set,com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$1)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void \u003cinit\u003e(long,long,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e($r2, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e(1000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e(86400000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e($r2, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)\u003e(86400000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)\u003e(86400000L)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e(\"NETWORK_UNMETERED\", 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e(\"DEVICE_IDLE\", 1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void \u003cinit\u003e(java.lang.String,int)\u003e(\"DEVICE_CHARGING\", 2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: java.util.Set immutableSetOf(java.lang.Object[])\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: java.util.Set immutableSetOf(java.lang.Object[])\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)\u003e($r2, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder setClock(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder setClock(com.google.android.datatransport.runtime.time.Clock)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig create(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig create(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e($r1, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig create(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,java.util.Map)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r1, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e($r3, $r4, $r5, $r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e($param0, $param1, $param2, $param3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)\u003e($r4, \"Cannot return null from a non-@Nullable @Provides method\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e($r3, $r4, $r5, $r6, $r7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.DefaultScheduler: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.InstanceFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader newInstance(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader newInstance(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e($r3, $r4, $r5, $r6, $r7, $r8, $r9)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader newInstance(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e($param0, $param1, $param2, $param3, $param4, $param5, $param6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void \u003cinit\u003e(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object get()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003cjavax.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e($r3, $r4, $r5, $r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e($param0, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e($r3, $r4, $r5, $r6, $r7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.TransportRuntime: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: void \u003cinit\u003e(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e",
      "sourceStatement": "virtualinvoke $param4.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: void \u003cinit\u003e(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: void \u003cinit\u003e(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: void \u003cinit\u003e(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void execute(java.lang.Runnable)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void \u003cinit\u003e(java.lang.Runnable)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void \u003cinit\u003e(java.lang.Runnable)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void \u003cinit\u003e(java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void execute(java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor: void execute(java.lang.Runnable)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e(\"hts/frbslgiggolai.o/0clgbthfra\u003dsnpoo\", \"tp:/ieaeogn.ogepscmvc/o/ac?omtjo_rt3\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e(\"hts/frbslgigp.ogepscmv/ieo/eaybtho\", \"tp:/ieaeogn-agolai.o/1frlglgc/aclg\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)\u003e(\"AzSCki82AwsLzKd5O8zo\", \"IayckHiZRO1EFl1aGoK\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e(\"proto\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e(\"json\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e($r0, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.android.datatransport.cct.CCTDestination: void \u003cinit\u003e(java.lang.String,java.lang.String)\u003e($r1, $r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: java.util.Set getSupportedEncodings()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003ccom.google.android.datatransport.runtime.EncodedDestination: java.util.Set getSupportedEncodings()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)\u003e($r0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: java.lang.String getName()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003ccom.google.android.datatransport.runtime.Destination: java.lang.String getName()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r4.\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: byte[] getExtras()\u003e",
      "sourceStatement": "$r6 \u003d interfaceinvoke $param0.\u003ccom.google.android.datatransport.runtime.Destination: byte[] getExtras()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: byte[] getExtras()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.cct.CCTDestination: byte[] asByteArray()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.android.datatransport.cct.CCTDestination: byte[] asByteArray()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r4.\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r4.\u003ccom.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.AutoValue_TransportContext$1)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.AutoValue_TransportContext$1)\u003e($r1, $r6, $r4, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.AutoValue_TransportContext$1)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.AutoValue_TransportContext: void \u003cinit\u003e(java.lang.String,byte[],com.google.android.datatransport.Priority)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.datatransport.runtime.TransportContext: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportContext: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(com.google.android.datatransport.runtime.Destination)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportFactoryImpl: void \u003cinit\u003e(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.datatransport.runtime.TransportFactoryImpl: void \u003cinit\u003e(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)\u003e($r3, $r7, this)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportFactoryImpl: void \u003cinit\u003e(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)\u003e($r8)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)\u003e(\"json\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportFactoryImpl: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003ccom.google.android.datatransport.TransportFactory: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer)\u003e(\"test\", class \"Ljava/lang/String;\", $r1, $r0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportFactoryImpl: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer)\u003e",
      "targetMethod": "\u003ccom.google.android.datatransport.runtime.TransportImpl: void \u003cinit\u003e(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer,com.google.android.datatransport.runtime.TransportInternal)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.android.datatransport.runtime.TransportImpl: void \u003cinit\u003e(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer,com.google.android.datatransport.runtime.TransportInternal)\u003e($r1, $param0, $param2, $param3, $r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.datatransport.runtime.TransportImpl: void \u003cinit\u003e(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer,com.google.android.datatransport.runtime.TransportInternal)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/events/Subscriber;\")",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e($r3, $r4, $r5, $r6, $r7, $r8, $r9)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$AutoInit: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.events.Subscriber)\u003e",
      "sourceStatement": "specialinvoke $r10.\u003ccom.google.firebase.messaging.FirebaseMessaging$AutoInit: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.events.Subscriber)\u003e(this, $param6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$AutoInit: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newInitExecutor()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newInitExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newInitExecutor()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e(\"Firebase-Messaging-Init\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$0: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.iid.FirebaseInstanceId)\u003e",
      "sourceStatement": "specialinvoke $r13.\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$0: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.iid.FirebaseInstanceId)\u003e(this, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$0: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging,com.google.firebase.iid.FirebaseInstanceId)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r12.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r13)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r12.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r13)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.zza: void \u003cinit\u003e(java.lang.Runnable,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.common.util.concurrent.zza: void \u003cinit\u003e(java.lang.Runnable,int)\u003e($param0, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.concurrent.zza: void \u003cinit\u003e(java.lang.Runnable,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.firebase.iid.Metadata: void \u003cinit\u003e(android.content.Context)\u003e($r11)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newTopicsSyncExecutor()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newTopicsSyncExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.ScheduledExecutorService newTopicsSyncExecutor()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e(\"Firebase-Messaging-Topics-Io\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r14 \u003d staticinvoke \u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e($param0, $param1, $r3, $param2, $param3, $param4, $r11, $r12)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "sourceStatement": "$r14 \u003d staticinvoke \u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e($param0, $param1, $r3, $param2, $param3, $param4, $r11, $r12)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003ccom.google.firebase.iid.GmsRpc: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi)\u003e($param0, $param2, $param3, $param4, $param5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e($param1, $param2, $r7, $param6, $param7)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber$$Lambda$0: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.messaging.TopicsSubscriber$$Lambda$0: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e($param3, $param4, $param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber$$Lambda$0: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.android.gms.tasks.Task createInstance(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e($param4, $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Executor must not be null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param1, \"Callback must not be null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Task: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.Task: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Task: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzy: void \u003cinit\u003e(com.google.android.gms.tasks.zzu,java.util.concurrent.Callable)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.zzy: void \u003cinit\u003e(com.google.android.gms.tasks.zzu,java.util.concurrent.Callable)\u003e($r3, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzy: void \u003cinit\u003e(com.google.android.gms.tasks.zzu,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzy: void run()\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber$$Lambda$0: java.lang.Object call()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsSubscriber lambda$createInstance$0$TopicsSubscriber(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsSubscriber lambda$createInstance$0$TopicsSubscriber(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e($r6, $r1, $r2, $r3, $r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsSubscriber lambda$createInstance$0$TopicsSubscriber(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsStore: void \u003cinit\u003e(android.content.SharedPreferences,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.messaging.TopicsStore: void \u003cinit\u003e(android.content.SharedPreferences,java.util.concurrent.Executor)\u003e($r5, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsStore: void \u003cinit\u003e(android.content.SharedPreferences,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsStore: com.google.firebase.messaging.TopicsStore getInstance(android.content.Context,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsStore: void initStore()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.messaging.TopicsStore: void initStore()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsStore: void initStore()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e($r3, \"topic_operation_queue\", \",\", $r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: void \u003cinit\u003e(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.messaging.SharedPreferencesQueue: void \u003cinit\u003e(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e($param0, \"topic_operation_queue\", \",\", $param3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: void \u003cinit\u003e(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: com.google.firebase.messaging.SharedPreferencesQueue createInstance(android.content.SharedPreferences,java.lang.String,java.lang.String,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.SharedPreferencesQueue: void initQueue()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.messaging.SharedPreferencesQueue: void initQueue()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: com.google.firebase.messaging.TopicsSubscriber lambda$createInstance$0$TopicsSubscriber(android.content.Context,java.util.concurrent.ScheduledExecutorService,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.iid.GmsRpc)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.messaging.TopicsStore,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.firebase.messaging.TopicsSubscriber: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.messaging.TopicsStore,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e($param2, $param3, $r6, $param4, $param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.TopicsSubscriber: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.iid.Metadata,com.google.firebase.messaging.TopicsStore,com.google.firebase.iid.GmsRpc,android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzy: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzc()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzc()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzn: void \u003cinit\u003e(com.google.android.gms.tasks.zzm,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.gms.tasks.zzn: void \u003cinit\u003e(com.google.android.gms.tasks.zzm,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzn: void \u003cinit\u003e(com.google.android.gms.tasks.zzm,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzn: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$0: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r12.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r13)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newTopicsSyncTriggerExecutor()\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newTopicsSyncTriggerExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newTopicsSyncTriggerExecutor()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newCachedSingleThreadExecutor(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newCachedSingleThreadExecutor(java.lang.String)\u003e(\"Firebase-Messaging-Trigger-Topics-Io\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FcmExecutors: java.util.concurrent.Executor newCachedSingleThreadExecutor(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e(\"Firebase-Messaging-Trigger-Topics-Io\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$1: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging)\u003e",
      "sourceStatement": "specialinvoke $r16.\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$1: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$1: void \u003cinit\u003e(com.google.firebase.messaging.FirebaseMessaging)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: void \u003cinit\u003e(com.google.firebase.FirebaseApp,com.google.firebase.iid.FirebaseInstanceId,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider,com.google.firebase.installations.FirebaseInstallationsApi,com.google.android.datatransport.TransportFactory,com.google.firebase.events.Subscriber)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "sourceStatement": "virtualinvoke $r14.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e($r15, $r16)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzx: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzx: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.tasks.zzx: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzx: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzx: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d interfaceinvoke $r0.\u003ccom.google.android.gms.tasks.zzw: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzx: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zzb(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zzb(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzm: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzm: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzm: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.EventBus: void enablePublishingAndFlushPending()\u003e",
      "sourceStatement": "virtualinvoke $r8.\u003ccom.google.firebase.components.EventBus: void enablePublishingAndFlushPending()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object,com.google.android.gms.common.internal.zzu)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object,com.google.android.gms.common.internal.zzu)\u003e($param0, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object,com.google.android.gms.common.internal.zzu)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: void \u003cinit\u003e(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"applicationId\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"apiKey\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"databaseUrl\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"gcmSenderId\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"storageBucket\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)\u003e(\"projectId\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String toString()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)\u003e($param0, $r3, $i0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider$SimplePathStrategy: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.FileProvider: android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.content.FileProvider: android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int)\u003e($param0, $param1, $r4, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])\u003e($r6, $r11)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)\u003e($r7, $r6)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003candroidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)\u003e($param0, null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003candroidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($r1)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e(\"Startup\")",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e(\"Startup\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e($r10, $r4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: boolean isEnabled()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.tracing.Trace: boolean isEnabled()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.util.List dependencies()\u003e",
      "targetMethod": "\u003ckotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ckotlin.collections.CollectionsKt: java.util.List emptyList()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.EmptyList: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "GENERIC_FAKE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"context\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r2, \"getInstance(context)\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"context\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"null cannot be cast to non-null type android.app.Application\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.LifecycleRegistry$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void \u003cinit\u003e(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"provider\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void \u003cinit\u003e(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void \u003cinit\u003e(androidx.lifecycle.LifecycleOwner,boolean)\u003e($param0, true)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"DESTROYED\", 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"INITIALIZED\", 1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"CREATED\", 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"STARTED\", 3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"RESUMED\", 4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $values()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $values()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.lifecycle.ProcessLifecycleOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: void \u003cinit\u003e(androidx.lifecycle.ProcessLifecycleOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"context\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"context\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_CREATE\", 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_START\", 1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_RESUME\", 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_PAUSE\", 3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_STOP\", 4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_DESTROY\", 5)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_ANY\", 6)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $values()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $values()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.lifecycle.Lifecycle$Event$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e(\"handleLifecycleEvent\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e()",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.TaskExecutor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor$1: void \u003cinit\u003e(androidx.arch.core.executor.DefaultTaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.arch.core.executor.TaskExecutor: boolean isMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event$WhenMappings: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: int size()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003candroidx.arch.core.internal.FastSafeIterableMap: int size()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "androidx.startup.InitializationProvider",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e($param0, \"null cannot be cast to non-null type android.app.Application\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "targetMethod": "\u003candroidx.tracing.TraceApi18Impl: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.TraceApi18Impl: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Boolean create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Boolean create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat$Config: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultGlyphChecker: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat$Config: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"metadataLoader cannot be null.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat$Config: androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig: androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int)\u003e(1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Boolean create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config)\u003e($r2)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Boolean create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompat$Config)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.collection.ArraySet: void \u003cinit\u003e(int)\u003e(0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat$CompatInternal: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompat)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompat$Config)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: void loadMetadata()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.emoji2.text.EmojiCompat: void loadMetadata()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void loadMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: int getLoadState()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompat: int getLoadState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: java.lang.Boolean create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object initializeComponent(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.startup.AppInitializer: java.lang.Object initializeComponent(java.lang.Class)\u003e(class \"Landroidx/lifecycle/ProcessLifecycleInitializer;\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object initializeComponent(java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003candroidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$1: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void delayUntilFirstResume(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"observer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e(\"addObserver\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void \u003cinit\u003e(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"initialState\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void \u003cinit\u003e(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void \u003cinit\u003e(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void \u003cinit\u003e(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycling: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycling: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"object\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void \u003cinit\u003e(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void \u003cinit\u003e(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)\u003e($r2, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void \u003cinit\u003e(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"defaultLifecycleObserver\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void \u003cinit\u003e(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e($param0, $r7)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$Entry: void \u003cinit\u003e(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r11.\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e($r1, $r8)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"state1\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r11.\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e($r1, $r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r5.\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r11.\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"state\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion$WhenMappings: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($r9, $r12)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $param1.\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r5.\u003candroidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)\u003e($r3, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"source\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.profileinstaller.ProfileInstallerInitializer: androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void delayAfterFirstFrame(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.profileinstaller.ProfileInstallerInitializer: void delayAfterFirstFrame(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2: void \u003cinit\u003e(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void delayAfterFirstFrame(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0: void \u003cinit\u003e(java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Result: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$$ExternalSyntheticLambda2: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.MenuHostHelper: void \u003cinit\u003e(java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e(this)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.savedstate.SavedStateRegistryController$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController$Companion: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003candroidx.savedstate.SavedStateRegistryController$Companion: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController$Companion: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController$Companion: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.savedstate.SavedStateRegistryController: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistryOwner,kotlin.jvm.internal.DefaultConstructorMarker)\u003e($param0, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.savedstate.SavedStateRegistry$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$1: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher: void \u003cinit\u003e(java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultRegistry: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$3: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r11.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void \u003cinit\u003e(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$4: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r11.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r13)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$5: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r11.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r14)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.Recreator$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.savedstate.Recreator$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performAttach()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$savedstate_release(androidx.lifecycle.Lifecycle)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.savedstate.SavedStateRegistry: void performAttach$savedstate_release(androidx.lifecycle.Lifecycle)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$savedstate_release(androidx.lifecycle.Lifecycle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"lifecycle\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistry)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$savedstate_release(androidx.lifecycle.Lifecycle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e(this)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String)\u003e(\"androidx.lifecycle.internal.SavedStateHandlesProvider\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$SupportRemove: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"savedStateRegistry\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"viewModelStoreOwner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: void \u003cinit\u003e(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e(0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void \u003cinit\u003e(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ckotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"initializer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e",
      "targetMethod": "\u003ckotlin.SynchronizedLazyImpl: void \u003cinit\u003e(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ckotlin.SynchronizedLazyImpl: void \u003cinit\u003e(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e($param0, null, 2, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.SynchronizedLazyImpl: void \u003cinit\u003e(kotlin.jvm.functions.Function0,java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"initializer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.SynchronizedLazyImpl: void \u003cinit\u003e(kotlin.jvm.functions.Function0,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.UNINITIALIZED_VALUE: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e(\"androidx.lifecycle.internal.SavedStateHandlesProvider\", $r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"provider\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void \u003cinit\u003e(androidx.lifecycle.SavedStateHandlesProvider)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"provider\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void \u003cinit\u003e(androidx.lifecycle.SavedStateHandlesProvider)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e($r9)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r16 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$$ExternalSyntheticLambda1: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "sourceStatement": "virtualinvoke $r16.\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e(\"android:support:activity-result\", $r17)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.activity.ComponentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e($r18)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e",
      "targetMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentHostCallback: void \u003cinit\u003e(androidx.fragment.app.FragmentActivity)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentContainer: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentHostCallback: void \u003cinit\u003e(android.app.Activity,android.content.Context,android.os.Handler,int)\u003e($param0, $param0, $r2, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentContainer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentStore: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentLayoutInflaterFactory: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager$1: void \u003cinit\u003e(androidx.fragment.app.FragmentManager,boolean)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003candroidx.fragment.app.FragmentManager$1: void \u003cinit\u003e(androidx.fragment.app.FragmentManager,boolean)\u003e(this, false)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedCallback: void \u003cinit\u003e(boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$3: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$4: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentHostCallback: void \u003cinit\u003e(android.app.Activity,android.content.Context,android.os.Handler,int)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param1, \"context \u003d\u003d null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentHostCallback: void \u003cinit\u003e(android.app.Activity,android.content.Context,android.os.Handler,int)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param2, \"handler \u003d\u003d null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"callbacks \u003d\u003d null\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void \u003cinit\u003e(androidx.fragment.app.FragmentHostCallback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void init()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentActivity: void init()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void init()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1: void \u003cinit\u003e(androidx.fragment.app.FragmentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void init()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e(\"android:support:lifecycle\", $r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.fragment.app.FragmentActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void init()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.fragment.app.FragmentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initDelegate()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void initDelegate()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initDelegate()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$1: void \u003cinit\u003e(androidx.appcompat.app.AppCompatActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initDelegate()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e(\"androidx:appcompat\", $r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void \u003cinit\u003e(androidx.appcompat.app.AppCompatActivity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initDelegate()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)\u003e(this, this)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.app.Activity,androidx.appcompat.app.AppCompatCallback)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)\u003e($param0, null, $param1, $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$2: void \u003cinit\u003e(androidx.appcompat.app.AppCompatDelegateImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $param3.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r7.\u003candroidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)\u003e($r9)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)\u003e($param0, null)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.AppCompatDrawableManager: void preload()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void \u003cinit\u003e(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: void preload()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.AppCompatDrawableManager: void preload()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: void preload()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.collection.LruCache: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void \u003cinit\u003e(int)\u003e(6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.LruCache: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)\u003e($r0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: void preload()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)\u003e",
      "sourceStatement": "virtualinvoke $r0.\u003candroidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()\u003e",
      "sourceStatement": "$i0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003candroidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)\u003e($param0, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration)\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003candroidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration)\u003e($param0, $r11)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean)\u003e",
      "sourceStatement": "$r5 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean)\u003e($param0, $i0, $r5, true)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)\u003e",
      "sourceStatement": "virtualinvoke $r13.\u003candroidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)\u003e($r13)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: boolean isEmptyConfiguration(android.content.res.Configuration)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.view.ContextThemeWrapper: boolean isEmptyConfiguration(android.content.res.Configuration)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: android.content.Context getBaseContext()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.Context getBaseContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void initializeTheme()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: void initializeTheme()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void initializeTheme()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void initializeTheme()\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: android.content.Context getBaseContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.Context getBaseContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void initializeTheme()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)\u003e($r1, $i0, $z0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setTheme(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setTheme(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.app.AppCompatDelegate: void setTheme(int)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)\u003e($param0, $r5)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"callback\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003cbr.com.winker.wl.gescon.MainActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.splashscreen.SplashScreen: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e(this)",
      "kind": "CLINIT",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.core.splashscreen.SplashScreen$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003candroidx.core.splashscreen.SplashScreen$Companion: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void \u003cinit\u003e(android.app.Activity)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.core.splashscreen.SplashScreen: void \u003cinit\u003e(android.app.Activity,kotlin.jvm.internal.DefaultConstructorMarker)\u003e($param0, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl$$ExternalSyntheticLambda0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$hierarchyListener$1: void \u003cinit\u003e(androidx.core.splashscreen.SplashScreen$Impl31,android.app.Activity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Companion: androidx.core.splashscreen.SplashScreen installSplashScreen(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void access$install(androidx.core.splashscreen.SplashScreen)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.SplashScreen: void access$install(androidx.core.splashscreen.SplashScreen)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void access$install(androidx.core.splashscreen.SplashScreen)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void install()\u003e",
      "sourceStatement": "specialinvoke $param0.\u003candroidx.core.splashscreen.SplashScreen: void install()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void install()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void install()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.core.splashscreen.SplashScreen$Impl: void install()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void install()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void install()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r2, \"activity.theme\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void install()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void setPostSplashScreenTheme(android.content.res.Resources$Theme,android.util.TypedValue)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setPostSplashScreenTheme(android.content.res.Resources$Theme,android.util.TypedValue)\u003e($r2, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void setPostSplashScreenTheme(android.content.res.Resources$Theme,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"currentTheme\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void setPostSplashScreenTheme(android.content.res.Resources$Theme,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"typedValue\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void install()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003candroidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e($param0, $param1, $param2, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r4.\u003candroidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e($param0, $param1, $param2, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003candroidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e(null, $param0, $param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPreferences: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e(\"CordovaAllowListPlugin\", \"org.apache.cordova.AllowListPlugin\", true)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean,org.apache.cordova.CordovaPlugin)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean,org.apache.cordova.CordovaPlugin)\u003e($param0, $param1, $param2, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean,org.apache.cordova.CordovaPlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e(\"CordovaSplashScreenPlugin\", \"org.apache.cordova.SplashScreenPlugin\", true)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void handleEndTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void handleEndTag(org.xmlpull.v1.XmlPullParser)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: void set(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.CordovaPreferences: void set(java.lang.String,java.lang.String)\u003e($r2, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: org.apache.cordova.CordovaPreferences getPreferences()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003corg.apache.cordova.ConfigXmlParser: org.apache.cordova.CordovaPreferences getPreferences()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: void setPreferencesBundle(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.CordovaPreferences: void setPreferencesBundle(android.os.Bundle)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrl()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r1.\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrl()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrl()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void setStartUrl(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void setStartUrl(java.lang.String)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void setStartUrl(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"AndroidInsecureFileModeEnabled\", false)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"scheme\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"hostname\", $r2)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r4, $r3)",
      "kind": "CLINIT",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.lang.String getLaunchUrlPrefix()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r4, $r3)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadConfig()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: java.util.ArrayList getPluginEntries()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r1.\u003corg.apache.cordova.ConfigXmlParser: java.util.ArrayList getPluginEntries()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"loglevel\", \"ERROR\")",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void setLogLevel(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void setLogLevel(java.lang.String)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void i(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void i(java.lang.String,java.lang.String)\u003e($r4, \"Apache Cordova native platform version 11.0.0 is starting\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r4, \"CordovaActivity.onCreate()\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"ShowTitle\", false)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"SetFullscreen\", false)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"Fullscreen\", false)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"state\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performRestore$savedstate_release(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.savedstate.SavedStateRegistry: void performRestore$savedstate_release(android.os.Bundle)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity$$ExternalSyntheticLambda0: void onContextAvailable(android.content.Context)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$$ExternalSyntheticLambda0: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void lambda$new$1$androidx-activity-ComponentActivity(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.activity.ComponentActivity: void lambda$new$1$androidx-activity-ComponentActivity(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void lambda$new$1$androidx-activity-ComponentActivity(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void lambda$new$1$androidx-activity-ComponentActivity(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e(\"android:support:activity-result\")",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void onContextAvailable(android.content.Context)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void lambda$init$1$androidx-fragment-app-FragmentActivity(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)\u003e(null)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e($r2, $r2, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r36.\u003candroidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)\u003e",
      "sourceStatement": "virtualinvoke $r8.\u003candroidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)\u003e($r7, $r9)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void \u003cinit\u003e(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void \u003cinit\u003e(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $param1.\u003candroidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)\u003e",
      "sourceStatement": "virtualinvoke $param1.\u003candroidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e",
      "sourceStatement": "$r13 \u003d interfaceinvoke $r12.\u003candroidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void ensureViewModelStore()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.activity.ComponentActivity: void ensureViewModelStore()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void ensureViewModelStore()\u003e",
      "targetMethod": "\u003candroid.app.Activity: java.lang.Object getLastNonConfigurationInstance()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: java.lang.Object getLastNonConfigurationInstance()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelStore: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003candroidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)\u003e($r13)",
      "kind": "CLINIT",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$Factory$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"store\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"factory\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e($param0, $param1, null, 4, null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.CreationExtras: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"store\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"factory\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param2, \"defaultCreationExtras\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r0.\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)\u003e(class \"Landroidx/fragment/app/FragmentManagerViewModel;\")",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"modelClass\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e($r2, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"modelClass\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e(androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"initialExtras\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e(androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.CreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e(androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.CreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003candroidx.lifecycle.viewmodel.CreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$NewInstanceFactory: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r8.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e($r10, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.CreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r6.\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e($param1, $r9)",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"modelClass\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"extras\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke this.\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModel: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.fragment.app.FragmentManagerViewModel: void \u003cinit\u003e(boolean)\u003e(true)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModel: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)\u003e($param0, $r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"key\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"viewModel\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: boolean isStateSaved()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.fragment.app.FragmentManager: boolean isStateSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r11.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)\u003e",
      "sourceStatement": "virtualinvoke $r14.\u003candroidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)\u003e($r11)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $r15.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e",
      "sourceStatement": "virtualinvoke $r16.\u003candroidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)\u003e(\"android:support:fragments\", $r27)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "sourceStatement": "$r17 \u003d virtualinvoke $r16.\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e(\"android:support:fragments\")",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()\u003e",
      "sourceStatement": "$r20 \u003d interfaceinvoke $r19.\u003candroidx.activity.result.ActivityResultRegistryOwner: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.contract.ActivityResultContract: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$7: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e",
      "sourceStatement": "$r24 \u003d virtualinvoke $r20.\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e($r23, $r29, $r30)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: int generateRandomNumber()\u003e",
      "sourceStatement": "$i0 \u003d specialinvoke this.\u003candroidx.activity.result.ActivityResultRegistry: int generateRandomNumber()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)\u003e($i0, $param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultRegistry$CallbackAndContract: void \u003cinit\u003e(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.ActivityResultLauncher: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$8: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e",
      "sourceStatement": "$r24 \u003d virtualinvoke $r20.\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e($r23, $r31, $r32)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager$9: void \u003cinit\u003e(androidx.fragment.app.FragmentManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)\u003e",
      "targetMethod": "\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e",
      "sourceStatement": "$r24 \u003d virtualinvoke $r20.\u003candroidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)\u003e($r22, $r33, $r34)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatDelegate: void installViewFactory()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()\u003e",
      "targetMethod": "\u003candroidx.core.view.LayoutInflaterCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)\u003e($r2, this)",
      "kind": "CLINIT",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()\u003e",
      "targetMethod": "\u003candroidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)\u003e($r2, this)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e(\"androidx:appcompat\")",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e(false)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()\u003e",
      "sourceStatement": "$i0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)\u003e($r1, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)\u003e($i1, $param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean)\u003e($r1, $param0, null, false)",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode(android.content.Context)\u003e",
      "sourceStatement": "$z2 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode(android.content.Context)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r2.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.WindowCallbackWrapper: void \u003cinit\u003e(android.view.Window$Callback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])\u003e($r5, null, $r6)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintTypedArray: void \u003cinit\u003e(android.content.Context,android.content.res.TypedArray)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)\u003e(0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r2.\u003candroidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e($r3, $param0, true)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e($param0, $param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e($param0, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e($param0, $param1, false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)\u003e",
      "sourceStatement": "$l1 \u003d staticinvoke \u003candroidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)\u003e($param0, $l1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r5.\u003candroidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)\u003e(this, $param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)\u003e($param0, $param1, $param2, $r3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r4.\u003candroidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r3, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r3, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r3, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "$z1 \u003d interfaceinvoke $r5.\u003candroidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)\u003e($param0, $param1, $param3)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke this.\u003candroidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e($param0, $param1, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r2.\u003candroidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e($param0, $param1, $param2)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r4, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r4, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)\u003e($r4, $param1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.DrawableUtils: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e($r3)",
      "kind": "CLINIT",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.core.app.NavUtils: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)\u003e($r5)",
      "kind": "CLINIT",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)\u003e($param0, $r1)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: java.util.Iterator iterator()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.collection.ArraySet: java.util.Iterator iterator()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: java.util.Iterator iterator()\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: androidx.collection.MapCollections getCollection()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.collection.ArraySet: androidx.collection.MapCollections getCollection()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.MapCollections: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: java.util.Iterator iterator()\u003e",
      "targetMethod": "\u003candroidx.collection.MapCollections: java.util.Set getKeySet()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.collection.MapCollections: java.util.Set getKeySet()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.MapCollections$KeySet: void \u003cinit\u003e(androidx.collection.MapCollections)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.MapCollections$KeySet: java.util.Iterator iterator()\u003e",
      "targetMethod": "\u003candroidx.collection.MapCollections$ArrayIterator: void \u003cinit\u003e(androidx.collection.MapCollections,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.collection.MapCollections$ArrayIterator: void \u003cinit\u003e(androidx.collection.MapCollections,int)\u003e($r2, 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.MapCollections$ArrayIterator: void \u003cinit\u003e(androidx.collection.MapCollections,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.MapCollections$ArrayIterator: void \u003cinit\u003e(androidx.collection.MapCollections,int)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet$1: int colGetSize()\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $param0.\u003candroidx.collection.MapCollections: int colGetSize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: int hashCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003cjava.lang.Object: int hashCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: int indexOf(java.lang.Object,int)\u003e",
      "sourceStatement": "$i1 \u003d specialinvoke this.\u003candroidx.collection.ArraySet: int indexOf(java.lang.Object,int)\u003e($param0, $i0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: void allocArrays(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.collection.ArraySet: void allocArrays(int)\u003e($i3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.ArraySet: boolean add(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)\u003e($r2, $r3, $i2)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.ReportFragment$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity",
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void registerIn(android.app.Activity)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void registerIn(android.app.Activity)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity",
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void registerIn(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity",
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.activity.ComponentActivity",
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.activity.ComponentActivity",
        "androidx.core.app.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "androidx.activity.ComponentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r3, \"observerMap.iteratorWithAdditions()\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r8.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r8.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e($r9)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r8.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r13 \u003d virtualinvoke $r12.\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)\u003e($r9)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r8.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r13)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchCreate()\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.fragment.app.FragmentController: void dispatchCreate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchCreate()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchCreate()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void dispatchCreate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchCreate()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchCreate()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e(1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: void dispatchStateChange(int)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentStore: void dispatchStateChange(int)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void moveToState(int,boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.fragment.app.FragmentManager: void moveToState(int,boolean)\u003e($param0, false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void moveToState(int,boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: void moveToExpectedState()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentStore: void moveToExpectedState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void moveToState(int,boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void startPendingDeferredFragments()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void startPendingDeferredFragments()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void startPendingDeferredFragments()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void ensureExecReady(boolean)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void ensureExecReady(boolean)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void ensureExecReady(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r1.\u003candroidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003candroidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)\u003e($r2, $r1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: int getBackStackEntryCount()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.fragment.app.FragmentManager: int getBackStackEntryCount()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedCallback: void setEnabled(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.activity.OnBackPressedCallback: void setEnabled(boolean)\u003e($z1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void doPendingDeferredStart()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void doPendingDeferredStart()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: void burpActive()\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.fragment.app.FragmentStore: void burpActive()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaInterfaceImpl makeCordovaInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: void \u003cinit\u003e(androidx.appcompat.app.AppCompatActivity,java.util.concurrent.ExecutorService)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CallbackMap: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003cbr.com.winker.wl.gescon.MainActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003cbr.com.winker.wl.gescon.MainActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cbr.com.winker.wl.gescon.MainActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke this.\u003cbr.com.winker.wl.gescon.MainActivity: void loadUrl(java.lang.String)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: void init()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebView makeWebView()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebView makeWebView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebView makeWebView()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebViewEngine makeWebViewEngine()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebViewEngine makeWebViewEngine()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: org.apache.cordova.CordovaWebViewEngine makeWebViewEngine()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)\u003e(this, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $param1.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"webview\", $r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebView: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.engine.SystemWebView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet)\u003e($param0, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: android.content.Context getBaseContext()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.appcompat.view.ContextThemeWrapper: android.content.Context getBaseContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemCookieManager: void \u003cinit\u003e(android.webkit.WebView)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void \u003cinit\u003e(org.apache.cordova.CordovaWebViewEngine)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void \u003cinit\u003e(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebView: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.view.View getView()\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebViewEngine: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebView: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebView: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: void setContentView(android.view.View)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)\u003e($r2, this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)\u003e($r2, this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()\u003e",
      "targetMethod": "\u003candroidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)\u003e($r2, this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)\u003e(1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e($param0, $param1, $param2, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e",
      "sourceStatement": "$z2 \u003d staticinvoke \u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e($param0, $param1, $param2, $param3, $z1, $z0, true, $z2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)\u003e($r5, $param3, $param5, $param6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)\u003e($r5, $param1, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e($param0, $param1, 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroid.view.View: void setId(int)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.widget.ViewStubCompat: void setId(int)\u003e($param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void setVisibility(int)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.widget.ViewStubCompat: void setVisibility(int)\u003e(8)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ViewStubCompat: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroid.view.View: void setWillNotDraw(boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.widget.ViewStubCompat: void setWillNotDraw(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.widget.ContentFrameLayout: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e($param0, $param1, 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$3: void \u003cinit\u003e(androidx.appcompat.app.AppCompatDelegateImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)\u003e($r7, $r21)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$$ExternalSyntheticLambda0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl$1: void \u003cinit\u003e(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ViewUtils: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)\u003e($r7)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)\u003e($r7)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroid.view.View: void setId(int)\u003e",
      "sourceStatement": "virtualinvoke $r14.\u003candroidx.appcompat.widget.ContentFrameLayout: void setId(int)\u003e(16908290)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$5: void \u003cinit\u003e(androidx.appcompat.app.AppCompatDelegateImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)\u003e",
      "sourceStatement": "virtualinvoke $r14.\u003candroidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)\u003e($r23)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)\u003e($i0, $i1, $i2, $i3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r3.\u003candroidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r3.\u003candroidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()\u003e",
      "targetMethod": "\u003candroid.view.View: void requestLayout()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.widget.ContentFrameLayout: void requestLayout()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)\u003e(0, false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)\u003e(108)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)\u003e($r1, $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onContentChanged()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean contains(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean contains(java.lang.String)\u003e(\"BackgroundColor\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean contains(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e($param0, null)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void createViews()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebView: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: boolean isInitialized()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e($r3, $r4, $r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void \u003cinit\u003e(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,java.util.Collection)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void \u003cinit\u003e(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,java.util.Collection)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void setPluginEntries(java.util.Collection)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: void setPluginEntries(java.util.Collection)\u003e($param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void setPluginEntries(java.util.Collection)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void addService(org.apache.cordova.PluginEntry)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: void addService(org.apache.cordova.PluginEntry)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003corg.apache.cordova.CordovaWebViewEngine: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaResourceApi: void \u003cinit\u003e(android.content.Context,org.apache.cordova.PluginManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$BridgeMode: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e($r13)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param2.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"DisallowOverscroll\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "sourceStatement": "interfaceinvoke $r9.\u003corg.apache.cordova.CordovaWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e(this, $param0, $r1, $r2, $r3, $r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebView: void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface)\u003e",
      "sourceStatement": "virtualinvoke $r9.\u003corg.apache.cordova.engine.SystemWebView: void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface)\u003e(this, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"hostname\", \"localhost\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder setDomain(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder setDomain(java.lang.String)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder setHttpAllowed(boolean)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder setHttpAllowed(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient$$ExternalSyntheticLambda0: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewClient,org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder addPathHandler(java.lang.String,androidx.webkit.WebViewAssetLoader$PathHandler)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader$Builder addPathHandler(java.lang.String,androidx.webkit.WebViewAssetLoader$PathHandler)\u003e(\"/\", $r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader$PathMatcher: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean,androidx.webkit.WebViewAssetLoader$PathHandler)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader build()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r3.\u003candroidx.webkit.WebViewAssetLoader$Builder: androidx.webkit.WebViewAssetLoader build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader: void \u003cinit\u003e(java.util.List)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebView: void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebView: void setWebViewClient(android.webkit.WebViewClient)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.engine.SystemWebView: void setWebViewClient(android.webkit.WebViewClient)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaDialogsHelper: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebView: void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebView: void setWebChromeClient(android.webkit.WebChromeClient)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.engine.SystemWebView: void setWebChromeClient(android.webkit.WebChromeClient)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.ServiceStarter: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.ServiceStarter: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.FirebaseApp getApp()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.FirebaseApp getApp()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void setSyncScheduledOrRunning(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003ccom.google.firebase.iid.FirebaseInstanceId: void setSyncScheduledOrRunning(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isGmsCorePresent()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isGmsCorePresent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isGmsCorePresent()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: boolean isGmscorePresent()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.google.firebase.iid.Metadata: boolean isGmscorePresent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: boolean isGmscorePresent()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: int getIidImplementation()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.Metadata: int getIidImplementation()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: int getIidImplementation()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: boolean hasAccessNetworkStatePermission(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.ServiceStarter: boolean hasAccessNetworkStatePermission(android.content.Context)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: boolean isDeviceConnected()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.SyncTask: boolean isDeviceConnected()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: boolean isDeviceConnected()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void \u003cinit\u003e(com.google.firebase.iid.SyncTask)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void \u003cinit\u003e(com.google.firebase.iid.SyncTask)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void registerReceiver()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void registerReceiver()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void registerReceiver()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isDebugLogEnabled()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isDebugLogEnabled()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void registerReceiver()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.iid.ServiceStarter: com.google.firebase.iid.ServiceStarter getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.SyncTask: android.content.Context getContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.ServiceStarter: boolean hasWakeLockPermission(android.content.Context)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: void setInitialScale(int)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebView: void setInitialScale(int)\u003e(0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003candroid.view.View: void setVerticalScrollBarEnabled(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebView: void setVerticalScrollBarEnabled(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: android.webkit.WebSettings getSettings()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebView: android.webkit.WebSettings getSettings()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"SystemWebViewEngine\", $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"AndroidInsecureFileModeEnabled\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"OverrideUserAgent\", null)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void initWebViewSettings()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"AppendUserAgent\", null)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine$1: void \u003cinit\u003e(org.apache.cordova.engine.SystemWebViewEngine)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e",
      "sourceStatement": "virtualinvoke $param5.\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e($r10)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e",
      "sourceStatement": "virtualinvoke $param5.\u003corg.apache.cordova.NativeToJsMessageQueue: void addBridgeMode(org.apache.cordova.NativeToJsMessageQueue$BridgeMode)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: void \u003cinit\u003e(org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void exposeJsInterface(android.webkit.WebView,org.apache.cordova.CordovaBridge)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.engine.SystemWebViewEngine: void exposeJsInterface(android.webkit.WebView,org.apache.cordova.CordovaBridge)\u003e($r9, $r13)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemExposedJsApi: void \u003cinit\u003e(org.apache.cordova.CordovaBridge)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void addService(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.PluginManager: void addService(java.lang.String,java.lang.String)\u003e(\"CoreAndroid\", \"org.apache.cordova.CoreAndroid\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void addService(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003corg.apache.cordova.PluginEntry: void \u003cinit\u003e(java.lang.String,java.lang.String,boolean)\u003e($param0, $param1, false)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void addService(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void addService(org.apache.cordova.PluginEntry)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: void addService(org.apache.cordova.PluginEntry)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void init()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.PluginManager: void init()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r1, \"init()\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onDestroy()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: void onDestroy()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void startupPlugins()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.PluginManager: void startupPlugins()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void startupPlugins()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin instantiatePlugin(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin instantiatePlugin(java.lang.String)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaPreferences getPreferences()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaPreferences getPreferences()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e($param0, $r7, $r8, $r9)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: void pluginInitialize()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void pluginInitialize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void \u003cinit\u003e(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void \u003cinit\u003e(org.apache.cordova.AllowListPlugin,org.apache.cordova.AllowListPlugin$1)\u003e(this, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r4.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebViewEngine: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void parse(android.content.Context)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleEndTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.ConfigXmlParser: void handleEndTag(org.xmlpull.v1.XmlPullParser)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e($r3, false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList$URLPattern: java.lang.String regexFromPattern(java.lang.String,boolean)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003corg.apache.cordova.AllowList$URLPattern: java.lang.String regexFromPattern(java.lang.String,boolean)\u003e($param0, false)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e($r1, false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r10.\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e(\"http\", $r3, $r8, $r9)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList$URLPattern: java.lang.String regexFromPattern(java.lang.String,boolean)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003corg.apache.cordova.AllowList$URLPattern: java.lang.String regexFromPattern(java.lang.String,boolean)\u003e($param1, false)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r10.\u003corg.apache.cordova.AllowList$URLPattern: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e(\"https\", $r3, $r8, $r9)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e(\"http://*/*\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e(\"https://*/*\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$300(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e($r3, $z1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$200(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$200(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e($r1, false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e(\"http://*/*\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e(\"https://*/*\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList access$100(org.apache.cordova.AllowListPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.AllowListPlugin$CustomConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)\u003e",
      "targetMethod": "\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.AllowList: void addAllowListEntry(java.lang.String,boolean)\u003e(\"data:*\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r6, $r11)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void pluginInitialize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"AutoHideSplashScreen\", true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e(\"SplashScreenDelay\", -1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaSplashScreenPlugin\", $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaSplashScreenPlugin\", $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"FadeSplashScreen\", true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e(\"FadeSplashScreenDuration\", 500)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaSplashScreenPlugin\", $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void pluginInitialize()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaSplashScreenPlugin\", $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void startupPlugins()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r7, $r9)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.PendingRequests: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: java.lang.String getPackageName()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroid.app.Activity: java.lang.String getPackageName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r7.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"androidpersistentfilelocation\", \"internal\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: java.io.File getCacheDir()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r5.\u003candroid.app.Activity: java.io.File getCacheDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: java.io.File getFilesDir()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r5.\u003candroid.app.Activity: java.io.File getFilesDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r15 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.LocalFilesystem: void \u003cinit\u003e(java.lang.String,android.content.Context,org.apache.cordova.CordovaResourceApi,java.io.File)\u003e",
      "sourceStatement": "specialinvoke $r14.\u003corg.apache.cordova.file.LocalFilesystem: void \u003cinit\u003e(java.lang.String,android.content.Context,org.apache.cordova.CordovaResourceApi,java.io.File)\u003e(\"temporary\", $r15, $r16, $r10)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.Filesystem: void \u003cinit\u003e(android.net.Uri,java.lang.String,org.apache.cordova.CordovaResourceApi)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e($r14)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: org.apache.cordova.file.Filesystem filesystemForName(java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003corg.apache.cordova.file.FileUtils: org.apache.cordova.file.Filesystem filesystemForName(java.lang.String)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r15 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.LocalFilesystem: void \u003cinit\u003e(java.lang.String,android.content.Context,org.apache.cordova.CordovaResourceApi,java.io.File)\u003e",
      "sourceStatement": "specialinvoke $r14.\u003corg.apache.cordova.file.LocalFilesystem: void \u003cinit\u003e(java.lang.String,android.content.Context,org.apache.cordova.CordovaResourceApi,java.io.File)\u003e(\"persistent\", $r15, $r16, $r13)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e($r14)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r15 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.ContentFilesystem: void \u003cinit\u003e(android.content.Context,org.apache.cordova.CordovaResourceApi)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.Filesystem: void \u003cinit\u003e(android.net.Uri,java.lang.String,org.apache.cordova.CordovaResourceApi)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.file.Filesystem: void \u003cinit\u003e(android.net.Uri,java.lang.String,org.apache.cordova.CordovaResourceApi)\u003e($r3, \"content\", $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e($r17)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.AssetFilesystem: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r15 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $param1.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.AssetFilesystem: void \u003cinit\u003e(android.content.res.AssetManager,org.apache.cordova.CordovaResourceApi)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.Filesystem: void \u003cinit\u003e(android.net.Uri,java.lang.String,org.apache.cordova.CordovaResourceApi)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.file.Filesystem: void \u003cinit\u003e(android.net.Uri,java.lang.String,org.apache.cordova.CordovaResourceApi)\u003e($r3, \"assets\", $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e($r18)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String[] getExtraFileSystemsPreference(android.app.Activity)\u003e",
      "sourceStatement": "$r20 \u003d virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: java.lang.String[] getExtraFileSystemsPreference(android.app.Activity)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String[] getExtraFileSystemsPreference(android.app.Activity)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"androidextrafilesystems\", \"files,files-external,documents,sdcard,cache,cache-external,assets,root\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.util.HashMap getAvailableFileSystems(android.app.Activity)\u003e",
      "sourceStatement": "$r21 \u003d virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: java.util.HashMap getAvailableFileSystems(android.app.Activity)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e($r20, $r21)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r11 \u003d interfaceinvoke $r10.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e",
      "sourceStatement": "$r12 \u003d interfaceinvoke $r10.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.CordovaResourceApi getResourceApi()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.file.FileUtils: void registerFilesystem(org.apache.cordova.file.Filesystem)\u003e($r9)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: void registerExtraFileSystems(java.lang.String[],java.util.HashMap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"FileUtils\", $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void pluginInitialize()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void pluginInitialize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void v(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void v(java.lang.String,java.lang.String)\u003e(\"StatusBar\", \"StatusBar: initialization\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r4.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void \u003cinit\u003e(org.apache.cordova.statusbar.StatusBar,org.apache.cordova.CordovaInterface)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r5)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$000(org.apache.cordova.statusbar.StatusBar)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$000(org.apache.cordova.statusbar.StatusBar)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"StatusBarOverlaysWebView\", true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$100(org.apache.cordova.statusbar.StatusBar,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$100(org.apache.cordova.statusbar.StatusBar,boolean)\u003e($r4, $z0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$100(org.apache.cordova.statusbar.StatusBar,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarTransparent(boolean)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarTransparent(boolean)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarTransparent(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarTransparent(boolean)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$200(org.apache.cordova.statusbar.StatusBar)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$200(org.apache.cordova.statusbar.StatusBar)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"StatusBarBackgroundColor\", \"#000000\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$300(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$300(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e($r4, $r6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$300(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarBackgroundColor(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarBackgroundColor(java.lang.String)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarBackgroundColor(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarBackgroundColor(java.lang.String)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarBackgroundColor(java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r8.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$400(org.apache.cordova.statusbar.StatusBar)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: org.apache.cordova.CordovaPreferences access$400(org.apache.cordova.statusbar.StatusBar)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"StatusBarStyle\", \"lightcontent\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e($r4, $r6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarStyle(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarStyle(java.lang.String)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarStyle(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void setStatusBarStyle(java.lang.String)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccordova.plugin.zoom.Zoom: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.PluginManager getPluginManager()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: void onCordovaInit(org.apache.cordova.PluginManager)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.CordovaInterfaceImpl: void onCordovaInit(org.apache.cordova.PluginManager)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e(\"setupSplashScreen\", $r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r3, $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager$$ExternalSyntheticLambda0: void \u003cinit\u003e(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager$$ExternalSyntheticLambda0: void accept(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void lambda$postMessage$0(java.lang.String,java.lang.Object,java.lang.String,org.apache.cordova.CordovaPlugin)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.PluginManager: void lambda$postMessage$0(java.lang.String,java.lang.Object,java.lang.String,org.apache.cordova.CordovaPlugin)\u003e($r1, $r2, $r5, $r6)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void lambda$postMessage$0(java.lang.String,java.lang.Object,java.lang.String,org.apache.cordova.CordovaPlugin)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $param3.\u003corg.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void lambda$postMessage$0(java.lang.String,java.lang.Object,java.lang.String,org.apache.cordova.CordovaPlugin)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $param3.\u003corg.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda0: void \u003cinit\u003e(org.apache.cordova.SplashScreenPlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.core.splashscreen.SplashScreen: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"condition\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.splashscreen.SplashScreen$Impl: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"keepOnScreenCondition\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void setSplashScreenWaitPredicate(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setSplashScreenWaitPredicate(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: void setSplashScreenWaitPredicate(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cset-?\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$setKeepOnScreenCondition$1: void \u003cinit\u003e(androidx.core.splashscreen.SplashScreen$Impl31,android.view.View)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda1: void \u003cinit\u003e(org.apache.cordova.SplashScreenPlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r4, $l1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void \u003cinit\u003e(org.apache.cordova.SplashScreenPlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.core.splashscreen.SplashScreen: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"listener\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.splashscreen.SplashScreen$Impl: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"exitAnimationListener\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener(androidx.core.splashscreen.SplashScreen$OnExitAnimationListener)\u003e",
      "targetMethod": "\u003candroid.window.SplashScreen: void setOnExitAnimationListener(android.window.SplashScreen$OnExitAnimationListener)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003candroid.window.SplashScreen: void setOnExitAnimationListener(android.window.SplashScreen$OnExitAnimationListener)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity$1: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$param1 \u003d interfaceinvoke $r13.\u003corg.apache.cordova.CordovaInterface: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity$1: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r2.\u003corg.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void init()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r1.\u003corg.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)\u003e(\"DefaultVolumeStream\", \"\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"KeepRunning\", true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String,boolean)\u003e($param0, true)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaWebViewImpl\", $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)\u003e(\"LoadUrlTimeoutValue\", 20000)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$1: void \u003cinit\u003e(org.apache.cordova.CordovaWebViewImpl,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$2: void \u003cinit\u003e(org.apache.cordova.CordovaWebViewImpl,int,int,java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void \u003cinit\u003e(org.apache.cordova.CordovaWebViewImpl,int,java.lang.Runnable,java.lang.String,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r9.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r10)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "sourceStatement": "virtualinvoke $r9.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r10)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaInterface access$200(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaInterface access$200(org.apache.cordova.CordovaWebViewImpl)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: java.util.concurrent.ExecutorService getThreadPool()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaInterface: java.util.concurrent.ExecutorService getThreadPool()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$2: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void loadUrl(java.lang.String,boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003corg.apache.cordova.CordovaWebViewEngine: void loadUrl(java.lang.String,boolean)\u003e($r6, $z0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void loadUrl(java.lang.String,boolean)\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: void loadUrl(java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.engine.SystemWebView: void loadUrl(java.lang.String)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r6 \u003d interfaceinvoke $r5.\u003candroidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void ensureViewModelStore()\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.activity.ComponentActivity: void ensureViewModelStore()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r4.\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"observer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e(\"removeObserver\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.arch.core.internal.SafeIterableMap$SupportRemove: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"source\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003candroidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e(\"androidx.savedstate.Restarter\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.savedstate.SavedStateRegistry: void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($r3, $param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"this$0\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"\u003canonymous parameter 0\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param2, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"source\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"event\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void performRestore()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.lifecycle.SavedStateHandlesProvider: void performRestore()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void performRestore()\u003e",
      "targetMethod": "\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)\u003e(\"androidx.lifecycle.internal.SavedStateHandlesProvider\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: void performRestore()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: androidx.lifecycle.SavedStateHandlesVM getViewModel()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.SavedStateHandlesProvider: androidx.lifecycle.SavedStateHandlesVM getViewModel()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider: androidx.lifecycle.SavedStateHandlesVM getViewModel()\u003e",
      "targetMethod": "\u003ckotlin.SynchronizedLazyImpl: java.lang.Object getValue()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r2.\u003ckotlin.Lazy: java.lang.Object getValue()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.SynchronizedLazyImpl: java.lang.Object getValue()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.SynchronizedLazyImpl: java.lang.Object getValue()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: java.lang.Object invoke()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r5.\u003ckotlin.jvm.functions.Function0: java.lang.Object invoke()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: java.lang.Object invoke()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.SavedStateHandlesVM invoke()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.SavedStateHandlesVM invoke()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.SavedStateHandlesVM invoke()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e(1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Reflection: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ckotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)\u003e(class \"Landroidx/lifecycle/SavedStateHandlesVM;\")",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ReflectionFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003ckotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.ClassReference$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ckotlin.jvm.internal.ClassReference$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ckotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"elements\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])\u003e",
      "targetMethod": "\u003ckotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ckotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])\u003e",
      "targetMethod": "\u003ckotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ckotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r0, \"asList(this)\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003ckotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)\u003e($r3, 10)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ckotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)\u003e($r8, $r9)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.Pair: void \u003cinit\u003e(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsJVMKt: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003ckotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e($r3)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003ckotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003ckotlin.collections.MapsKt: int mapCapacity(int)\u003e($i0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ckotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)\u003e($param0, $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"destination\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.collections.MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e($param1, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"pairs\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.Pair: java.lang.Object component1()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r4.\u003ckotlin.Pair: java.lang.Object component1()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)\u003e",
      "targetMethod": "\u003ckotlin.Pair: java.lang.Object component2()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ckotlin.Pair: java.lang.Object component2()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r5, \"primitiveFqNames.values\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r15, \"kotlinName\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)\u003e",
      "sourceStatement": "$r17 \u003d staticinvoke \u003ckotlin.text.StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)\u003e($r15, 46, null, 2, null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ckotlin.text.StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param2, \"missingDelimiterValue\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003ckotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)\u003e($r2, $param1, 0, false, 6, null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)\u003e",
      "sourceStatement": "$param2 \u003d staticinvoke \u003ckotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)\u003e",
      "sourceStatement": "$param2 \u003d staticinvoke \u003ckotlin.text.StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)\u003e($param0, $param1, $param2, $param3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($param0, \"this as java.lang.String\\u2026ing(startIndex, endIndex)\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ckotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)\u003e($r17, $r15)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.Pair: java.lang.Object getFirst()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r10.\u003ckotlin.Pair: java.lang.Object getFirst()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.Pair: java.lang.Object getSecond()\u003e",
      "sourceStatement": "$r18 \u003d virtualinvoke $r10.\u003ckotlin.Pair: java.lang.Object getSecond()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Number: int intValue()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r21.\u003cjava.lang.Number: int intValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003ckotlin.collections.MapsKt: int mapCapacity(int)\u003e($i0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ckotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003ckotlin.text.StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)\u003e($r15, 46, null, 2, null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cinit\u003e(java.lang.Class)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"jClass\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.ClassReference: void \u003cinit\u003e(java.lang.Class)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)\u003e($r4, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"clazz\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"initializer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003ckotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ckotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cthis\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.ClassReference: java.lang.Class getJClass()\u003e",
      "sourceStatement": "$r0 \u003d interfaceinvoke $r2.\u003ckotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)\u003e($r0, \"null cannot be cast to non-null type java.lang.Class\u003cT of kotlin.jvm.JvmClassMappingKt.\u003cget-java\u003e\u003e\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: void \u003cinit\u003e(java.lang.Class,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"clazz\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: void \u003cinit\u003e(java.lang.Class,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"initializer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: void \u003cinit\u003e(java.lang.Class,kotlin.jvm.functions.Function1)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: androidx.lifecycle.ViewModelProvider$Factory build()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r1.\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: androidx.lifecycle.ViewModelProvider$Factory build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: void \u003cinit\u003e(androidx.lifecycle.viewmodel.ViewModelInitializer[])\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"initializers\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: void \u003cinit\u003e(androidx.lifecycle.viewmodel.ViewModelInitializer[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"factory\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param0.\u003candroidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: void \u003cinit\u003e(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "sourceStatement": "$r0 \u003d interfaceinvoke $r2.\u003candroidx.lifecycle.HasDefaultViewModelProviderFactory: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void \u003cinit\u003e(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null, 1, null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: void \u003cinit\u003e(kotlin.jvm.internal.DefaultConstructorMarker)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e($r3, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e($r3, this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)\u003e($r3, this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.activity.ComponentActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e(\"androidx.lifecycle.internal.SavedStateHandlesVM\", class \"Landroidx/lifecycle/SavedStateHandlesVM;\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r6.\u003candroidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e($param1, $r9)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"modelClass\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"extras\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: java.lang.Class getClazz$lifecycle_viewmodel_release()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: java.lang.Class getClazz$lifecycle_viewmodel_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ckotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)\u003e($r6, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r5.\u003candroidx.lifecycle.viewmodel.ViewModelInitializer: kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: java.lang.Object invoke(java.lang.Object)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r7.\u003ckotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)\u003e($param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: java.lang.Object invoke(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"$this$initializer\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onStart()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onStart()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void noteStateNotSaved()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void noteStateNotSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void noteStateNotSaved()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void noteStateNotSaved()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentStore: java.util.List getFragments()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.fragment.app.FragmentStore: java.util.List getFragments()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchActivityCreated()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void dispatchActivityCreated()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchActivityCreated()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchActivityCreated()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void dispatchActivityCreated()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchActivityCreated()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchActivityCreated()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e(4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: boolean execPendingActions()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: boolean execPendingActions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: boolean execPendingActions()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r5.\u003candroidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void \u003cinit\u003e(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)\u003e",
      "targetMethod": "\u003candroidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchStart()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void dispatchStart()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStart()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void dispatchStart()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStart()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e(5)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onStart()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onStart()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.app.AppCompatDelegate: void onStart()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onStart()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)\u003e(true)",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onStart()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r1, \"Started the activity.\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onStart()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleStart()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void handleStart()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleStart()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleStart()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onStart()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.PluginManager: void onStart()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onStart()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onStart()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onStart()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onStart()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onStart()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"owner\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatDelegate: void setTitle(java.lang.CharSequence)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onStateNotSaved()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResume()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onResume()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: boolean execPendingActions()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentController: boolean execPendingActions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onResume()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r1, \"Resumed the activity.\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onResume()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaActivity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onResume()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void handleResume(boolean)\u003e($z0)",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebViewEngine: void setPaused(boolean)\u003e(false)",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: void onResume()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebView: void onResume()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: void resumeTimers()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebView: void resumeTimers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onResume(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.PluginManager: void onResume(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onResume(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onResume(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onResume()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onResume()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onPostResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onPostResume()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentActivity: void onPostResume()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onPostResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResumeFragments()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.fragment.app.FragmentActivity: void onResumeFragments()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResumeFragments()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onResumeFragments()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchResume()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.fragment.app.FragmentController: void dispatchResume()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchResume()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void dispatchResume()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchResume()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e(7)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onPostResume()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatActivity: void onPostResume()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.app.AppCompatDelegate: void onPostResume()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.appcompat.app.AppCompatActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$1: void onResume(androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$1: void onResume(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.emoji2.text.ConcurrencyHelpers: android.os.Handler mainHandlerAsync()\u003e()",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers: android.os.Handler mainHandlerAsync()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.emoji2.text.ConcurrencyHelpers: android.os.Handler mainHandlerAsync()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers: android.os.Handler mainHandlerAsync()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)\u003e($r0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r1, 500L)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$1: void onResume(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0: void doFrame(long)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void lambda$postFrameCallback$0(java.lang.Runnable,long)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void lambda$postFrameCallback$0(java.lang.Runnable,long)\u003e($r1, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2: void run()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$delayAfterFirstFrame$0$androidx-profileinstaller-ProfileInstallerInitializer(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$delayAfterFirstFrame$0$androidx-profileinstaller-ProfileInstallerInitializer(android.content.Context)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$delayAfterFirstFrame$0$androidx-profileinstaller-ProfileInstallerInitializer(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r5, $l1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003candroidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onAttachedFromWindow()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e($param1, $param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void \u003cinit\u003e(androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: void \u003cinit\u003e(androidx.core.view.WindowInsetsCompat)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: void \u003cinit\u003e(androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl: void \u003cinit\u003e(androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl: void \u003cinit\u003e(androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003candroidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl29: void applyInsetTypes()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e($param0, null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: void \u003cinit\u003e(android.view.WindowInsets)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e",
      "sourceStatement": "this \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e",
      "sourceStatement": "this \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e",
      "sourceStatement": "this \u003d virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl30: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r6.\u003candroidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e($param0, $r3)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param1.\u003candroidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()\u003e",
      "targetMethod": "\u003candroidx.core.graphics.Insets: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)\u003e($i0, $i1, $i2, $i3)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.Insets: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.graphics.Insets: void \u003cinit\u003e(int,int,int,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.core.graphics.Insets: void \u003cinit\u003e(int,int,int,int)\u003e(0, 0, 0, 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.Insets: void \u003cinit\u003e(int,int,int,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()\u003e",
      "targetMethod": "\u003candroidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)\u003e($i0, $i1, $i2, $i3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)\u003e($param1, null)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke $param0.\u003candroidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param1.\u003candroidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r3.\u003candroidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$setKeepOnScreenCondition$1: boolean onPreDraw()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition getSplashScreenWaitPredicate()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.core.splashscreen.SplashScreen$Impl31: androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition getSplashScreenWaitPredicate()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$setKeepOnScreenCondition$1: boolean onPreDraw()\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda0: boolean shouldKeepOnScreen()\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r2.\u003candroidx.core.splashscreen.SplashScreen$KeepOnScreenCondition: boolean shouldKeepOnScreen()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda0: boolean shouldKeepOnScreen()\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: boolean lambda$setupSplashScreen$0$org-apache-cordova-SplashScreenPlugin()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.SplashScreenPlugin: boolean lambda$setupSplashScreen$0$org-apache-cordova-SplashScreenPlugin()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.SyncTask$ConnectivityChangeReceiver: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.SyncTask: boolean isDeviceConnected()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003ccom.google.firebase.iid.SyncTask: boolean isDeviceConnected()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.google.firebase.iid.SyncTask$ConnectivityChangeReceiver"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl$2: void run()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)\u003e(108)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)\u003e($param0, true)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)\u003e",
      "targetMethod": "\u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)\u003e($param1, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaBridge: void reset()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.CordovaBridge: void reset()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: void reset()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void reset()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.NativeToJsMessageQueue: void reset()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void reset()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)\u003e(-1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: void reset()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaBridge: void clearBridgeSecret()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaBridge: void clearBridgeSecret()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003corg.apache.cordova.CordovaWebViewEngine$Client: void onPageStarted(java.lang.String)\u003e($param1)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaWebViewImpl\", $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: java.util.Set access$300(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: java.util.Set access$300(org.apache.cordova.CordovaWebViewImpl)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onReset()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.PluginManager: void onReset()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onReset()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onReset()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onReset()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e(\"onPageStarted\", $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer: void loadEmojiCompatAfterDelay()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r1, 500L)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.core.os.TraceCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e(\"EmojiCompat.EmojiCompatInitializer.run\")",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e(\"EmojiCompat.EmojiCompatInitializer.run\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: boolean isConfigured()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.emoji2.text.EmojiCompat: boolean isConfigured()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: void checkState(boolean,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: void checkState(boolean,java.lang.String)\u003e($z0, \"EmojiCompat is not initialized.\\n\\nYou must initialize EmojiCompat prior to referencing the EmojiCompat instance.\\n\\nThe most likely cause of this error is disabling the EmojiCompatInitializer\\neither explicitly in AndroidManifest.xml, or by including\\nandroidx.emoji2:emoji2-bundled.\\n\\nAutomatic initialization is typically performed by EmojiCompatInitializer. If\\nyou are not expecting to initialize EmojiCompat manually in your application,\\nplease check to ensure it has not been removed from your APK\\\u0027s manifest. You can\\ndo this in Android Studio using Build \u003e Analyze APK.\\n\\nIn the APK Analyzer, ensure that the startup entry for\\nEmojiCompatInitializer and InitializationProvider is present in\\n AndroidManifest.xml. If it is missing or contains tools:node\u003d\\\"remove\\\", and you\\nintend to use automatic configuration, verify:\\n\\n  1. Your application does not include emoji2-bundled\\n  2. All modules do not contain an exclusion manifest rule for\\n     EmojiCompatInitializer or InitializationProvider. For more information\\n     about manifest exclusions see the documentation for the androidx startup\\n     library.\\n\\nIf you intend to use emoji2-bundled, please call EmojiCompat.init. You can\\nlearn more in the documentation for BundledEmojiCompatConfig.\\n\\nIf you intended to perform manual configuration, it is recommended that you call\\nEmojiCompat.init immediately on application startup.\\n\\nIf you still cannot resolve this issue, please open a bug with your specific\\nconfiguration to help improve error message.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: void load()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.emoji2.text.EmojiCompat: void load()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void load()\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: void checkState(boolean,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: void checkState(boolean,java.lang.String)\u003e($z0, \"Set metadataLoadStrategy to LOAD_STRATEGY_MANUAL to execute manual loading\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void load()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: boolean isInitialized()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.emoji2.text.EmojiCompat: boolean isInitialized()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: boolean isInitialized()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat: int getLoadState()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompat: int getLoadState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void load()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat$CompatInternal19: void loadMetadata()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.emoji2.text.EmojiCompat$CompatInternal: void loadMetadata()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat$CompatInternal19: void loadMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003candroidx.emoji2.text.EmojiCompat$MetadataRepoLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers: java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.emoji2.text.ConcurrencyHelpers: java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String)\u003e(\"EmojiCompatInitializer\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003cjava.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003cjava.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.ConcurrencyHelpers: java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.emoji2.text.ConcurrencyHelpers: java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable)\u003e($r1, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0: void run()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003cjava.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0: void run()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void lambda$load$0$androidx-emoji2-text-EmojiCompatInitializer$BackgroundDefaultLoader(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void lambda$load$0$androidx-emoji2-text-EmojiCompatInitializer$BackgroundDefaultLoader(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e($r2, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void lambda$load$0$androidx-emoji2-text-EmojiCompatInitializer$BackgroundDefaultLoader(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.emoji2.text.DefaultEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: void \u003cinit\u003e(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: void \u003cinit\u003e(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: void \u003cinit\u003e(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: void \u003cinit\u003e(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi()\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($r2, \"Package manager required to locate emoji font provider\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19: java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r2.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper: java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int)\u003e($param0, $r3, 0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19: android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r2.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper: android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: boolean hasFlagSystem(android.content.pm.ProviderInfo)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: boolean hasFlagSystem(android.content.pm.ProviderInfo)\u003e($r8)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager)\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager)\u003e($r3, $r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28: android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper: android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String)\u003e($param1, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: java.util.List convertToByteArray(android.content.pm.Signature[])\u003e",
      "sourceStatement": "$r7 \u003d specialinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: java.util.List convertToByteArray(android.content.pm.Signature[])\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e($r1, $r4, \"emojicompat-emoji-font\", $r7)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontRequest: void \u003cinit\u003e(java.lang.String,java.lang.String,java.lang.String,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003candroidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory: androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest)\u003e($param0, $r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void \u003cinit\u003e(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void \u003cinit\u003e(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void \u003cinit\u003e(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Context cannot be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void \u003cinit\u003e(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param1, \"FontRequest cannot be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat$Config: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setExecutor(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void setExecutor(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat$Config: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig: androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader: void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003candroidx.emoji2.text.EmojiCompat$MetadataRepoLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e($r6)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"LoaderCallback cannot be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0: void \u003cinit\u003e(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void loadInternal()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0: void run()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r1.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest)\u003e($r2, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)\u003e($param0, null, $param1)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)\u003e($param0, null, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)\u003e($param0, $param2, $param1)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider$$ExternalSyntheticLambda0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e($r3, $param1, $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.lang.String getProviderAuthority()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param1.\u003candroidx.core.provider.FontRequest: java.lang.String getProviderAuthority()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.lang.String getProviderPackage()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param1.\u003candroidx.core.provider.FontRequest: java.lang.String getProviderPackage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])\u003e($r8)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)\u003e($param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.util.List getCertificates()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003candroidx.core.provider.FontRequest: java.util.List getCertificates()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.util.List getCertificates()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003candroidx.core.provider.FontRequest: java.util.List getCertificates()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)\u003e($r9, $r12)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)\u003e($param0, $param1, $r7, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontRequest: java.lang.String getQuery()\u003e",
      "sourceStatement": "$param2 \u003d virtualinvoke $param1.\u003candroidx.core.provider.FontRequest: java.lang.String getQuery()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003candroidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)\u003e($r10, $r6, $r9, \"query \u003d ?\", $r11, null, $param3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)\u003e",
      "sourceStatement": "$r14 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)\u003e($r13, $i6, $i9, $z0, $i7)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: void \u003cinit\u003e(android.net.Uri,int,int,boolean,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: void \u003cinit\u003e(android.net.Uri,int,int,boolean,int)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e(0, $r8)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e(0, $r8)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: void \u003cinit\u003e(int,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r4.\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo()\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r3.\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e(\"EmojiCompat.FontRequestEmojiCompatConfig.buildTypeface\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo)\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r7.\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo)\u003e($r8, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper: android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e($param0, null, $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e($param0, $param1, $param2, 0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatBaseImpl: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.collection.LruCache: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003candroidx.collection.LruCache: void \u003cinit\u003e(int)\u003e(16)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e($param0, $param1, $param2, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()\u003e",
      "sourceStatement": "$r13 \u003d virtualinvoke $r12.\u003candroidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getWeight()\u003e",
      "sourceStatement": "$i3 \u003d virtualinvoke $r12.\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getWeight()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r12.\u003candroidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()\u003e",
      "sourceStatement": "$i3 \u003d virtualinvoke $r12.\u003candroidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int)\u003e",
      "sourceStatement": "$r16 \u003d specialinvoke this.\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int)\u003e($r20, $param3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int)\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatApi29Impl: int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003candroidx.core.graphics.TypefaceCompatApi29Impl: int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle)\u003e($r2, $r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003candroidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatUtil: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003candroidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)\u003e($r8, null, $r5)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003candroidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)\u003e($r8, null, $r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)\u003e",
      "targetMethod": "\u003candroidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003candroidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)\u003e($r7, $param2, \"r\", $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e($r9, $r10)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader: void createMetadata()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e($r9, $r10)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.os.TraceCompat: void beginSection(java.lang.String)\u003e(\"EmojiCompat.MetadataRepo.create\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e($param1)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void \u003cinit\u003e(java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e(4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: int readUnsignedShort()\u003e",
      "sourceStatement": "$i0 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: int readUnsignedShort()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: int readUnsignedShort()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader: int toUnsignedShort(short)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataListReader: int toUnsignedShort(short)\u003e($s0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e(6)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: int readTag()\u003e",
      "sourceStatement": "$i3 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: int readTag()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e(4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long readUnsignedInt()\u003e",
      "sourceStatement": "$l4 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: long readUnsignedInt()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long readUnsignedInt()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader: long toUnsignedInt(int)\u003e",
      "sourceStatement": "$l1 \u003d staticinvoke \u003candroidx.emoji2.text.MetadataListReader: long toUnsignedInt(int)\u003e($i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e(4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long getPosition()\u003e",
      "sourceStatement": "$l6 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: long getPosition()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e($i0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: void skip(int)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: void skip(int)\u003e(12)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long readUnsignedInt()\u003e",
      "sourceStatement": "$l6 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: long readUnsignedInt()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: int readTag()\u003e",
      "sourceStatement": "$i0 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: int readTag()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long readUnsignedInt()\u003e",
      "sourceStatement": "$l8 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: long readUnsignedInt()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$ByteBufferReader: long readUnsignedInt()\u003e",
      "sourceStatement": "$l7 \u003d interfaceinvoke $param0.\u003candroidx.emoji2.text.MetadataListReader$OpenTypeReader: long readUnsignedInt()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader$OffsetInfo: void \u003cinit\u003e(long,long)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataListReader$OffsetInfo: long getStartOffset()\u003e",
      "sourceStatement": "$l0 \u003d virtualinvoke $r2.\u003candroidx.emoji2.text.MetadataListReader$OffsetInfo: long getStartOffset()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataListReader: androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Utf8: androidx.emoji2.text.flatbuffer.Utf8 getDefault()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.emoji2.text.flatbuffer.Utf8: androidx.emoji2.text.flatbuffer.Utf8 getDefault()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.Utf8: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList)\u003e($param0, $r0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $param1.\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer)\u003e($i0, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: void __init(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: void __init(int,java.nio.ByteBuffer)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: void __init(int,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: void __reset(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: void __reset(int,java.nio.ByteBuffer)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void \u003cinit\u003e(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void \u003cinit\u003e(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e(int)\u003e(1024)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void \u003cinit\u003e(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param1.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __offset(int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int __offset(int)\u003e(6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __vector_len(int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int __vector_len(int)\u003e($i0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void \u003cinit\u003e(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo: void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.emoji2.text.MetadataRepo: void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int listLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: void \u003cinit\u003e(androidx.emoji2.text.MetadataRepo,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getId()\u003e",
      "sourceStatement": "$i3 \u003d virtualinvoke $r1.\u003candroidx.emoji2.text.EmojiMetadata: int getId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getId()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.flatbuffer.MetadataList getMetadataList()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.emoji2.text.MetadataRepo: androidx.emoji2.text.flatbuffer.MetadataList getMetadataList()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e($r3, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __offset(int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int __offset(int)\u003e(6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __vector(int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int __vector(int)\u003e($i1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __indirect(int)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataList: int __indirect(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataList: androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer)\u003e($param1, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: void __init(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: void __init(int,java.nio.ByteBuffer)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: void __init(int,java.nio.ByteBuffer)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: void __reset(int,java.nio.ByteBuffer)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: void __reset(int,java.nio.ByteBuffer)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getId()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int id()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int id()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int id()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __offset(int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int __offset(int)\u003e(4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"emoji metadata cannot be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepointsLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepointsLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepointsLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __offset(int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int __offset(int)\u003e(16)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepointsLength()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __vector_len(int)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int __vector_len(int)\u003e($i0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "targetMethod": "\u003candroidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e($z0, \"invalid metadata codepoint length\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointsLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo: void put(androidx.emoji2.text.EmojiMetadata)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e($param0, 0, $i0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e",
      "sourceStatement": "$i2 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.emoji2.text.EmojiMetadata: androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepoints(int)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r1.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepoints(int)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepoints(int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __offset(int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int __offset(int)\u003e(16)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int codepoints(int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.flatbuffer.Table: int __vector(int)\u003e",
      "sourceStatement": "$i1 \u003d virtualinvoke this.\u003candroidx.emoji2.text.flatbuffer.MetadataItem: int __vector(int)\u003e($i1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: androidx.emoji2.text.MetadataRepo$Node get(int)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.emoji2.text.MetadataRepo$Node: androidx.emoji2.text.MetadataRepo$Node get(int)\u003e($i2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.emoji2.text.MetadataRepo$Node: void \u003cinit\u003e(int)\u003e(1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e",
      "sourceStatement": "$i2 \u003d virtualinvoke $param0.\u003candroidx.emoji2.text.EmojiMetadata: int getCodepointAt(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.emoji2.text.MetadataRepo$Node: void put(androidx.emoji2.text.EmojiMetadata,int,int)\u003e($param0, $param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils$12: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r18.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r19)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void w(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void w(java.lang.String,java.lang.String)\u003e($param2, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r5.\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$BridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.NativeToJsMessageQueue$BridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)\u003e(this, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemExposedJsApi: java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r5.\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e($param0, $param1, $param2, $param3, $param4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaBridge: boolean verifySecret(java.lang.String,int)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003corg.apache.cordova.CordovaBridge: boolean verifySecret(java.lang.String,int)\u003e(\"exec()\", $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: boolean verifySecret(java.lang.String,int)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: boolean isBridgeEnabled()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003corg.apache.cordova.NativeToJsMessageQueue: boolean isBridgeEnabled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e($param1, $param2, $param3, $param4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke this.\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CallbackContext: void \u003cinit\u003e(java.lang.String,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e($param1, $param3, $r13)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: java.util.concurrent.ExecutorService getThreadPool()\u003e",
      "sourceStatement": "$r6 \u003d interfaceinvoke $r5.\u003corg.apache.cordova.CordovaInterface: java.util.concurrent.ExecutorService getThreadPool()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void \u003cinit\u003e(io.ionic.keyboard.CDVIonicKeyboard,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r9)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r9)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r3.\u003corg.apache.cordova.CordovaWebView: org.apache.cordova.PluginManager getPluginManager()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e(\"spinner\", \"stop\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.emoji2.text.EmojiCompat: void onMetadataLoadSuccess()\u003e",
      "targetMethod": "\u003candroidx.emoji2.text.EmojiCompat$ListenerDispatcher: void run()\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e($r1)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void access$000(org.apache.cordova.networkinformation.NetworkManager,android.net.NetworkInfo)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.networkinformation.NetworkManager: void access$000(org.apache.cordova.networkinformation.NetworkManager,android.net.NetworkInfo)\u003e($r3, $r6)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void access$000(org.apache.cordova.networkinformation.NetworkManager,android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"NetworkManager\", $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"NetworkManager\", $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.String toString()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003cjava.lang.Object: java.lang.String toString()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void sendUpdate(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: void sendUpdate(java.lang.String)\u003e($r5)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginResult: void \u003cinit\u003e(org.apache.cordova.PluginResult$Status,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void sendUpdate(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void sendUpdate(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003corg.apache.cordova.CordovaWebView: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e($param0, $r3)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getStatus()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: int getStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void \u003cinit\u003e(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e($r5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.NativeToJsMessageQueue$BridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r4.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode$1: void \u003cinit\u003e(org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode,org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode$1: void run()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncodeAsJs()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncodeAsJs()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncodeAsJs()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r4.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getStatus()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003corg.apache.cordova.PluginResult: int getStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLengthHelper(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLengthHelper(org.apache.cordova.PluginResult)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLengthHelper(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLengthHelper(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getStrMessage()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: java.lang.String getStrMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncodeAsJs()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsJsMessage(java.lang.StringBuilder)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsJsMessage(java.lang.StringBuilder)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsJsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getStatus()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r2.\u003corg.apache.cordova.PluginResult: int getStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsJsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void buildJsMessage(java.lang.StringBuilder)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void buildJsMessage(java.lang.StringBuilder)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void buildJsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void buildJsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r3.\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsJsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: org.apache.cordova.CordovaWebViewEngine access$400(org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: org.apache.cordova.CordovaWebViewEngine access$400(org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode$1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003corg.apache.cordova.CordovaWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)\u003e($r2, null)",
      "kind": "INTERFACE",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)\u003e",
      "targetMethod": "\u003candroid.webkit.WebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.engine.SystemWebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void sendUpdate(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003corg.apache.cordova.CordovaWebView: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e(\"networkconnection\", $param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r2.\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject access$100(org.apache.cordova.networkinformation.NetworkManager)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject access$100(org.apache.cordova.networkinformation.NetworkManager)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject access$100(org.apache.cordova.networkinformation.NetworkManager)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject access$100(org.apache.cordova.networkinformation.NetworkManager)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.String toString()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r10.\u003cjava.lang.Object: java.lang.String toString()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"NetworkManager\", $r8)",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager$1: void onReceive(android.content.Context,android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"NetworkManager\", \"Really no connectivity\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.networkinformation.NetworkManager$1"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$6: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e($r1, \"default\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$5: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaArgs: boolean getBoolean(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaArgs: boolean getBoolean(int)\u003e(0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$5: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$100(org.apache.cordova.statusbar.StatusBar,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$100(org.apache.cordova.statusbar.StatusBar,boolean)\u003e($r2, $z0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$7: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.statusbar.StatusBar: void access$500(org.apache.cordova.statusbar.StatusBar,java.lang.String)\u003e($r1, \"lightcontent\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003corg.apache.cordova.CordovaWebViewEngine$Client: void onPageFinishedLoading(java.lang.String)\u003e($param1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e(\"CordovaWebViewImpl\", $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void clearLoadTimeoutTimer()\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void clearLoadTimeoutTimer()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void clearLoadTimeoutTimer()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: int access$108(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: int access$108(org.apache.cordova.CordovaWebViewImpl)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003corg.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager access$000(org.apache.cordova.CordovaWebViewImpl)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003corg.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)\u003e(\"onPageFinished\", $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void attemptCloseOnPageFinished()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.SplashScreenPlugin: void attemptCloseOnPageFinished()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaWebViewEngine: android.view.View getView()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: org.apache.cordova.CordovaPreferences access$200(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: org.apache.cordova.CordovaPreferences access$200(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003corg.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)\u003e(\"resizeOnFullScreen\", false)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void onGlobalLayout()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.WindowManager getWindowManager()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.appcompat.app.AppCompatActivity: android.view.WindowManager getWindowManager()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils$12: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject access$500(org.apache.cordova.file.FileUtils)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: org.json.JSONObject access$500(org.apache.cordova.file.FileUtils)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject access$500(org.apache.cordova.file.FileUtils)\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "sourceStatement": "$r0 \u003d specialinvoke $param0.\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getFilesDir()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getFilesDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getFilesDir()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getFilesDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getCacheDir()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getCacheDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getExternalFilesDir(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getExternalFilesDir(java.lang.String)\u003e(null)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getExternalFilesDir(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getExternalFilesDir(java.lang.String)\u003e(null)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003candroid.content.Context: java.io.File getExternalCacheDir()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroid.content.Context: java.io.File getExternalCacheDir()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils: org.json.JSONObject requestAllPaths()\u003e",
      "targetMethod": "\u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003corg.apache.cordova.file.FileUtils: java.lang.String toDirUrl(java.io.File)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.file.FileUtils$12: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void success(org.json.JSONObject)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.CallbackContext: void success(org.json.JSONObject)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginResult: void \u003cinit\u003e(org.apache.cordova.PluginResult$Status,org.json.JSONObject)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CallbackContext: void success(org.json.JSONObject)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.WindowManager getWindowManager()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.appcompat.app.AppCompatActivity: android.view.WindowManager getWindowManager()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r4.\u003candroidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)\u003e(16908290)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$002(io.ionic.keyboard.CDVIonicKeyboard,android.view.View)\u003e",
      "sourceStatement": "staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$002(io.ionic.keyboard.CDVIonicKeyboard,android.view.View)\u003e($r2, $r7)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3$1: void \u003cinit\u003e(io.ionic.keyboard.CDVIonicKeyboard$3,float)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.ViewTreeObserver$OnGlobalLayoutListener access$102(io.ionic.keyboard.CDVIonicKeyboard,android.view.ViewTreeObserver$OnGlobalLayoutListener)\u003e",
      "sourceStatement": "staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.ViewTreeObserver$OnGlobalLayoutListener access$102(io.ionic.keyboard.CDVIonicKeyboard,android.view.ViewTreeObserver$OnGlobalLayoutListener)\u003e($r2, $r9)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$402(io.ionic.keyboard.CDVIonicKeyboard,android.view.View)\u003e",
      "sourceStatement": "staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$402(io.ionic.keyboard.CDVIonicKeyboard,android.view.View)\u003e($r2, $r7)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$000(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.ViewTreeObserver$OnGlobalLayoutListener access$100(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.ViewTreeObserver$OnGlobalLayoutListener access$100(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$400(io.ionic.keyboard.CDVIonicKeyboard)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.view.View access$400(io.ionic.keyboard.CDVIonicKeyboard)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard: android.widget.FrameLayout$LayoutParams access$502(io.ionic.keyboard.CDVIonicKeyboard,android.widget.FrameLayout$LayoutParams)\u003e",
      "sourceStatement": "staticinvoke \u003cio.ionic.keyboard.CDVIonicKeyboard: android.widget.FrameLayout$LayoutParams access$502(io.ionic.keyboard.CDVIonicKeyboard,android.widget.FrameLayout$LayoutParams)\u003e($r2, $r13)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r14.\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003cio.ionic.keyboard.CDVIonicKeyboard$3: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $r16.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r14)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader: android.webkit.WebResourceResponse shouldInterceptRequest(android.net.Uri)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003candroidx.webkit.WebViewAssetLoader: android.webkit.WebResourceResponse shouldInterceptRequest(android.net.Uri)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader: android.webkit.WebResourceResponse shouldInterceptRequest(android.net.Uri)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$PathMatcher: androidx.webkit.WebViewAssetLoader$PathHandler match(android.net.Uri)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.webkit.WebViewAssetLoader$PathMatcher: androidx.webkit.WebViewAssetLoader$PathHandler match(android.net.Uri)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader: android.webkit.WebResourceResponse shouldInterceptRequest(android.net.Uri)\u003e",
      "targetMethod": "\u003candroidx.webkit.WebViewAssetLoader$PathMatcher: java.lang.String getSuffixPath(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r5.\u003candroidx.webkit.WebViewAssetLoader$PathMatcher: java.lang.String getSuffixPath(java.lang.String)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.webkit.WebViewAssetLoader: android.webkit.WebResourceResponse shouldInterceptRequest(android.net.Uri)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient$$ExternalSyntheticLambda0: android.webkit.WebResourceResponse handle(java.lang.String)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r6.\u003candroidx.webkit.WebViewAssetLoader$PathHandler: android.webkit.WebResourceResponse handle(java.lang.String)\u003e($r7)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient$$ExternalSyntheticLambda0: android.webkit.WebResourceResponse handle(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: android.webkit.WebResourceResponse lambda$new$0$org-apache-cordova-engine-SystemWebViewClient(org.apache.cordova.engine.SystemWebViewEngine,java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r1.\u003corg.apache.cordova.engine.SystemWebViewClient: android.webkit.WebResourceResponse lambda$new$0$org-apache-cordova-engine-SystemWebViewClient(org.apache.cordova.engine.SystemWebViewEngine,java.lang.String)\u003e($r2, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.engine.SystemWebViewClient: android.webkit.WebResourceResponse lambda$new$0$org-apache-cordova-engine-SystemWebViewClient(org.apache.cordova.engine.SystemWebViewEngine,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: java.util.ArrayList getPluginPathHandlers()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003corg.apache.cordova.PluginManager: java.util.ArrayList getPluginPathHandlers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: java.util.ArrayList getPluginPathHandlers()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaPluginPathHandler getPathHandler()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaPluginPathHandler getPathHandler()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param0.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.app.Activity: java.lang.Object getSystemService(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: java.lang.Object getSystemService(java.lang.String)\u003e(\"connectivity\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: java.lang.Object getSystemService(java.lang.String)\u003e(\"connectivity\")",
      "kind": "GENERIC_FAKE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void registerConnectivityActionReceiver()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: void registerConnectivityActionReceiver()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void registerConnectivityActionReceiver()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r5.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e",
      "sourceStatement": "$r7 \u003d specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: org.json.JSONObject getConnectionInfo(android.net.NetworkInfo)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.String toString()\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r8.\u003cjava.lang.Object: java.lang.String toString()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r10.\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $param2.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r10)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: int calculatePackedMessageLength(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e",
      "sourceStatement": "$i5 \u003d specialinvoke this.\u003corg.apache.cordova.NativeToJsMessageQueue: int calculatePackedMessageLength(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e($r5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: int calculatePackedMessageLength(org.apache.cordova.NativeToJsMessageQueue$JsMessage)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLengthHelper(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity",
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.NativeToJsMessageQueue: void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder)\u003e($r5, $r6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: int calculateEncodedLength()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue: void packMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage,java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessage(java.lang.StringBuilder)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessage(java.lang.StringBuilder)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getStatus()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r2.\u003corg.apache.cordova.PluginResult: int getStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e",
      "sourceStatement": "$z2 \u003d virtualinvoke $r2.\u003corg.apache.cordova.PluginResult: boolean getKeepCallback()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessage(java.lang.StringBuilder)\u003e",
      "targetMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param1.\u003corg.apache.cordova.PluginResult: int getMessageType()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param1.\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getStrMessage()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param1.\u003corg.apache.cordova.PluginResult: java.lang.String getStrMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaArgs: void \u003cinit\u003e(org.json.JSONArray)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void v(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void v(java.lang.String,java.lang.String)\u003e(\"StatusBar\", $r5)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.view.Window getWindow()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroid.app.Activity: android.view.Window getWindow()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginResult: void \u003cinit\u003e(org.apache.cordova.PluginResult$Status,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $param2.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r10)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.NativeToJsMessageQueue$JsMessage: void encodeAsMessageHelper(java.lang.StringBuilder,org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param1.\u003corg.apache.cordova.PluginResult: java.lang.String getMessage()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($param1, $param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $r9.\u003corg.apache.cordova.CordovaWebView: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)\u003e($r12, $param2)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void i(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void i(java.lang.String,java.lang.String)\u003e(\"App\", \"WARNING: Back Button Default Behavior will be overridden.  The backbutton event will be fired!\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003corg.apache.cordova.CordovaWebView: void setButtonPlumbedToJs(int,boolean)\u003e(4, $param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: void \u003cinit\u003e(org.apache.cordova.PluginResult$Status,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r12.\u003corg.apache.cordova.PluginResult: void \u003cinit\u003e(org.apache.cordova.PluginResult$Status,java.lang.String)\u003e($r6, \"\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $param2.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$6: void \u003cinit\u003e(org.apache.cordova.statusbar.StatusBar)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r16)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$5: void \u003cinit\u003e(org.apache.cordova.statusbar.StatusBar,org.apache.cordova.CordovaArgs)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r15)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar$7: void \u003cinit\u003e(org.apache.cordova.statusbar.StatusBar)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.statusbar.StatusBar: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void runOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.appcompat.app.AppCompatActivity: void runOnUiThread(java.lang.Runnable)\u003e($r17)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.arch.core.internal.FastSafeIterableMap: java.util.Iterator descendingIterator()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r3, \"observerMap.descendingIterator()\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r5, \"next()\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r11.\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"state\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r12.\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)\u003e($r8)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003candroidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r12)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void popParentState()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onPause()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onPause()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onPause()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onPause()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r1, 700L)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onPause()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchPause()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void dispatchPause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentController: void dispatchPause()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchPause()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentManager: void dispatchPause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchPause()\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.fragment.app.FragmentManager: void dispatchStateChange(int)\u003e(5)",
      "kind": "SPECIAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onPause()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.fragment.app.FragmentActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onPause()\u003e",
      "targetMethod": "\u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003corg.apache.cordova.LOG: void d(java.lang.String,java.lang.String)\u003e($r1, \"Paused the activity.\")",
      "kind": "STATIC",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onPause()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void handlePause(boolean)\u003e($z0)",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl: boolean isInitialized()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onPause(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onPause(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onPause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onPause(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onPause(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onPause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void unregisterReceiver()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: void unregisterReceiver()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void unregisterReceiver()\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: android.content.Context getContext()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e(\"pause\")",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r4.\u003corg.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)\u003e(\"CoreAndroid\")",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003corg.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(org.apache.cordova.PluginResult)\u003e($r4)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003corg.apache.cordova.PluginResult: void setKeepCallback(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CoreAndroid: void sendEventMessage(org.apache.cordova.PluginResult)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatActivity: void onNewIntent(android.content.Intent)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.fragment.app.FragmentController: void noteStateNotSaved()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void onNewIntent(android.content.Intent)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003corg.apache.cordova.CordovaWebView: void onNewIntent(android.content.Intent)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.PluginManager: void onNewIntent(android.content.Intent)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003corg.apache.cordova.PluginManager: void onNewIntent(android.content.Intent)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onNewIntent(android.content.Intent)\u003e",
      "sourceStatement": "virtualinvoke $r7.\u003corg.apache.cordova.CordovaPlugin: void onNewIntent(android.content.Intent)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void onResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onResume(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003corg.apache.cordova.CordovaPlugin: void onResume(boolean)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void onResume(boolean)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void onResume(boolean)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void unregisterReceiver()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: void unregisterReceiver()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void onResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.networkinformation.NetworkManager: void registerConnectivityActionReceiver()\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.networkinformation.NetworkManager: void registerConnectivityActionReceiver()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)\u003e(\"resume\")",
      "kind": "SPECIAL",
      "component": [
        "org.apache.cordova.CordovaActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e",
      "sourceStatement": "virtualinvoke $r13.\u003corg.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: com.twilio.voice.Call$Listener callListener()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: com.twilio.voice.Call$Listener callListener()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$3: void \u003cinit\u003e(com.phonegap.plugins.twiliovoice.TwilioVoicePlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$2: void \u003cinit\u003e(com.phonegap.plugins.twiliovoice.TwilioVoicePlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "sourceStatement": "specialinvoke this.\u003corg.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param0.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: com.phonegap.plugins.twiliovoice.SoundPoolManager getInstance(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: com.phonegap.plugins.twiliovoice.SoundPoolManager getInstance(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager$1: void \u003cinit\u003e(com.phonegap.plugins.twiliovoice.SoundPoolManager)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param0.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.content.ContextWrapper: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param0.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r3.\u003candroidx.appcompat.app.AppCompatActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)\u003e",
      "sourceStatement": "$i3 \u003d staticinvoke \u003candroidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)\u003e($r2, $i2, $param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)\u003e",
      "targetMethod": "\u003candroidx.collection.ContainerHelpers: int binarySearch(int[],int,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.collection.ContainerHelpers: int binarySearch(int[],int,int)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003cjava.lang.Object: boolean equals(java.lang.Object)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)\u003e($r0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)\u003e(class \"Lcom/google/firebase/messaging/FirebaseMessaging;\")",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseApp: void checkNotDeleted()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($r2, \"Firebase Messaging component is not present\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke $r10.\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getProjectId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getProjectId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r2, \"Please set your project ID. A valid Firebase project ID is required to communicate with Firebase server APIs: It identifies your project with Google.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r2, \"Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r2, \"Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isValidAppIdFormat(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isValidAppIdFormat(java.lang.String)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e($z0, \"Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isValidApiKeyFormat(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: boolean isValidApiKeyFormat(java.lang.String)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void checkRequiredFirebaseOptions(com.google.firebase.FirebaseApp)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e($z0, \"Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.iid.Metadata: java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e($r2, \"*\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String rationaliseScope(java.lang.String)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String rationaliseScope(java.lang.String)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)\u003e(null)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String)\u003e(this, $param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r5.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e($r1, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzd: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.gms.tasks.zzd: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e($param0, $param1, $r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzd: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzf: void \u003cinit\u003e(com.google.android.gms.tasks.zzd,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzf: void \u003cinit\u003e(com.google.android.gms.tasks.zzd,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void \u003cinit\u003e(com.google.android.gms.tasks.zzd,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Continuation zza(com.google.android.gms.tasks.zzd)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Continuation zza(com.google.android.gms.tasks.zzd)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r2.\u003ccom.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r1.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e($r2, $r3, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: long setCreationTime(java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.google.firebase.iid.Store: long setCreationTime(java.lang.String)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: long setCreationTime(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: long writeCreationTimeToSharedPreferences(java.lang.String)\u003e",
      "sourceStatement": "$l0 \u003d specialinvoke this.\u003ccom.google.firebase.iid.Store: long writeCreationTimeToSharedPreferences(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: long writeCreationTimeToSharedPreferences(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: java.lang.String createSubtypeInfoKey(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.iid.Store: java.lang.String createSubtypeInfoKey(java.lang.String,java.lang.String)\u003e($param0, \"cre\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: long writeCreationTimeToSharedPreferences(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: java.lang.String createSubtypeInfoKey(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.firebase.iid.Store: java.lang.String createSubtypeInfoKey(java.lang.String,java.lang.String)\u003e($param0, \"cre\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003ccom.google.firebase.installations.FirebaseInstallationsApi: com.google.android.gms.tasks.Task getId()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r1, \"Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getProjectId()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getProjectId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r1, \"Please set your Project ID. A valid Firebase Project ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($r1, \"Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: boolean isValidAppIdFormat(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: boolean isValidAppIdFormat(java.lang.String)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e($z0, \"Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.Utils: boolean isValidApiKeyFormat(java.lang.String)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.installations.Utils: boolean isValidApiKeyFormat(java.lang.String)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)\u003e($z0, \"Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.Please refer to https://firebase.google.com/support/privacy/init-options.\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getCacheFid()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getCacheFid()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.GetIdListener: void \u003cinit\u003e(com.google.android.gms.tasks.TaskCompletionSource)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.GetIdListener: void \u003cinit\u003e(com.google.android.gms.tasks.TaskCompletionSource)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetIdListener: void \u003cinit\u003e(com.google.android.gms.tasks.TaskCompletionSource)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetIdListener()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r3.\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$1: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getId()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$1: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getId$0(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getId$0(com.google.firebase.installations.FirebaseInstallations)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getId$0(com.google.firebase.installations.FirebaseInstallations)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e(false)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e($r4, \"generatefid.lock\")",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e($r4, \"generatefid.lock\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: void \u003cinit\u003e(java.nio.channels.FileChannel,java.nio.channels.FileLock)\u003e",
      "sourceStatement": "specialinvoke $r11.\u003ccom.google.firebase.installations.CrossProcessLock: void \u003cinit\u003e(java.nio.channels.FileChannel,java.nio.channels.FileLock)\u003e($r7, $r9)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: void \u003cinit\u003e(java.nio.channels.FileChannel,java.nio.channels.FileLock)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: org.json.JSONObject readJSONFromFile()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallation: org.json.JSONObject readJSONFromFile()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ATTEMPT_MIGRATION\", 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e(\"NOT_GENERATED\", 1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e(\"UNREGISTERED\", 2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e(\"REGISTERED\", 3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: void \u003cinit\u003e(java.lang.String,int)\u003e(\"REGISTER_ERROR\", 4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e()",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)\u003e(0L)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e($r0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)\u003e(0L)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e",
      "sourceStatement": "specialinvoke $r7.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e($r8, $r1, $r2, $r3, $l0, $l1, $r4, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String)\u003e($param0, $param1, $param2, $param3, $param4, $param5, $param6)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long)\u003e($l1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long)\u003e($l2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r7.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r6.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isNotGenerated()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "$r8 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: boolean isDefaultApp()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: boolean isDefaultApp()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean shouldAttemptMigration()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean shouldAttemptMigration()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean shouldAttemptMigration()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readIid()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r5.\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readIid()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readIid()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readInstanceIdFromLocalStorage()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readInstanceIdFromLocalStorage()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readIid()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readPublicKeyFromLocalStorageAndCalculateInstanceId()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.google.firebase.installations.local.IidStore: java.lang.String readPublicKeyFromLocalStorageAndCalculateInstanceId()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r4.\u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: byte[] getBytesFromUUID(java.util.UUID,byte[])\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.installations.RandomFidGenerator: byte[] getBytesFromUUID(java.util.UUID,byte[])\u003e($r1, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String createRandomFid()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String encodeFidBase64UrlSafe(byte[])\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.installations.RandomFidGenerator: java.lang.String encodeFidBase64UrlSafe(byte[])\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r6.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e(this, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getAuthToken()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getAuthToken()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getRefreshToken()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getRefreshToken()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getExpiresInSecs()\u003e",
      "sourceStatement": "$l0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: long getExpiresInSecs()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getTokenCreationEpochInSecs()\u003e",
      "sourceStatement": "$l0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: long getTokenCreationEpochInSecs()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: void \u003cinit\u003e(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFisError()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFisError()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e",
      "sourceStatement": "this \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry$Builder: com.google.firebase.installations.local.PersistedInstallationEntry build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r2.\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getAuthToken()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getAuthToken()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getRefreshToken()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getRefreshToken()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getTokenCreationEpochInSecs()\u003e",
      "sourceStatement": "$l1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: long getTokenCreationEpochInSecs()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: long getExpiresInSecs()\u003e",
      "sourceStatement": "$l1 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: long getExpiresInSecs()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFisError()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFisError()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: void releaseAndClose()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003ccom.google.firebase.installations.CrossProcessLock: void releaseAndClose()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r6.\u003ccom.google.firebase.installations.StateListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetIdListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzj: void \u003cinit\u003e(com.google.android.gms.tasks.zzi,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.gms.tasks.zzj: void \u003cinit\u003e(com.google.android.gms.tasks.zzi,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void \u003cinit\u003e(com.google.android.gms.tasks.zzi,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzi: java.lang.Object zza(com.google.android.gms.tasks.zzi)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzi: java.lang.Object zza(com.google.android.gms.tasks.zzi)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzb(com.google.android.gms.tasks.zzi)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzb(com.google.android.gms.tasks.zzi)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzb(com.google.android.gms.tasks.zzi)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzb(com.google.android.gms.tasks.zzi)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void onComplete(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003ccom.google.android.gms.tasks.OnCompleteListener: void onComplete(com.google.android.gms.tasks.Task)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void onComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: void lambda$awaitTaskAllowOnMainThread$3$FirebaseInstanceId(java.util.concurrent.CountDownLatch,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: void lambda$awaitTaskAllowOnMainThread$3$FirebaseInstanceId(java.util.concurrent.CountDownLatch,com.google.android.gms.tasks.Task)\u003e($r2, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e(this, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$1: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getIdWithoutTriggeringSync()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Task must not be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void \u003cinit\u003e(java.util.concurrent.CountDownLatch)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void \u003cinit\u003e(java.util.concurrent.CountDownLatch)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$2: void \u003cinit\u003e(java.util.concurrent.CountDownLatch)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e($r3, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzi: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzi: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object awaitTaskAllowOnMainThread(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object getResultOrThrowException(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object getResultOrThrowException(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object getResultOrThrowException(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.Object getResultOrThrowException(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Object getResult()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzb()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzb()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzb()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)\u003e($z0, \"Task is not yet complete\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzd()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzd()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync(java.lang.String,java.lang.String)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getSubtype()\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getSubtype()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: java.lang.String getSubtype()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.Store$Token getTokenWithoutTriggeringSync(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: com.google.firebase.iid.Store$Token getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r2.\u003ccom.google.firebase.iid.Store: com.google.firebase.iid.Store$Token getToken(java.lang.String,java.lang.String,java.lang.String)\u003e($r4, $param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: com.google.firebase.iid.Store$Token getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store: java.lang.String createTokenKey(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ccom.google.firebase.iid.Store: java.lang.String createTokenKey(java.lang.String,java.lang.String,java.lang.String)\u003e($param0, $param1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Store: com.google.firebase.iid.Store$Token getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Store$Token: com.google.firebase.iid.Store$Token parse(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.iid.Store$Token: com.google.firebase.iid.Store$Token parse(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean tokenNeedsRefresh(com.google.firebase.iid.Store$Token)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.firebase.iid.FirebaseInstanceId: boolean tokenNeedsRefresh(com.google.firebase.iid.Store$Token)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$3: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$3: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e(this, $r4, $param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$3: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$2$FirebaseInstanceId(java.lang.String,java.lang.String,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)\u003e",
      "sourceStatement": "$param2 \u003d virtualinvoke $r7.\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)\u003e($param0, $param1, $r8)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$3: com.google.android.gms.tasks.Task start()\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $param2.\u003ccom.google.firebase.iid.RequestDeduplicator$GetTokenRequest: com.google.android.gms.tasks.Task start()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$3: com.google.android.gms.tasks.Task start()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r5.\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)\u003e($r1, $r2, $r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task getToken(java.lang.String,java.lang.String,java.lang.String)\u003e($param0, $param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "sourceStatement": "$r5 \u003d specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e($param0, $param1, $param2, $r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e($param0, $param1, $param2, $param3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003ccom.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r6.\u003ccom.google.firebase.FirebaseOptions: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: int getGmsVersionCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.iid.Metadata: int getGmsVersionCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: int getGmsVersionCode()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.iid.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)\u003e(\"com.google.android.gms\")",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getAppVersionCode()\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.iid.Metadata: java.lang.String getAppVersionCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getAppVersionCode()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: void populateAppVersionInfo()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.iid.Metadata: void populateAppVersionInfo()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.Metadata: void populateAppVersionInfo()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.firebase.iid.Metadata: android.content.pm.PackageInfo getPackageInfo(java.lang.String)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.Metadata: java.lang.String getAppVersionName()\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r7.\u003ccom.google.firebase.iid.Metadata: java.lang.String getAppVersionName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String getHashedFirebaseAppName()\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: java.lang.String getHashedFirebaseAppName()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String getHashedFirebaseAppName()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: java.lang.String getName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String getHashedFirebaseAppName()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String base64UrlSafe(byte[])\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.iid.GmsRpc: java.lang.String base64UrlSafe(byte[])\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003ccom.google.firebase.installations.FirebaseInstallationsApi: com.google.android.gms.tasks.Task getToken(boolean)\u003e(false)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void preConditionChecks()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: void \u003cinit\u003e(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.GetAuthTokenListener: void \u003cinit\u003e(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource)\u003e($r2, $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: void \u003cinit\u003e(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void addStateListeners(com.google.firebase.installations.StateListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task addGetAuthTokenListener()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e(this, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: java.lang.Runnable lambdaFactory$(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: void \u003cinit\u003e(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.android.gms.tasks.Task getToken(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003cjava.util.concurrent.ExecutorService: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$2: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getToken$1(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getToken$1(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e($r1, $z0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$getToken$1(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003ccom.google.firebase.installations.FirebaseInstallations: void doRegistrationOrRefresh(boolean)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r6.\u003ccom.google.firebase.installations.StateListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isRegistered()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isRegistered()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isRegistered()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations$$Lambda$4: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$doRegistrationOrRefresh$2(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$doRegistrationOrRefresh$2(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e($r1, $z0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void lambda$doRegistrationOrRefresh$2(com.google.firebase.installations.FirebaseInstallations,boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "sourceStatement": "specialinvoke $param0.\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e($param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.firebase.FirebaseApp: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.CrossProcessLock: com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String)\u003e($r3, \"generatefid.lock\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003ccom.google.firebase.installations.local.PersistedInstallation: com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.CrossProcessLock: void releaseAndClose()\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003ccom.google.firebase.installations.CrossProcessLock: void releaseAndClose()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isErrored()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isErrored()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isErrored()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r1.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: boolean isUnregistered()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApiKey()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.local.AutoValue_PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param0.\u003ccom.google.firebase.installations.local.PersistedInstallationEntry: java.lang.String getFirebaseInstallationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getProjectIdentifier()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: java.lang.String getApplicationId()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r4.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e($r5, $r6, $r7, $r8, $r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.RequestLimiter: boolean isRequestAllowed()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r13.\u003ccom.google.firebase.installations.remote.RequestLimiter: boolean isRequestAllowed()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)\u003e",
      "sourceStatement": "$r16 \u003d specialinvoke this.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.URL getFullyQualifiedRequestUri(java.lang.String)\u003e($r15)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "sourceStatement": "$r17 \u003d specialinvoke this.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e($r16, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: void \u003cinit\u003e(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e",
      "sourceStatement": "$r12 \u003d virtualinvoke $r11.\u003ccom.google.firebase.components.Dependency: java.lang.Class getInterface()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$4: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.util.Set setOf(java.lang.Class)\u003e(class \"Lcom/google/firebase/heartbeatinfo/HeartBeatConsumer;\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.Set setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentContainer: java.util.Set setOf(java.lang.Class)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.util.Set setOf(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.firebase.components.AbstractComponentContainer: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: java.lang.Object get()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.LazySet: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: java.util.Set get()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003ccom.google.firebase.components.LazySet: java.util.Set get()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.LazySet: java.util.Set get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.LazySet: void updateSet()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.components.LazySet: void updateSet()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(android.content.Context,java.util.Set)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(android.content.Context,java.util.Set)\u003e($r3, $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(android.content.Context,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(android.content.Context)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: com.google.firebase.inject.Provider lambdaFactory$(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(android.content.Context,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.components.Lazy: void \u003cinit\u003e(com.google.firebase.inject.Provider)\u003e($r6)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(android.content.Context,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor)\u003e($r2, $param1, $r8)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: void \u003cinit\u003e(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $param0.\u003ccom.google.firebase.components.ComponentContainer: java.util.Set setOf(java.lang.Class)\u003e(class \"Lcom/google/firebase/platforminfo/LibraryVersion;\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.LazySet: void updateSet()\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r4.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Component$$Lambda$3: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Component: java.lang.Object lambda$intoSet$2(java.lang.Object,com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.components.Component: java.lang.Object lambda$intoSet$2(java.lang.Object,com.google.firebase.components.ComponentContainer)\u003e($r1, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.ComponentRuntime: java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.ComponentRuntime,com.google.firebase.components.Component)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.components.ComponentFactory: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$$Lambda$1: java.lang.Object create(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e($r1, $r2, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $param2.\u003ccom.google.firebase.components.ComponentContainer: java.lang.Object get(java.lang.Class)\u003e(class \"Landroid/content/Context;\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: java.lang.String extract(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param1.\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor: java.lang.String extract(java.lang.Object)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$6: java.lang.String extract(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$3(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$3(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)\u003e($param0, $r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: java.lang.String extract(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param1.\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor: java.lang.String extract(java.lang.Object)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$5: java.lang.String extract(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$2(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$2(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: java.lang.String extract(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param1.\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor: java.lang.String extract(java.lang.Object)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$4: java.lang.String extract(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$1(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$1(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: java.lang.String extract(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param1.\u003ccom.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor: java.lang.String extract(java.lang.Object)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar$$Lambda$1: java.lang.String extract(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$0(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.FirebaseCommonRegistrar: java.lang.String lambda$getComponents$0(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: void \u003cinit\u003e(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: void \u003cinit\u003e(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)\u003e($r2, $r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: void \u003cinit\u003e(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: void \u003cinit\u003e(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getLibraryName()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ccom.google.firebase.platforminfo.LibraryVersion: java.lang.String getLibraryName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getVersion()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ccom.google.firebase.platforminfo.LibraryVersion: java.lang.String getVersion()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "sourceStatement": "$r11 \u003d interfaceinvoke $r10.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e(\"fire-installations-id\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: java.lang.Object get()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r3.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo$$Lambda$1: java.lang.Object get()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)\u003e($param0, $l0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendGlobalHeartBeat(long)\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke $r4.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendGlobalHeartBeat(long)\u003e($l0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendGlobalHeartBeat(long)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)\u003e(\"fire-global\", $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e(\"NONE\", 0, 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e(\"SDK\", 1, 1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e(\"GLOBAL\", 2, 2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: void \u003cinit\u003e(java.lang.String,int,int)\u003e(\"COMBINED\", 3, 3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String getUserAgent()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r13.\u003ccom.google.firebase.platforminfo.UserAgentPublisher: java.lang.String getUserAgent()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String getUserAgent()\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set getRegisteredVersions()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set getRegisteredVersions()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r11.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e",
      "sourceStatement": "$r7 \u003d specialinvoke this.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e($r1, $r2)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e($r1, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke $r0.\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)\u003e($param1, 64)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)\u003e(\"SHA1\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Hex: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)\u003e($r3, false)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: java.lang.String getFingerprintHashForPackage()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)\u003e($r3, false)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)\u003e($r17, $param1, $param3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String)\u003e($param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: byte[] getJsonBytes(org.json.JSONObject)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: void writeRequestBodyToOutputStream(java.net.URLConnection,byte[])\u003e($param0, $r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean shouldSendSdkHeartBeat(java.lang.String,long)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean isSameDateUtc(long,long)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.firebase.heartbeatinfo.HeartBeatInfoStorage: boolean isSameDateUtc(long,long)\u003e($l1, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e(\"BAD_CONFIG\", 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e(\"UNAVAILABLE\", 1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.firebase.installations.FirebaseInstallationsException$Status: void \u003cinit\u003e(java.lang.String,int)\u003e(\"TOO_MANY_REQUESTS\", 2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.remote.FirebaseInstallationServiceClient: com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)\u003e",
      "sourceStatement": "specialinvoke $r21.\u003ccom.google.firebase.installations.FirebaseInstallationsException: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)\u003e(\"Firebase Installations Service is unavailable. Please try again later.\", $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallationsException: void \u003cinit\u003e(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status)\u003e",
      "targetMethod": "\u003ccom.google.firebase.FirebaseException: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.FirebaseException: void \u003cinit\u003e(java.lang.String)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.FirebaseException: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)\u003e($param0, \"Detail message must not be empty\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void doNetworkCallIfNecessary(boolean)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnException(java.lang.Exception)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnException(java.lang.Exception)\u003e($r5)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.FirebaseInstallations: void triggerOnException(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: boolean onException(java.lang.Exception)\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r6.\u003ccom.google.firebase.installations.StateListener: boolean onException(java.lang.Exception)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.installations.GetAuthTokenListener: boolean onException(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Exception)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Exception)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Exception must not be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean zzb(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isCanceled()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isCanceled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzk: void \u003cinit\u003e(com.google.android.gms.tasks.zzl,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.gms.tasks.zzk: void \u003cinit\u003e(com.google.android.gms.tasks.zzl,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void \u003cinit\u003e(com.google.android.gms.tasks.zzl,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzt: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzl: java.lang.Object zza(com.google.android.gms.tasks.zzl)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzl: java.lang.Object zza(com.google.android.gms.tasks.zzl)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzb(com.google.android.gms.tasks.zzl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzb(com.google.android.gms.tasks.zzl)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzb(com.google.android.gms.tasks.zzl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzb(com.google.android.gms.tasks.zzl)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Exception getException()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.tasks.Task: java.lang.Exception getException()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void onFailure(java.lang.Exception)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003ccom.google.android.gms.tasks.OnFailureListener: void onFailure(java.lang.Exception)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzh: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzh: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isCanceled()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isCanceled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void onServiceConnected(android.content.ComponentName,android.os.IBinder)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void onServiceConnected(android.content.ComponentName,android.os.IBinder)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzk: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,android.os.IBinder)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003ccom.google.android.gms.cloudmessaging.zzk: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,android.os.IBinder)\u003e(this, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzk: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,android.os.IBinder)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void onServiceConnected(android.content.ComponentName,android.os.IBinder)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void onServiceConnected(android.content.ComponentName,android.os.IBinder)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzk: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzo: void \u003cinit\u003e(android.os.IBinder)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.cloudmessaging.zzo: void \u003cinit\u003e(android.os.IBinder)\u003e($r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzo: void \u003cinit\u003e(android.os.IBinder)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.cloudmessaging.zzj: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zza()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)\u003e($r1)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzi: boolean handleMessage(android.os.Message)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(android.os.Message)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(android.os.Message)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(android.os.Message)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)\u003e($r5, this)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.ServiceConnection)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.ServiceConnection)\u003e($param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(android.os.Message)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzs: void zza(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003ccom.google.android.gms.cloudmessaging.zzq: void zza(android.os.Bundle)\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzs: void zza(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzq: void zza(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.google.android.gms.cloudmessaging.zzq: void zza(java.lang.Object)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzq: void zza(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003ccom.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zze: void \u003cinit\u003e(com.google.android.gms.tasks.zzc,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zze: void \u003cinit\u003e(com.google.android.gms.tasks.zzc,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void \u003cinit\u003e(com.google.android.gms.tasks.zzc,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isCanceled()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.google.android.gms.tasks.Task: boolean isCanceled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.Continuation zzb(com.google.android.gms.tasks.zzc)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.Continuation zzb(com.google.android.gms.tasks.zzc)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzt: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003ccom.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzt: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: android.os.Bundle zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.Rpc: android.os.Bundle zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: android.os.Bundle zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: android.os.Bundle zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Object getResult()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Object)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors$$Lambda$0: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003ccom.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String lambda$extractResponseWhenComplete$0$GmsRpc(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003ccom.google.firebase.iid.GmsRpc: java.lang.String lambda$extractResponseWhenComplete$0$GmsRpc(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String lambda$extractResponseWhenComplete$0$GmsRpc(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult(java.lang.Class)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Object getResult(java.lang.Class)\u003e(class \"Ljava/io/IOException;\")",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzb()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzb()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult(java.lang.Class)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzd()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzd()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String lambda$extractResponseWhenComplete$0$GmsRpc(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: java.lang.String handleResponse(android.os.Bundle)\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: java.lang.String handleResponse(android.os.Bundle)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Exception must not be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zzc()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zzc()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzp: void zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003ccom.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzp: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzo: void \u003cinit\u003e(com.google.android.gms.tasks.zzp,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzo: void \u003cinit\u003e(com.google.android.gms.tasks.zzp,com.google.android.gms.tasks.Task)\u003e(this, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void \u003cinit\u003e(com.google.android.gms.tasks.zzp,com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzp: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e($r9)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)\u003e(\"Must not be called on the main application thread\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.zzb: boolean zza()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.common.util.zzb: boolean zza()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)\u003e($param0, \"Task must not be null\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isComplete()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isComplete()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e(com.google.android.gms.tasks.zzy)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e(com.google.android.gms.tasks.zzy)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e(com.google.android.gms.tasks.zzy)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zza)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zza)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zza)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e($r2, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zza)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e($r2, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzl: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzl: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzl: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zza)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e($r2, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzh: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.zzh: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e($param0, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzh: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzh: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks$zzb: void zza()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.Tasks$zzb: void zza()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isCanceled()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isCanceled()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Exception getException()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Exception getException()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r13.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.components.Lazy: java.lang.Object get()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r13.\u003ccom.google.firebase.inject.Provider: java.lang.Object get()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e",
      "sourceStatement": "$r16 \u003d interfaceinvoke $r14.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String)\u003e(\"fire-iid\")",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r16.\u003ccom.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: int getCode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: android.os.Bundle setDefaultAttributesToBundle(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String getUserAgent()\u003e",
      "sourceStatement": "$param0 \u003d interfaceinvoke $r15.\u003ccom.google.firebase.platforminfo.UserAgentPublisher: java.lang.String getUserAgent()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task startRpc(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r6.\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e($param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: int zzb()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r2.\u003ccom.google.android.gms.cloudmessaging.zzr: int zzb()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: int zzb()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: android.content.pm.PackageInfo zza(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003ccom.google.android.gms.cloudmessaging.zzr: android.content.pm.PackageInfo zza(java.lang.String)\u003e(\"com.google.android.gms\")",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: android.content.pm.PackageInfo zza(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzr: android.content.pm.PackageInfo zza(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)\u003e($param0, 0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zza: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.internal.cloudmessaging.zza: com.google.android.gms.internal.cloudmessaging.zzb zza()\u003e()",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zza: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e(com.google.android.gms.internal.cloudmessaging.zzd)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e(com.google.android.gms.internal.cloudmessaging.zzd)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e(com.google.android.gms.internal.cloudmessaging.zzd)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zzc: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zza: com.google.android.gms.internal.cloudmessaging.zzb zza()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.internal.cloudmessaging.zza: com.google.android.gms.internal.cloudmessaging.zzb zza()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.common.util.concurrent.NamedThreadFactory: void \u003cinit\u003e(java.lang.String)\u003e(\"MessengerIpcClient\")",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zzc: java.util.concurrent.ScheduledExecutorService zza(int,java.util.concurrent.ThreadFactory,int)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003ccom.google.android.gms.internal.cloudmessaging.zzb: java.util.concurrent.ScheduledExecutorService zza(int,java.util.concurrent.ThreadFactory,int)\u003e(1, $r0, $i0)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.cloudmessaging.zze: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e($param0, $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: void \u003cinit\u003e(android.content.Context,java.util.concurrent.ScheduledExecutorService)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze,com.google.android.gms.cloudmessaging.zzg)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze,com.google.android.gms.cloudmessaging.zzg)\u003e(this, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze,com.google.android.gms.cloudmessaging.zzg)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzi: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.cloudmessaging.zzi: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzi: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zze)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.cloudmessaging.zze: void \u003cinit\u003e(android.os.Looper,android.os.Handler$Callback)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.internal.cloudmessaging.zze: void \u003cinit\u003e(android.os.Looper,android.os.Handler$Callback)\u003e($r3, $r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)\u003e(1, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: int zza()\u003e",
      "sourceStatement": "$param0 \u003d specialinvoke this.\u003ccom.google.android.gms.cloudmessaging.zze: int zza()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzs: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.cloudmessaging.zzs: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e($param0, 1, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzs: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzq: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.cloudmessaging.zzq: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e($param0, 1, $param2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzq: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzq: void \u003cinit\u003e(int,int,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.TaskCompletionSource: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(com.google.android.gms.cloudmessaging.zzq)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.common.internal.Preconditions: void checkState(boolean)\u003e($z0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e()",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e",
      "sourceStatement": "$r8 \u003d staticinvoke \u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.common.stats.ConnectionTracker: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r10 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e($r9)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r8.\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)\u003e($r10, $r7, this, 1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $param0.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int)\u003e($param0, $r5, $param1, $param2, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean)\u003e($param0, $param1, $param2, $param3, $param4, true)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.ServiceConnection)\u003e",
      "sourceStatement": "$param5 \u003d staticinvoke \u003ccom.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.ServiceConnection)\u003e($param3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r11 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e($r9)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzh: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "sourceStatement": "specialinvoke $r12.\u003ccom.google.android.gms.cloudmessaging.zzh: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzh: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003ccom.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzt: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzt: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.cloudmessaging.zzt: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzt: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task send(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r5.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e($r6, $r7)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.gms.tasks.zzc: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e($param0, $param1, $r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task getToken(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r5 \u003d specialinvoke this.\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)\u003e($r5)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.Executor directExecutor()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.firebase.iid.FirebaseIidExecutors: java.util.concurrent.Executor directExecutor()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.GmsRpc$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.GmsRpc)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.firebase.iid.GmsRpc$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.GmsRpc)\u003e(this)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.GmsRpc)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.GmsRpc: com.google.android.gms.tasks.Task extractResponseWhenComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e($r3, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$4: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$4: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e(this, $param1, $param2, $param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId$$Lambda$4: void \u003cinit\u003e(com.google.firebase.iid.FirebaseInstanceId,java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task lambda$getInstanceId$1$FirebaseInstanceId(java.lang.String,java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r7.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e($r3, $r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzv: java.util.concurrent.Executor zza(java.util.concurrent.Executor)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzp: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation,com.google.android.gms.tasks.zzu)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003ccom.google.android.gms.tasks.zzp: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation,com.google.android.gms.tasks.zzu)\u003e($param0, $param1, $r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzp: void \u003cinit\u003e(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation,com.google.android.gms.tasks.zzu)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.zzr)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.tasks.zzu: void zze()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.RequestDeduplicator,android.util.Pair)\u003e",
      "sourceStatement": "specialinvoke $r10.\u003ccom.google.firebase.iid.RequestDeduplicator$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.RequestDeduplicator,android.util.Pair)\u003e(this, $r5)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator$$Lambda$0: void \u003cinit\u003e(com.google.firebase.iid.RequestDeduplicator,android.util.Pair)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task getOrStartGetTokenRequest(java.lang.String,java.lang.String,com.google.firebase.iid.RequestDeduplicator$GetTokenRequest)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r8.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e($r9, $r10)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)\u003e($r6, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)\u003e($r6, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)\u003e($r6, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzp: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzp: com.google.android.gms.tasks.SuccessContinuation zza(com.google.android.gms.tasks.zzp)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzp: com.google.android.gms.tasks.SuccessContinuation zza(com.google.android.gms.tasks.zzp)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.tasks.Task: java.lang.Object getResult()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.RuntimeExecutionException: void \u003cinit\u003e(java.lang.Throwable)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003ccom.google.android.gms.tasks.RuntimeExecutionException: void \u003cinit\u003e(java.lang.Throwable)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "targetMethod": "\u003cjava.lang.Throwable: java.lang.Throwable getCause()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r9.\u003ccom.google.android.gms.tasks.RuntimeExecutionException: java.lang.Throwable getCause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "targetMethod": "\u003cjava.lang.Throwable: java.lang.Throwable getCause()\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke $r9.\u003ccom.google.android.gms.tasks.RuntimeExecutionException: java.lang.Throwable getCause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzo: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzp: void onFailure(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzp: void onFailure(java.lang.Exception)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzp: void onFailure(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzf: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r2.\u003ccom.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator$$Lambda$0: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task lambda$getOrStartGetTokenRequest$0$RequestDeduplicator(android.util.Pair,com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.firebase.iid.RequestDeduplicator: com.google.android.gms.tasks.Task lambda$getOrStartGetTokenRequest$0$RequestDeduplicator(android.util.Pair,com.google.android.gms.tasks.Task)\u003e($r3, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke this.\u003candroidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)\u003e($i0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)\u003e",
      "targetMethod": "\u003candroidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)\u003e($r1, $r2, $i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzk: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzd: void onFailure(java.lang.Exception)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003ccom.google.android.gms.tasks.OnFailureListener: void onFailure(java.lang.Exception)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzd: void onFailure(java.lang.Exception)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzc: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r3)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003ccom.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: java.lang.Object then(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: java.lang.String lambda$getToken$2$FirebaseMessaging(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ccom.google.firebase.messaging.FirebaseMessaging: java.lang.String lambda$getToken$2$FirebaseMessaging(com.google.android.gms.tasks.Task)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: java.lang.String lambda$getToken$2$FirebaseMessaging(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Object getResult()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Object getResult()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003cjava.lang.Throwable: java.lang.Throwable getCause()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.android.gms.tasks.RuntimeExecutionException: java.lang.Throwable getCause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003ccom.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003cjava.lang.Throwable: java.lang.Throwable getCause()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003ccom.google.android.gms.tasks.RuntimeExecutionException: java.lang.Throwable getCause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zze: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.tasks.zzu: void zza(java.lang.Exception)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzi: void zza(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r5)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$4: void onComplete(com.google.android.gms.tasks.Task)\u003e",
      "sourceStatement": "interfaceinvoke $r4.\u003ccom.google.android.gms.tasks.OnCompleteListener: void onComplete(com.google.android.gms.tasks.Task)\u003e($r1)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$4: void onComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: boolean isSuccessful()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: boolean isSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$4: void onComplete(com.google.android.gms.tasks.Task)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: java.lang.Exception getException()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003ccom.google.android.gms.tasks.Task: java.lang.Exception getException()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)\u003e($r6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzl: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,com.google.android.gms.cloudmessaging.zzq)\u003e",
      "sourceStatement": "specialinvoke $r8.\u003ccom.google.android.gms.cloudmessaging.zzl: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,com.google.android.gms.cloudmessaging.zzq)\u003e($r1, $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzl: void \u003cinit\u003e(com.google.android.gms.cloudmessaging.zzf,com.google.android.gms.cloudmessaging.zzq)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e",
      "sourceStatement": "$r13 \u003d staticinvoke \u003ccom.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)\u003e($r6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzs: boolean zza()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.cloudmessaging.zzq: boolean zza()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzo: void zza(android.os.Message)\u003e",
      "sourceStatement": "virtualinvoke $r18.\u003ccom.google.android.gms.cloudmessaging.zzo: void zza(android.os.Message)\u003e($r15)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.cloudmessaging.zzj: void run()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.google.android.gms.cloudmessaging.zzf: void zzb()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging$$Lambda$2: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.firebase.messaging.FirebaseMessaging: com.google.android.gms.tasks.Task getToken()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r3.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors$zza: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.tasks.zzb: void \u003cinit\u003e(android.os.Looper)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.internal.tasks.zzb: void \u003cinit\u003e(android.os.Looper)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.TaskExecutors: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzt: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.tasks.zzt: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzt: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)\u003e($r1, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin$4: void \u003cinit\u003e(com.phonegap.plugins.twiliovoice.TwilioVoicePlugin)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "sourceStatement": "virtualinvoke $r11.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)\u003e($r12)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)\u003e($r1, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003corg.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e($param0, $r3, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e($param2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003corg.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003corg.apache.cordova.CordovaInterface: androidx.appcompat.app.AppCompatActivity getActivity()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)\u003e($r4)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.TwilioVoicePlugin: void getCallDidConnect(org.apache.cordova.CallbackContext)\u003e",
      "targetMethod": "\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager$1: void onLoadComplete(android.media.SoundPool,int,int)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: boolean access$002(com.phonegap.plugins.twiliovoice.SoundPoolManager,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: boolean access$002(com.phonegap.plugins.twiliovoice.SoundPoolManager,boolean)\u003e($r2, true)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager$1: void onLoadComplete(android.media.SoundPool,int,int)\u003e",
      "targetMethod": "\u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: boolean access$100(com.phonegap.plugins.twiliovoice.SoundPoolManager)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.phonegap.plugins.twiliovoice.SoundPoolManager: boolean access$100(com.phonegap.plugins.twiliovoice.SoundPoolManager)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void setupSplashScreen(androidx.core.splashscreen.SplashScreen)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda1: void run()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r4, $l1)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$$ExternalSyntheticLambda1: void run()\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: void lambda$setupSplashScreen$1$org-apache-cordova-SplashScreenPlugin()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003corg.apache.cordova.SplashScreenPlugin: void lambda$setupSplashScreen$1$org-apache-cordova-SplashScreenPlugin()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)\u003e",
      "sourceStatement": "$r10 \u003d virtualinvoke this.\u003candroidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)\u003e($r5, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e($param0, $param1, 0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ThemeUtils: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)\u003e(this, $param0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)\u003e(this, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void \u003cinit\u003e(android.view.View)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void \u003cinit\u003e(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)\u003e($r4, $param0, $r1, $param1, 0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e($r3, $r4, $r1, $param0, $r6, $param1, 0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e($param0, $param1, $param2, $param3, $param4, $param5, $param6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void \u003cinit\u003e(android.widget.ImageView)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void \u003cinit\u003e(android.content.Context,android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e($param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)\u003e($r4, $param0, $r1, $param1, 0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)\u003e($r3, $r4, $r1, $param0, $r6, $param1, 0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)\u003e",
      "sourceStatement": "$param1 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)\u003e($param1, -1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: boolean hasValue(int)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.appcompat.widget.TintTypedArray: void recycle()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)\u003e($r10, $param1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)\u003e($param0, $param3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.appcompat.app.AppCompatViewInflater: void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.appcompat.app.AppCompatViewInflater: void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet)\u003e($r5, $param0, $param3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void obtainLevelFromDrawable(android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.widget.AppCompatImageHelper: void obtainLevelFromDrawable(android.graphics.drawable.Drawable)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void applyImageLevel()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.widget.AppCompatImageHelper: void applyImageLevel()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$hierarchyListener$1: void onChildViewAdded(android.view.View,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: boolean computeDecorFitsWindow(android.window.SplashScreenView)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003candroidx.core.splashscreen.SplashScreen$Impl31: boolean computeDecorFitsWindow(android.window.SplashScreenView)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: boolean computeDecorFitsWindow(android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"child\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: boolean computeDecorFitsWindow(android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r3, \"Builder().build()\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: boolean computeDecorFitsWindow(android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003candroid.window.SplashScreenView: android.view.View getRootView()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $param0.\u003candroid.window.SplashScreenView: android.view.View getRootView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$hierarchyListener$1: void onChildViewAdded(android.view.View,android.view.View)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setMDecorFitWindowInsets(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setMDecorFitWindowInsets(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31$$ExternalSyntheticLambda0: void onSplashScreenExit(android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void $r8$lambda$_AQ1xSddL7-kLq4WrGTBd4lTQaY(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.SplashScreen$Impl31: void $r8$lambda$_AQ1xSddL7-kLq4WrGTBd4lTQaY(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e($r2, $r3, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void $r8$lambda$_AQ1xSddL7-kLq4WrGTBd4lTQaY(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"this$0\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"$exitAnimationListener\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param2, \"splashScreenView\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e",
      "sourceStatement": "specialinvoke $param0.\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r3, \"theme\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void applyAppSystemUiTheme()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e($r3, $r5, $r1)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"theme\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"decor\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param2, \"tv\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003candroidx.core.splashscreen.SplashScreen$Impl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.window.SplashScreenView,android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"platformView\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.window.SplashScreenView,android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param1, \"ctx\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"ctx\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"activity\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl$_splashScreenView$2: void \u003cinit\u003e(androidx.core.splashscreen.SplashScreenViewProvider$ViewImpl)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke this.\u003ckotlin.jvm.internal.Lambda: void \u003cinit\u003e(int)\u003e(0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003ckotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ckotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void createSplashScreenView()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: void createSplashScreenView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void \u003cinit\u003e(android.window.SplashScreenView,android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void setPlatformView(android.window.SplashScreenView)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void setPlatformView(android.window.SplashScreenView)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void setPlatformView(android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"\u003cset-?\u003e\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreen$Impl31: void setOnExitAnimationListener$lambda-0(androidx.core.splashscreen.SplashScreen$Impl31,androidx.core.splashscreen.SplashScreen$OnExitAnimationListener,android.window.SplashScreenView)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "sourceStatement": "interfaceinvoke $param1.\u003candroidx.core.splashscreen.SplashScreen$OnExitAnimationListener: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: android.view.View getView()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $param0.\u003candroidx.core.splashscreen.SplashScreenViewProvider: android.view.View getView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: android.view.View getView()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.view.ViewGroup getSplashScreenView()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r2.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: android.view.ViewGroup getSplashScreenView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.view.ViewGroup getSplashScreenView()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getSplashScreenView()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getSplashScreenView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getSplashScreenView()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getPlatformView()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getPlatformView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: boolean access$000(org.apache.cordova.SplashScreenPlugin)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003corg.apache.cordova.SplashScreenPlugin: boolean access$000(org.apache.cordova.SplashScreenPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: int access$100(org.apache.cordova.SplashScreenPlugin)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003corg.apache.cordova.SplashScreenPlugin: int access$100(org.apache.cordova.SplashScreenPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "targetMethod": "\u003corg.apache.cordova.SplashScreenPlugin: boolean access$000(org.apache.cordova.SplashScreenPlugin)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003corg.apache.cordova.SplashScreenPlugin: boolean access$000(org.apache.cordova.SplashScreenPlugin)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1: void onSplashScreenExit(androidx.core.splashscreen.SplashScreenViewProvider)\u003e",
      "targetMethod": "\u003candroid.view.ViewPropertyAnimator: void start()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroid.view.ViewPropertyAnimator: void start()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003corg.apache.cordova.SplashScreenPlugin$1$1: void onAnimationEnd(android.animation.Animator)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void remove()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.core.splashscreen.SplashScreenViewProvider: void remove()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider: void remove()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: void remove()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getPlatformView()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.window.SplashScreenView getPlatformView()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroid.window.SplashScreenView: void remove()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroid.window.SplashScreenView: void remove()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroid.window.SplashScreenView: void remove()\u003e()",
      "kind": "GENERIC_FAKE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r3, \"activity.theme\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl: android.app.Activity getActivity()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: android.app.Activity getActivity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)\u003e($r5, \"activity.window.decorView\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.SplashScreenViewProvider$ViewImpl31: void remove()\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance$default(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue,int,java.lang.Object)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance$default(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue,int,java.lang.Object)\u003e($r3, $r5, null, 4, null)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance$default(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue,int,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.core.splashscreen.ThemeUtils$Api31: void applyThemesSystemBarAppearance(android.content.res.Resources$Theme,android.view.View,android.util.TypedValue)\u003e($param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0: void run()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r5, $l1)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0: void run()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$installAfterDelay$1(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$installAfterDelay$1(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$installAfterDelay$1(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1: void run()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$writeInBackground$2(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$writeInBackground$2(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallerInitializer: void lambda$writeInBackground$2(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller$2: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e($param0, $r1, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)\u003e($param0, $param1, $param2, false)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "sourceStatement": "$z2 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileInstaller: boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e($r10, $r7, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "sourceStatement": "$z2 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e($r6, $r4, $r10, $r7, $r8, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: void \u003cinit\u003e(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003candroidx.profileinstaller.DeviceProfileWriter: void \u003cinit\u003e(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File)\u003e($param0, $param5, $param6, $param4, \"dexopt/baseline.prof\", \"dexopt/baseline.profm\", $r7)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: void \u003cinit\u003e(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: void \u003cinit\u003e(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: byte[] desiredVersion()\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003candroidx.profileinstaller.DeviceProfileWriter: byte[] desiredVersion()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: boolean deviceAllowsProfileInstallerAotWrites()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r9.\u003candroidx.profileinstaller.DeviceProfileWriter: boolean deviceAllowsProfileInstallerAotWrites()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r9.\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: void assertDeviceAllowsProfileInstallerAotWritesCalled()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: void assertDeviceAllowsProfileInstallerAotWritesCalled()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream getProfileInputStream(android.content.res.AssetManager)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream getProfileInputStream(android.content.res.AssetManager)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream getProfileInputStream(android.content.res.AssetManager)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String)\u003e($param0, $r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream)\u003e",
      "sourceStatement": "$r4 \u003d specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $i0)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e($param0, $r2, $r3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt8(java.io.InputStream)\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt8(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt8(java.io.InputStream)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e",
      "sourceStatement": "$l0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e($param0, 1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "sourceStatement": "$l1 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e",
      "sourceStatement": "$l0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e($param0, 4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "sourceStatement": "$l2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] readCompressed(java.io.InputStream,int,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] readCompressed(java.io.InputStream,int,int)\u003e($param0, $i3, $i4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e($r4, $param2, $i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "sourceStatement": "$i3 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e",
      "sourceStatement": "$l0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)\u003e($param0, 2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "sourceStatement": "$l5 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "sourceStatement": "$l6 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e",
      "sourceStatement": "$l7 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: java.lang.String readString(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: java.lang.String readString(java.io.InputStream,int)\u003e($param0, $i3)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.Encoding: java.lang.String readString(java.io.InputStream,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DexProfileData: void \u003cinit\u003e(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003candroidx.profileinstaller.DexProfileData: void \u003cinit\u003e(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap)\u003e($param1, $r6, $l6, 0L, $i4, $i3, $i8, $r2, $r3)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DexProfileData: void \u003cinit\u003e(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e($param0, $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "sourceStatement": "$i2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "sourceStatement": "$i2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int[] readClasses(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: int[] readClasses(java.io.InputStream,int)\u003e($param0, $i1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int[] readClasses(java.io.InputStream,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e($param0, $r4)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: int bitsToBytes(int)\u003e",
      "sourceStatement": "$i0 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: int bitsToBytes(int)\u003e($i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)\u003e($param0, $i0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e",
      "sourceStatement": "$i1 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e($r3, $i0, $i1)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)\u003e",
      "sourceStatement": "$i3 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)\u003e(2, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)\u003e(4, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)\u003e",
      "sourceStatement": "$param1 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)\u003e(4, $param1, $param2)",
      "kind": "GENERIC_FAKE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: boolean requiresMetadata()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.profileinstaller.DeviceProfileWriter: boolean requiresMetadata()\u003e()",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e",
      "sourceStatement": "$r5 \u003d specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e($r4, $r1)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d specialinvoke this.\u003candroidx.profileinstaller.DeviceProfileWriter: java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String)\u003e($r3, $r4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])\u003e($r5, $r6)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[])\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[])\u003e($r5, $r6, $param1, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.Encoding: java.lang.RuntimeException error(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.profileinstaller.Encoding: java.lang.RuntimeException error(java.lang.String)\u003e(\"Requires new Baseline Profile Metadata. Please rebuild the APK with Android Gradle Plugin 7.2 Canary 7 or higher\")",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileInstaller$1: void onResultReceived(int,java.lang.Object)\u003e",
      "sourceStatement": "interfaceinvoke $r10.\u003candroidx.profileinstaller.ProfileInstaller$DiagnosticsCallback: void onResultReceived(int,java.lang.Object)\u003e(8, $r9)",
      "kind": "INTERFACE",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded()\u003e",
      "sourceStatement": "$r9 \u003d virtualinvoke $r9.\u003candroidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.DeviceProfileWriter: boolean write()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r9.\u003candroidx.profileinstaller.DeviceProfileWriter: boolean write()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)\u003e($param0, $z1)",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()\u003e()",
      "kind": "CLINIT",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: void \u003cinit\u003e(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void \u003cinit\u003e(androidx.concurrent.futures.AbstractResolvableFuture$1)\u003e(null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r13.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier: long getPackageLastUpdateTime(android.content.Context)\u003e",
      "sourceStatement": "$l5 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileVerifier: long getPackageLastUpdateTime(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: long getPackageLastUpdateTime(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)\u003e($r2, $param0)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)\u003e",
      "targetMethod": "\u003candroid.content.pm.PackageManager$PackageInfoFlags: android.content.pm.PackageManager$PackageInfoFlags of(long)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroid.content.pm.PackageManager$PackageInfoFlags: android.content.pm.PackageManager$PackageInfoFlags of(long)\u003e(0L)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier$Cache: void \u003cinit\u003e(int,int,long,long)\u003e",
      "sourceStatement": "specialinvoke $r13.\u003candroidx.profileinstaller.ProfileVerifier$Cache: void \u003cinit\u003e(int,int,long,long)\u003e(1, $i1, $l5, $l4)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier$Cache: void \u003cinit\u003e(int,int,long,long)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier$Cache: void writeOnFile(java.io.File)\u003e",
      "sourceStatement": "virtualinvoke $r13.\u003candroidx.profileinstaller.ProfileVerifier$Cache: void writeOnFile(java.io.File)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)\u003e",
      "targetMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean)\u003e($i1, $z1, $z2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier$CompilationStatus: void \u003cinit\u003e(int,boolean,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)\u003e($r0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)\u003e(this, null, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e($r3, $param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void releaseWaiters()\u003e",
      "sourceStatement": "specialinvoke $param0.\u003candroidx.concurrent.futures.AbstractResolvableFuture: void releaseWaiters()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Waiter: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Waiter: void \u003cinit\u003e(boolean)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.concurrent.futures.AbstractResolvableFuture$Waiter: void \u003cinit\u003e(boolean)\u003e(false)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Waiter: void \u003cinit\u003e(boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void releaseWaiters()\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)\u003e(this, $r2, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e($r3, $param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void afterDone()\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.concurrent.futures.AbstractResolvableFuture: void afterDone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e",
      "sourceStatement": "$r3 \u003d specialinvoke $param0.\u003candroidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Listener: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Listener: void \u003cinit\u003e(java.lang.Runnable,java.util.concurrent.Executor)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.concurrent.futures.AbstractResolvableFuture$Listener: void \u003cinit\u003e(java.lang.Runnable,java.util.concurrent.Executor)\u003e(null, null)",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$Listener: void \u003cinit\u003e(java.lang.Runnable,java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r4.\u003candroidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e(this, $r3, $r1)",
      "kind": "VIRTUAL",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)\u003e",
      "targetMethod": "\u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)\u003e($r3, $param0, $param1, $param2)",
      "kind": "STATIC",
      "component": [
        "br.com.winker.wl.gescon.MainActivity"
      ]
    }
  ]
}