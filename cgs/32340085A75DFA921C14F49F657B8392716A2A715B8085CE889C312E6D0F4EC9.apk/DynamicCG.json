{
  "edges": [
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.MobileAdsInitProvider: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.ads.internal.client.zzek: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.MobileAdsInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r0.\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r4.\u003ccom.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)\u003e($r5, 128)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbnp: com.google.android.gms.internal.ads.zzbnp zza()\u003e",
      "sourceStatement": "$r9 \u003d staticinvoke \u003ccom.google.android.gms.internal.ads.zzbnp: com.google.android.gms.internal.ads.zzbnp zza()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzbnp: com.google.android.gms.internal.ads.zzbnp zza()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbnp: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.internal.ads.zzbnp: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzbnp: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e($r12)",
      "kind": "CLINIT",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfpu: com.google.android.gms.internal.ads.zzfpu zzb(int)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003ccom.google.android.gms.internal.ads.zzfpu: com.google.android.gms.internal.ads.zzfpu zzb(int)\u003e(4000)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfpu: com.google.android.gms.internal.ads.zzfpu zzb(int)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfpq: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.internal.ads.zzfpq: void \u003cinit\u003e(int)\u003e(4000)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfpq: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfpu: com.google.android.gms.internal.ads.zzfpu zzb(int)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfpu: void \u003cinit\u003e(com.google.android.gms.internal.ads.zzfpt)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.google.android.gms.internal.ads.zzfpu: void \u003cinit\u003e(com.google.android.gms.internal.ads.zzfpt)\u003e($r0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfor: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfor: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003ccom.google.android.gms.internal.ads.zzfor: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfoq: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.internal.ads.zzfoq: void \u003cinit\u003e(java.lang.String)\u003e(\"CharMatcher.none()\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfoq: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfoo: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.internal.ads.zzfoo: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfoo: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzfos: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.google.android.gms.internal.ads.zzfos: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfos: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzfpu: void \u003cinit\u003e(com.google.android.gms.internal.ads.zzfpt)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e($r12)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: boolean zzm(int)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.google.android.gms.internal.ads.zzbzr: boolean zzm(int)\u003e(3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e(\"com.google.android.gms.ads.flag.OPTIMIZE_INITIALIZATION is enabled\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.google.android.gms.ads.internal.client.zzek: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)\u003e",
      "targetMethod": "\u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.google.android.gms.internal.ads.zzbzr: void zze(java.lang.String)\u003e(\"com.google.android.gms.ads.flag.OPTIMIZE_AD_LOADING is enabled\")",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($r1)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r0.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.InitializationProvider: boolean onCreate()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e(\"Startup\")",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e(\"Startup\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.tracing.Trace: void beginSection(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e($r8)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WrkMgrInitializer\")",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WrkMgrInitializer\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e($r10, $r4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: boolean isEnabled()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.tracing.Trace: boolean isEnabled()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "GENERIC_FAKE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Class getClass()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003cjava.lang.Object: java.lang.Class getClass()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.EmptyActivityLifecycleCallbacks: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void \u003cinit\u003e(androidx.lifecycle.LifecycleOwner)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void \u003cinit\u003e(androidx.lifecycle.LifecycleOwner,boolean)\u003e($param0, true)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"DESTROYED\", 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"INITIALIZED\", 1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"CREATED\", 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"STARTED\", 3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$State: void \u003cinit\u003e(java.lang.String,int)\u003e(\"RESUMED\", 4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$1: void \u003cinit\u003e(androidx.lifecycle.ProcessLifecycleOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$2: void \u003cinit\u003e(androidx.lifecycle.ProcessLifecycleOwner)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_CREATE\", 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_START\", 1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_RESUME\", 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_PAUSE\", 3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_STOP\", 4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_DESTROY\", 5)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.lifecycle.Lifecycle$Event: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ON_ANY\", 6)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e(\"handleLifecycleEvent\")",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e()",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor$1: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor$2: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.TaskExecutor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r2.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor$1: void \u003cinit\u003e(androidx.arch.core.executor.DefaultTaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r3.\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.arch.core.executor.TaskExecutor: boolean isMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $param0.\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$1: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e",
      "sourceStatement": "$r15 \u003d staticinvoke \u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void sync()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: boolean isSynced()\u003e",
      "targetMethod": "\u003candroidx.arch.core.internal.SafeIterableMap: int size()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $r1.\u003candroidx.arch.core.internal.FastSafeIterableMap: int size()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleOwner get()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleOwner get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "targetMethod": "\u003candroidx.tracing.TraceApi18Impl: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.TraceApi18Impl: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: java.util.List dependencies()\u003e",
      "targetMethod": "\u003ckotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003ckotlin.collections.CollectionsKt: java.util.List emptyList()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.collections.EmptyList: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void create(android.content.Context)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void create(android.content.Context)\u003e",
      "targetMethod": "\u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ckotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)\u003e($param0, \"context\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void create(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.unity3d.services.core.properties.ClientProperties: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.services.core.properties.ClientProperties: void setApplicationContext(android.content.Context)\u003e($param0)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.services.core.configuration.AdsSdkInitializer: void create(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.unity3d.services.core.properties.ClientProperties: void setApplicationContext(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.services.core.properties.ClientProperties: void setApplicationContext(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ckotlin.Unit: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.work.WorkManagerInitializer: java.util.List dependencies()\u003e",
      "sourceStatement": "$r10 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.util.List dependencies()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)\u003e",
      "targetMethod": "\u003candroidx.work.WorkManagerInitializer: java.lang.Object create(android.content.Context)\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r9.\u003candroidx.startup.Initializer: java.lang.Object create(android.content.Context)\u003e($r13)",
      "kind": "GENERIC_FAKE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: java.lang.Object create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: void \u003cinit\u003e(int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.work.Logger$LogcatLogger: void \u003cinit\u003e(int)\u003e(3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Logger: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r1, \"Initializing WorkManager with default configuration.\", $r4)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration$Builder: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration$Builder: androidx.work.Configuration build()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.work.Configuration$Builder: androidx.work.Configuration build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)\u003e(false)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: java.util.concurrent.ThreadFactory createDefaultThreadFactory(boolean)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.work.Configuration: java.util.concurrent.ThreadFactory createDefaultThreadFactory(boolean)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration$1: void \u003cinit\u003e(androidx.work.Configuration,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)\u003e(true)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003candroidx.work.WorkerFactory: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.WorkerFactory: androidx.work.WorkerFactory getDefaultWorkerFactory()\u003e()",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkerFactory: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WorkerFactory\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003candroidx.work.WorkerFactory: androidx.work.WorkerFactory getDefaultWorkerFactory()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.WorkerFactory: androidx.work.WorkerFactory getDefaultWorkerFactory()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkerFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.Configuration: void \u003cinit\u003e(androidx.work.Configuration$Builder)\u003e",
      "targetMethod": "\u003candroidx.work.InputMergerFactory: androidx.work.InputMergerFactory getDefaultInputMergerFactory()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.work.InputMergerFactory: androidx.work.InputMergerFactory getDefaultInputMergerFactory()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.InputMergerFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.DefaultRunnableScheduler: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.DefaultRunnableScheduler: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.os.HandlerCompat: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)\u003e($r1)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.DefaultRunnableScheduler: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)\u003e",
      "targetMethod": "\u003candroidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)\u003e($param0, $r6)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.WorkManagerImpl: void initialize(android.content.Context,androidx.work.Configuration)\u003e($param0, $param1)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WorkManagerImpl\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r1.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: void initialize(android.content.Context,androidx.work.Configuration)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.WorkManagerImpl: void initialize(android.content.Context,androidx.work.Configuration)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void initialize(android.content.Context,androidx.work.Configuration)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: java.util.concurrent.Executor getTaskExecutor()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param1.\u003candroidx.work.Configuration: java.util.concurrent.Executor getTaskExecutor()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: void \u003cinit\u003e(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: androidx.work.impl.utils.SerialExecutor getBackgroundExecutor()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param2.\u003candroidx.work.impl.utils.taskexecutor.TaskExecutor: androidx.work.impl.utils.SerialExecutor getBackgroundExecutor()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e($r4, $r5, $param3)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e($r4, $r5, $param3)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e($r4, $r5, $param3)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabasePathHelper: java.lang.String getWorkDatabaseName()\u003e()",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WrkDbPathHelper\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: java.lang.String getWorkDatabaseName()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabasePathHelper: java.lang.String getWorkDatabaseName()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.Room: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)\u003e($param0, class \"Landroidx/work/impl/WorkDatabase;\", $r3)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)\u003e($param0, class \"Landroidx/work/impl/WorkDatabase;\", $r3)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Builder: void \u003cinit\u003e(android.content.Context,java.lang.Class,java.lang.String)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e(\"AUTOMATIC\", 0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e(\"TRUNCATE\", 1)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.room.RoomDatabase$JournalMode: void \u003cinit\u003e(java.lang.String,int)\u003e(\"WRITE_AHEAD_LOGGING\", 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$MigrationContainer: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)\u003e($r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.room.RoomDatabase$Callback generateCleanupCallback()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: androidx.room.RoomDatabase$Callback generateCleanupCallback()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Callback: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r0.\u003candroidx.work.impl.WorkDatabaseMigrations$1: void \u003cinit\u003e(int,int)\u003e(1, 2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003candroidx.work.impl.WorkDatabaseMigrations$2: void \u003cinit\u003e(int,int)\u003e(3, 4)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.work.impl.WorkDatabaseMigrations$3: void \u003cinit\u003e(int,int)\u003e(4, 5)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003candroidx.work.impl.WorkDatabaseMigrations$4: void \u003cinit\u003e(int,int)\u003e(6, 7)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003candroidx.work.impl.WorkDatabaseMigrations$5: void \u003cinit\u003e(int,int)\u003e(7, 8)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r5.\u003candroidx.work.impl.WorkDatabaseMigrations$6: void \u003cinit\u003e(int,int)\u003e(8, 9)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r6.\u003candroidx.work.impl.WorkDatabaseMigrations$7: void \u003cinit\u003e(int,int)\u003e(11, 12)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003candroidx.work.impl.WorkDatabaseMigrations$RescheduleMigration: void \u003cinit\u003e(android.content.Context,int,int)\u003e($param0, 2, 3)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003candroidx.work.impl.WorkDatabaseMigrations$RescheduleMigration: void \u003cinit\u003e(android.content.Context,int,int)\u003e($param0, 5, 6)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabaseMigrations$WorkMigration9To10: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e(9, 10)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.migration.Migration: void \u003cinit\u003e(int,int)\u003e",
      "sourceStatement": "specialinvoke $r9.\u003candroidx.work.impl.WorkDatabaseMigrations$RescheduleMigration: void \u003cinit\u003e(android.content.Context,int,int)\u003e($param0, 10, 11)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])\u003e($r7)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()\u003e",
      "sourceStatement": "$r11 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve(android.content.Context)\u003e",
      "sourceStatement": "$r20 \u003d virtualinvoke $r20.\u003candroidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve(android.content.Context)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.DatabaseConfiguration: void \u003cinit\u003e(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()\u003e",
      "targetMethod": "\u003candroidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003candroidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)\u003e($r8, \"_Impl\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.room.InvalidationTracker createInvalidationTracker()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.room.RoomDatabase: androidx.room.InvalidationTracker createInvalidationTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void \u003cinit\u003e(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void \u003cinit\u003e(androidx.room.InvalidationTracker)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$ObservedTableTracker: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationLiveDataContainer: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)\u003e",
      "sourceStatement": "virtualinvoke $r22.\u003candroidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)\u003e($r19)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void \u003cinit\u003e(androidx.work.impl.WorkDatabase_Impl,int)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003candroidx.work.impl.WorkDatabase_Impl$1: void \u003cinit\u003e(androidx.work.impl.WorkDatabase_Impl,int)\u003e(this, 12)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper$Delegate: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void \u003cinit\u003e(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003candroidx.room.RoomOpenHelper: void \u003cinit\u003e(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)\u003e($param0, $r3, \"c103703e120ae8cc73c9248622f3cd1e\", \"49f946663a8deb7054212b8adda248c6\")",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r5.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r5.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r5.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: void \u003cinit\u003e(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "sourceStatement": "$r9 \u003d interfaceinvoke $r8.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Factory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e($r7)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r5.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)\u003e($r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder noBackupDirectory(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder noBackupDirectory(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()\u003e",
      "sourceStatement": "$param0 \u003d virtualinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke $r7.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: void \u003cinit\u003e(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: void \u003cinit\u003e(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r4.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)\u003e($z0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.TransactionExecutor: void \u003cinit\u003e(java.util.concurrent.Executor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManager: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: int getMinimumLoggingLevel()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param1.\u003candroidx.work.Configuration: int getMinimumLoggingLevel()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.Logger: void setLogger(androidx.work.Logger)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.Logger: void setLogger(androidx.work.Logger)\u003e($r5)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($r7, $param1, $param2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.Schedulers: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e($param0, this)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"Schedulers\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e($param0, this)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"SystemJobScheduler\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobInfoConverter: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"SystemJobInfoConverter\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobInfoConverter: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: void \u003cinit\u003e(android.content.Context,androidx.work.impl.WorkManagerImpl,android.app.job.JobScheduler,androidx.work.impl.background.systemjob.SystemJobInfoConverter)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.PackageManagerHelper: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)\u003e($param0, class \"Landroidx/work/impl/background/systemjob/SystemJobService;\", true)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PackageManagerHelper: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"PackageManagerHelper\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)\u003e($param0, class \"Landroidx/work/impl/background/systemjob/SystemJobService;\", true)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r6 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r5, $r8, $r9)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r4, \"Created SystemJobScheduler and enabled SystemJobService\", $r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.GreedyScheduler: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"GreedyScheduler\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.GreedyScheduler: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.WorkConstraintsTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"WorkConstraintsTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.WorkConstraintsTracker: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.WorkConstraintsCallback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.BatteryChargingController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.ConstraintTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"ConstraintTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"BrdcstRcvrCnstrntTrckr\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.BatteryChargingTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"BatteryChrgTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.ConstraintTracker: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.ConstraintTracker: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r3.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.BatteryNotLowTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"BatteryNotLowTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.NetworkStateTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"NetworkStateTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.NetworkStateTracker: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.NetworkStateTracker: boolean isNetworkCallbackSupported()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.NetworkStateTracker: boolean isNetworkCallbackSupported()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.trackers.StorageNotLowTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"StorageNotLowTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.BatteryChargingController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.BatteryChargingTracker getBatteryChargingTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.BatteryChargingTracker getBatteryChargingTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.ConstraintController: void \u003cinit\u003e(androidx.work.impl.constraints.trackers.ConstraintTracker)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.BatteryNotLowController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.BatteryNotLowController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.BatteryNotLowTracker getBatteryNotLowTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.BatteryNotLowTracker getBatteryNotLowTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.StorageNotLowController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.StorageNotLowController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.StorageNotLowTracker getStorageNotLowTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.StorageNotLowTracker getStorageNotLowTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkConnectedController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkConnectedController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkUnmeteredController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkUnmeteredController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkNotRoamingController: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"NetworkNotRoamingCtrlr\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkNotRoamingController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkNotRoamingController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkMeteredController: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"NetworkMeteredCtrlr\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkMeteredController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e($param0, $param1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.controllers.NetworkMeteredController: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke $r3.\u003candroidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.NetworkStateTracker getNetworkStateTracker()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.constraints.WorkConstraintsTracker: void \u003cinit\u003e(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.WorkConstraintsCallback)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r12.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.DelayedWorkTracker: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"DelayedWorkTracker\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.GreedyScheduler: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: androidx.work.RunnableScheduler getRunnableScheduler()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param1.\u003candroidx.work.Configuration: androidx.work.RunnableScheduler getRunnableScheduler()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.DelayedWorkTracker: void \u003cinit\u003e(androidx.work.impl.background.greedy.GreedyScheduler,androidx.work.RunnableScheduler)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.greedy.GreedyScheduler: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r9.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Processor: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"Processor\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Processor: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Processor: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke $r9.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void \u003cinit\u003e(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: void internalInit(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.work.impl.WorkManagerImpl: void internalInit(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor)\u003e($param0, $param1, $param2, $param3, $r8, $r6)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PreferenceUtils: void \u003cinit\u003e(androidx.work.impl.WorkDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)\u003e(\"ForceStopRunnable\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void \u003cinit\u003e(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void internalInit(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $param2.\u003candroidx.work.impl.utils.taskexecutor.TaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)\u003e($r9)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor$Task: void \u003cinit\u003e(androidx.work.impl.utils.SerialExecutor,java.lang.Runnable)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e",
      "targetMethod": "\u003candroidx.work.Configuration$1: java.lang.Thread newThread(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.SerialExecutor$Task: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r5.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r2)",
      "kind": "EXECUTOR",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)\u003e($param0)",
      "kind": "EXECUTOR",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r7 \u003d staticinvoke \u003candroidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance(android.content.Context)\u003e",
      "sourceStatement": "$r0 \u003d staticinvoke \u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.startup.AppInitializer: void discoverAndInitialize()\u003e",
      "targetMethod": "\u003candroidx.tracing.Trace: void endSection()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.tracing.Trace: void endSection()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)\u003e($param0, $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayerActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: java.lang.String updateUnityCommandLineArguments(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayerActivity: java.lang.String updateUnityCommandLineArguments(java.lang.String)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: android.content.Intent getIntent()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayerActivity: android.content.Intent getIntent()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.l: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.l: boolean a()\u003e",
      "sourceStatement": "virtualinvoke $r0.\u003ccom.unity3d.player.l: boolean a()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.m: void \u003cinit\u003e()\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$e: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "sourceStatement": "specialinvoke $r23.\u003ccom.unity3d.player.UnityPlayer$e: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,byte)\u003e(this, 0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: java.lang.String getDefaultProcessName()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.work.Configuration: java.lang.String getDefaultProcessName()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r4 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean multiProcessChecks()\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r3, \"The default process name was not specified.\", $r5)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: void migrateDatabase(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.WorkDatabasePathHelper: void migrateDatabase(android.content.Context)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: void migrateDatabase(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r1, \"Performing cleanup operations.\", $r6)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e($r3, $r4)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler)\u003e($param0, $r4)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $param1.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r6.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r7.\u003candroidx.work.impl.model.SystemIdInfoDao: java.util.List getWorkSpecIds()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT DISTINCT work_spec_id FROM SystemIdInfo\", 0)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT DISTINCT work_spec_id FROM SystemIdInfo\", 0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: void \u003cinit\u003e(int)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void init(java.lang.String,int)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.room.RoomSQLiteQuery: void init(java.lang.String,int)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$1: void \u003cinit\u003e(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteDatabase[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate()\u003e",
      "targetMethod": "\u003candroid.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void setWriteAheadLoggingEnabled(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase)\u003e($r1, $param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void \u003cinit\u003e(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase[],android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: boolean isDelegate(android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: boolean isDelegate(android.database.sqlite.SQLiteDatabase)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: boolean hasEmptySchema(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.room.RoomOpenHelper: boolean hasEmptySchema(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: boolean hasEmptySchema(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)\u003e(\"SELECT count(*) FROM sqlite_master WHERE name !\u003d \\\u0027android_metadata\\\u0027\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String,java.lang.Object[])\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String,java.lang.Object[])\u003e($param0, null)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String,java.lang.Object[])\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase$1: void \u003cinit\u003e(androidx.sqlite.db.framework.FrameworkSQLiteDatabase,androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: java.lang.String getSql()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteQuery: java.lang.String getSql()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteProgram: void \u003cinit\u003e(android.database.sqlite.SQLiteProgram)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase$1: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.sqlite.db.SupportSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[])\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.sqlite.db.SimpleSQLiteQuery: void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[])\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomOpenHelper$Delegate: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `Dependency` (`work_spec_id` TEXT NOT NULL, `prerequisite_id` TEXT NOT NULL, PRIMARY KEY(`work_spec_id`, `prerequisite_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`prerequisite_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_Dependency_work_spec_id` ON `Dependency` (`work_spec_id`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_Dependency_prerequisite_id` ON `Dependency` (`prerequisite_id`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `WorkSpec` (`id` TEXT NOT NULL, `state` INTEGER NOT NULL, `worker_class_name` TEXT NOT NULL, `input_merger_class_name` TEXT, `input` BLOB NOT NULL, `output` BLOB NOT NULL, `initial_delay` INTEGER NOT NULL, `interval_duration` INTEGER NOT NULL, `flex_duration` INTEGER NOT NULL, `run_attempt_count` INTEGER NOT NULL, `backoff_policy` INTEGER NOT NULL, `backoff_delay_duration` INTEGER NOT NULL, `period_start_time` INTEGER NOT NULL, `minimum_retention_duration` INTEGER NOT NULL, `schedule_requested_at` INTEGER NOT NULL, `run_in_foreground` INTEGER NOT NULL, `out_of_quota_policy` INTEGER NOT NULL, `required_network_type` INTEGER, `requires_charging` INTEGER NOT NULL, `requires_device_idle` INTEGER NOT NULL, `requires_battery_not_low` INTEGER NOT NULL, `requires_storage_not_low` INTEGER NOT NULL, `trigger_content_update_delay` INTEGER NOT NULL, `trigger_max_content_delay` INTEGER NOT NULL, `content_uri_triggers` BLOB, PRIMARY KEY(`id`))\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_WorkSpec_schedule_requested_at` ON `WorkSpec` (`schedule_requested_at`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_WorkSpec_period_start_time` ON `WorkSpec` (`period_start_time`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `WorkTag` (`tag` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`tag`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_WorkTag_work_spec_id` ON `WorkTag` (`work_spec_id`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `SystemIdInfo` (`work_spec_id` TEXT NOT NULL, `system_id` INTEGER NOT NULL, PRIMARY KEY(`work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `WorkName` (`name` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`name`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE INDEX IF NOT EXISTS `index_WorkName_work_spec_id` ON `WorkName` (`work_spec_id`)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `WorkProgress` (`work_spec_id` TEXT NOT NULL, `progress` BLOB NOT NULL, PRIMARY KEY(`work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS `Preference` (`key` TEXT NOT NULL, `long_value` INTEGER, PRIMARY KEY(`key`))\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \\\u0027c103703e120ae8cc73c9248622f3cd1e\\\u0027)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.RoomOpenHelper: void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomMasterTable: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.room.RoomMasterTable: java.lang.String createInsertQuery(java.lang.String)\u003e($r2)",
      "kind": "CLINIT",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomMasterTable: java.lang.String createInsertQuery(java.lang.String)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.room.RoomMasterTable: java.lang.String createInsertQuery(java.lang.String)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomOpenHelper$Delegate: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$300(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$300(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$400(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$400(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$500(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$500(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomOpenHelper: boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.room.RoomOpenHelper: boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: boolean hasRoomMasterTable(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)\u003e(\"SELECT 1 FROM sqlite_master WHERE type \u003d \\\u0027table\\\u0027 AND name\u003d\\\u0027room_master_table\\\u0027\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r3.\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String)\u003e(\"SELECT identity_hash FROM room_master_table WHERE id \u003d 42 LIMIT 1\")",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e($r3)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomOpenHelper$Delegate: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r2, $param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"PRAGMA foreign_keys \u003d ON\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r2, $param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $param0.\u003candroidx.work.impl.WorkDatabase_Impl: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"PRAGMA temp_store \u003d MEMORY;\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"PRAGMA recursive_triggers\u003d\\\u0027ON\\\u0027;\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e(\"CREATE TEMP TABLE room_table_modification_log(table_id INTEGER PRIMARY KEY, invalidated INTEGER NOT NULL DEFAULT 0)\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: boolean inTransaction()\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: boolean inTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker$ObservedTableTracker: int[] getTablesToSync()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.room.InvalidationTracker$ObservedTableTracker: int[] getTablesToSync()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void internalInit(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e(\"UPDATE room_table_modification_log SET invalidated \u003d 0 WHERE invalidated \u003d 1 \")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$800(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$800(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$900(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$900(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase_Impl: java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl)\u003e($r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($param0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void beginTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase: java.lang.String getPruneSQL()\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: java.lang.String getPruneSQL()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase: java.lang.String getPruneSQL()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase: long getPruneDate()\u003e",
      "sourceStatement": "$l0 \u003d staticinvoke \u003candroidx.work.impl.WorkDatabase: long getPruneDate()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void execSQL(java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)\u003e($r2)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void endTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableSupportDatabase()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke this.\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper: androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: boolean inTransaction()\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r2.\u003candroidx.sqlite.db.SupportSQLiteDatabase: boolean inTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "targetMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e($r2, $r1, false, null)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param0.\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e($param1, $param3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: boolean isMainThread()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.room.RoomDatabase: boolean isMainThread()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r4.\u003candroidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: java.lang.String getSql()\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteQuery: java.lang.String getSql()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase$1: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e",
      "sourceStatement": "interfaceinvoke $r6.\u003candroidx.sqlite.db.SupportSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.SystemIdInfoDao_Impl: java.util.List getWorkSpecIds()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void prunePoolLocked()\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.room.RoomSQLiteQuery: void prunePoolLocked()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r4.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r5.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkProgressDao workProgressDao()\u003e",
      "sourceStatement": "$r7 \u003d virtualinvoke $r5.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkProgressDao workProgressDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.work.impl.WorkDatabase: void beginTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.InvalidationTracker: void syncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void beginTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "sourceStatement": "$r8 \u003d interfaceinvoke $r6.\u003candroidx.work.impl.model.WorkSpecDao: java.util.List getRunningWork()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state\u003d1\", 0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void init(java.lang.String,int)\u003e",
      "sourceStatement": "virtualinvoke $r6.\u003candroidx.room.RoomSQLiteQuery: void init(java.lang.String,int)\u003e($param0, $param1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e($r2, $r1, false, null)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"required_network_type\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_charging\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_device_idle\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_battery_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i4 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_storage_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i7 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_content_update_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i8 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_max_content_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i9 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"content_uri_triggers\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i10 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"id\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i10 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"state\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"worker_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input_merger_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i14 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"output\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"initial_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"interval_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"flex_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i17 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_attempt_count\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i18 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i18 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_delay_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i18 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"period_start_time\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i21 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"minimum_retention_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i21 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"schedule_requested_at\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i23 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_in_foreground\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i23 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"out_of_quota_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRunningWork()\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "sourceStatement": "interfaceinvoke $r7.\u003candroidx.work.impl.model.WorkProgressDao: void deleteAll()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke $r3.\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: void assertNotMainThread()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.SharedSQLiteStatement: void assertNotMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: void assertNotMainThread()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)\u003e($z0)",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()\u003e",
      "sourceStatement": "$r1 \u003d specialinvoke this.\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl$3: java.lang.String createQuery()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.room.SharedSQLiteStatement: java.lang.String createQuery()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r1.\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.RoomDatabase: void assertNotMainThread()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke this.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)\u003e($param0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteStatement: int executeUpdateDelete()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r1 \u003d interfaceinvoke $r2.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void endTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r2 \u003d interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void endTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $r2.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkProgressDao_Impl: void deleteAll()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.work.impl.WorkDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean cleanUp()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003candroidx.work.impl.WorkDatabase: void endTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e",
      "targetMethod": "\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$c: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "sourceStatement": "specialinvoke $r24.\u003ccom.unity3d.player.UnityPlayer$c: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,byte)\u003e(this, 0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$a: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void EarlyEnableFullScreenIfEnabled()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void EarlyEnableFullScreenIfEnabled()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void EarlyEnableFullScreenIfEnabled()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean getLaunchFullscreen()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: boolean getLaunchFullscreen()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean getLaunchFullscreen()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003candroid.view.View: android.content.res.Resources getResources()\u003e",
      "sourceStatement": "$r8 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: android.content.res.Resources getResources()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: int getNaturalOrientation(int)\u003e",
      "sourceStatement": "$i0 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: int getNaturalOrientation(int)\u003e($i0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean getSplashEnabled()\u003e",
      "sourceStatement": "$z0 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: boolean getSplashEnabled()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean getSplashEnabled()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.j$a: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.unity3d.player.j$a: int[] a()\u003e()",
      "kind": "CLINIT",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.j$a: int[] a()\u003e",
      "sourceStatement": "$r12 \u003d staticinvoke \u003ccom.unity3d.player.j$a: int[] a()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.j$a: int[] a()\u003e",
      "targetMethod": "\u003cjava.lang.Object: java.lang.Object clone()\u003e",
      "sourceStatement": "$r0 \u003d virtualinvoke $r1.\u003cjava.lang.Object: java.lang.Object clone()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: int getSplashMode()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: int getSplashMode()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: int getSplashMode()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e",
      "sourceStatement": "$r2 \u003d specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: android.content.pm.ApplicationInfo getApplicationInfo()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.j: void \u003cinit\u003e(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroid.view.View: android.content.res.Resources getResources()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003ccom.unity3d.player.j: android.content.res.Resources getResources()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003candroid.view.ViewGroup: void addView(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: void addView(android.view.View)\u003e($r26)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.h: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void preloadJavaPlugins()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.player.UnityPlayer: void preloadJavaPlugins()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String getUnityNativeLibraryPath(android.content.Context)\u003e",
      "sourceStatement": "$r13 \u003d staticinvoke \u003ccom.unity3d.player.UnityPlayer: java.lang.String getUnityNativeLibraryPath(android.content.Context)\u003e($r11)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String loadNative(java.lang.String)\u003e",
      "sourceStatement": "$r13 \u003d staticinvoke \u003ccom.unity3d.player.UnityPlayer: java.lang.String loadNative(java.lang.String)\u003e($r13)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String loadNative(java.lang.String)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String logLoadLibMainError(java.lang.String,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003ccom.unity3d.player.UnityPlayer: java.lang.String logLoadLibMainError(java.lang.String,java.lang.String)\u003e($r3, $param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String logLoadLibMainError(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.f: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.player.f: void Log(int,java.lang.String)\u003e(6, $param0)",
      "kind": "CLINIT",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: java.lang.String logLoadLibMainError(java.lang.String,java.lang.String)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.f: void Log(int,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.player.f: void Log(int,java.lang.String)\u003e(6, $param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean c()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.m: boolean c()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void \u003cinit\u003e(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.f: void Log(int,java.lang.String)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.player.f: void Log(int,java.lang.String)\u003e(6, \"Your hardware does not support this application.\")",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$1: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onCreate(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void setContentView(android.view.View)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayerActivity: void setContentView(android.view.View)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r3)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onStart()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: void \u003cclinit\u003e()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e(this)",
      "kind": "CLINIT",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onStart()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean isInMultiWindowMode(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean isInMultiWindowMode(android.app.Activity)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onStart()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onStart()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityStarted()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()\u003e()",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean shouldRescheduleWorkers()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke this.\u003candroidx.work.impl.utils.ForceStopRunnable: boolean shouldRescheduleWorkers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean shouldRescheduleWorkers()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.utils.PreferenceUtils getPreferenceUtils()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.utils.PreferenceUtils getPreferenceUtils()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean shouldRescheduleWorkers()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.PreferenceUtils: boolean getNeedsReschedule()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.work.impl.utils.PreferenceUtils: boolean getNeedsReschedule()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PreferenceUtils: boolean getNeedsReschedule()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.PreferenceDao preferenceDao()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke $r1.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.PreferenceDao preferenceDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: void \u003cinit\u003e(androidx.room.RoomDatabase)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.PreferenceUtils: boolean getNeedsReschedule()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "sourceStatement": "$r3 \u003d interfaceinvoke $r2.\u003candroidx.work.impl.model.PreferenceDao: java.lang.Long getLongValue(java.lang.String)\u003e(\"reschedule_needed\")",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT long_value FROM Preference where `key`\u003d?\", 1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)\u003e(1, $param0)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e($r3, $r2, false, null)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteProgram: void bindString(int,java.lang.String)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteProgram: void bindString(int,java.lang.String)\u003e($i0, $r6)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomSQLiteQuery: void release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean isForceStopped()\u003e",
      "sourceStatement": "$z1 \u003d virtualinvoke this.\u003candroidx.work.impl.utils.ForceStopRunnable: boolean isForceStopped()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean isForceStopped()\u003e",
      "targetMethod": "\u003candroidx.core.os.BuildCompat: boolean isAtLeastS()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003candroidx.core.os.BuildCompat: boolean isAtLeastS()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: boolean isForceStopped()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: android.app.PendingIntent getPendingIntent(android.content.Context,int)\u003e",
      "sourceStatement": "$r2 \u003d staticinvoke \u003candroidx.work.impl.utils.ForceStopRunnable: android.app.PendingIntent getPendingIntent(android.content.Context,int)\u003e($r1, $i0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: android.app.PendingIntent getPendingIntent(android.content.Context,int)\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: android.content.Intent getIntent(android.content.Context)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.work.impl.utils.ForceStopRunnable: android.content.Intent getIntent(android.content.Context)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.Logger: androidx.work.Logger get()\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.work.Logger: androidx.work.Logger get()\u003e()",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])\u003e($r2, \"Application was force-stopped, rescheduling.\", $r3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void forceStopRunnable()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "sourceStatement": "virtualinvoke $r4.\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: android.content.Context getApplicationContext()\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: android.content.Context getApplicationContext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: void cancelAll(android.content.Context)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.background.systemjob.SystemJobScheduler: void cancelAll(android.content.Context)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: void cancelAll(android.content.Context)\u003e",
      "targetMethod": "\u003candroidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003candroidx.work.impl.model.WorkSpecDao: int resetScheduledState()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl$8: java.lang.String createQuery()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.room.SharedSQLiteStatement: java.lang.String createQuery()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteStatement: int executeUpdateDelete()\u003e",
      "sourceStatement": "$i0 \u003d interfaceinvoke $r3.\u003candroidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomDatabase: void endTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: int resetScheduledState()\u003e",
      "targetMethod": "\u003candroidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)\u003e($r3)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()\u003e",
      "sourceStatement": "$r4 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e",
      "sourceStatement": "$r2 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: java.util.List getSchedulers()\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke this.\u003candroidx.work.impl.WorkManagerImpl: java.util.List getSchedulers()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.WorkManagerImpl: void rescheduleEligibleWork()\u003e",
      "targetMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e($r4, $r2, $r5)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkDatabase_Impl: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $param1.\u003candroidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void beginTransaction()\u003e",
      "sourceStatement": "virtualinvoke $param1.\u003candroidx.work.impl.WorkDatabase: void beginTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.work.Configuration: int getMaxSchedulerLimit()\u003e",
      "sourceStatement": "$i0 \u003d virtualinvoke $param0.\u003candroidx.work.Configuration: int getMaxSchedulerLimit()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "sourceStatement": "$r4 \u003d interfaceinvoke $r3.\u003candroidx.work.impl.model.WorkSpecDao: java.util.List getEligibleWorkForScheduling(int)\u003e($i0)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state\u003d0 AND schedule_requested_at\u003d-1 ORDER BY period_start_time LIMIT (SELECT MAX(?-COUNT(*), 0) FROM workspec WHERE schedule_requested_at\u003c\u003e-1 AND state NOT IN (2, 3, 5))\", 1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindLong(int,long)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void bindLong(int,long)\u003e(1, $l4)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e($r2, $r1, false, null)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteProgram: void bindLong(int,long)\u003e",
      "sourceStatement": "interfaceinvoke $param0.\u003candroidx.sqlite.db.SupportSQLiteProgram: void bindLong(int,long)\u003e($i0, $l2)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"required_network_type\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_charging\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_device_idle\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_battery_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_storage_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i8 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_content_update_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i9 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_max_content_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i10 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"content_uri_triggers\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"id\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"state\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"worker_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input_merger_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i14 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"output\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"initial_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"interval_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"flex_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i18 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_attempt_count\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_delay_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"period_start_time\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i22 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"minimum_retention_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i22 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"schedule_requested_at\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i24 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_in_foreground\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i24 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"out_of_quota_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "sourceStatement": "$r5 \u003d interfaceinvoke $r3.\u003candroidx.work.impl.model.WorkSpecDao: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e(200)",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e",
      "sourceStatement": "$r1 \u003d staticinvoke \u003candroidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)\u003e(\"SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state\u003d0 ORDER BY period_start_time LIMIT ?\", 1)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void bindLong(int,long)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void bindLong(int,long)\u003e(1, $l4)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.room.RoomDatabase: void assertNotSuspendingTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r3 \u003d staticinvoke \u003candroidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)\u003e($r2, $r1, false, null)",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"required_network_type\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_charging\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_device_idle\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_battery_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$param0 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"requires_storage_not_low\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i8 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_content_update_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i9 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"trigger_max_content_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i10 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"content_uri_triggers\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"id\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i11 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"state\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"worker_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input_merger_class_name\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i12 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"input\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i14 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"output\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"initial_delay\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"interval_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i15 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"flex_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i18 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_attempt_count\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"backoff_delay_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i19 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"period_start_time\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i22 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"minimum_retention_duration\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i22 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"schedule_requested_at\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i24 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"run_in_foreground\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e",
      "sourceStatement": "$i24 \u003d staticinvoke \u003candroidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)\u003e($r3, \"out_of_quota_policy\")",
      "kind": "STATIC",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)\u003e",
      "targetMethod": "\u003candroidx.room.RoomSQLiteQuery: void release()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.room.RoomSQLiteQuery: void release()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "virtualinvoke $param1.\u003candroidx.work.impl.WorkDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: void endTransaction()\u003e",
      "sourceStatement": "virtualinvoke $param1.\u003candroidx.work.impl.WorkDatabase: void endTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.ForceStopRunnable: void run()\u003e",
      "targetMethod": "\u003candroidx.work.impl.WorkManagerImpl: void onForceStopRunnableCompleted()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.work.impl.WorkManagerImpl: void onForceStopRunnableCompleted()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.work.impl.utils.SerialExecutor$Task: void run()\u003e",
      "targetMethod": "\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.work.impl.utils.SerialExecutor: void scheduleNext()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: void refreshVersionsAsync()\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "sourceStatement": "interfaceinvoke $r3.\u003cjava.util.concurrent.Executor: void execute(java.lang.Runnable)\u003e($r4)",
      "kind": "EXECUTOR",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onResume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onResume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: void b(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.unity3d.player.m: void b(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void checkResumePlayer()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void checkResumePlayer()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void checkResumePlayer()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e($r1)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void checkResumePlayer()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean e(boolean)\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003ccom.unity3d.player.m: boolean e(boolean)\u003e($z0)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean c()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.m: boolean c()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.AudioVolumeHandler: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.b: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.AudioVolumeHandler: void \u003cinit\u003e(android.content.Context)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.b: void a(com.unity3d.player.b$b)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.unity3d.player.b: void a(com.unity3d.player.b$b)\u003e(this)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.b: void a(com.unity3d.player.b$b)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.b$a: void \u003cinit\u003e(com.unity3d.player.b,android.os.Handler,android.media.AudioManager,int,com.unity3d.player.b$b)\u003e",
      "sourceStatement": "specialinvoke $r2.\u003ccom.unity3d.player.b$a: void \u003cinit\u003e(com.unity3d.player.b,android.os.Handler,android.media.AudioManager,int,com.unity3d.player.b$b)\u003e(this, $r5, $r1, 3, $param0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void resume()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean c()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.m: boolean c()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onResume()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onResume()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityResumed()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003candroidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)\u003e",
      "targetMethod": "\u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e",
      "sourceStatement": "$r5 \u003d staticinvoke \u003candroidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)\u003e($r4)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock()\u003e",
      "sourceStatement": "$r3 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker: boolean ensureInitialization()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.room.InvalidationTracker: boolean ensureInitialization()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker: boolean ensureInitialization()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: boolean isOpen()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003candroidx.room.RoomDatabase: boolean isOpen()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: boolean isOpen()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: boolean isOpen()\u003e",
      "sourceStatement": "$z0 \u003d interfaceinvoke $r1.\u003candroidx.sqlite.db.SupportSQLiteDatabase: boolean isOpen()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase: boolean inTransaction()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()\u003e",
      "sourceStatement": "$r6 \u003d virtualinvoke $r2.\u003candroidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e",
      "sourceStatement": "$r7 \u003d interfaceinvoke $r6.\u003candroidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void beginTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $r7.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.room.InvalidationTracker$1: java.util.Set checkUpdatedTable()\u003e",
      "sourceStatement": "$r8 \u003d specialinvoke this.\u003candroidx.room.InvalidationTracker$1: java.util.Set checkUpdatedTable()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: java.util.Set checkUpdatedTable()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String)\u003e",
      "sourceStatement": "specialinvoke $r4.\u003candroidx.sqlite.db.SimpleSQLiteQuery: void \u003cinit\u003e(java.lang.String)\u003e(\"SELECT * FROM room_table_modification_log WHERE invalidated \u003d 1;\")",
      "kind": "SPECIAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: java.util.Set checkUpdatedTable()\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "sourceStatement": "$r5 \u003d virtualinvoke $r3.\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e($r4)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)\u003e",
      "targetMethod": "\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e",
      "sourceStatement": "$r1 \u003d virtualinvoke this.\u003candroidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)\u003e($param0, null)",
      "kind": "VIRTUAL",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void setTransactionSuccessful()\u003e",
      "sourceStatement": "interfaceinvoke $r7.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.room.InvalidationTracker$1: void run()\u003e",
      "targetMethod": "\u003candroidx.sqlite.db.framework.FrameworkSQLiteDatabase: void endTransaction()\u003e",
      "sourceStatement": "interfaceinvoke $r7.\u003candroidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()\u003e()",
      "kind": "INTERFACE",
      "component": [
        "androidx.startup.InitializationProvider"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "staticinvoke \u003candroidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)\u003e($param0, $r2)",
      "kind": "STATIC",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ReportFragment: void onPause()\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e",
      "sourceStatement": "specialinvoke this.\u003candroidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)\u003e",
      "targetMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003candroidx.lifecycle.ProcessLifecycleOwner: void activityPaused()\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean postDelayed(java.lang.Runnable,long)\u003e($r1, 700L)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onPause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: void saveMultiWindowMode(android.app.Activity)\u003e",
      "sourceStatement": "staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: void saveMultiWindowMode(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.MultiWindowSupport: void saveMultiWindowMode(android.app.Activity)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean isInMultiWindowMode(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean isInMultiWindowMode(android.app.Activity)\u003e($param0)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onPause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.MultiWindowSupport: boolean getAllowResizableWindow(android.app.Activity)\u003e(this)",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onPause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void pause()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.unity3d.player.UnityPlayer: void pause()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.AudioVolumeHandler: void a()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.unity3d.player.AudioVolumeHandler: void a()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.AudioVolumeHandler: void a()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.b: void a()\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.unity3d.player.b: void a()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean canPauseUnity()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: boolean canPauseUnity()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean canPauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean f()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.unity3d.player.m: boolean f()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean canPauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean d()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke $r1.\u003ccom.unity3d.player.m: boolean d()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pause()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputStr(java.lang.String,int,boolean)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputStr(java.lang.String,int,boolean)\u003e(null, 1, true)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputStr(java.lang.String,int,boolean)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void hideSoftInput()\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: void hideSoftInput()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$5: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void hideSoftInput()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void postOnUiThread(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: void postOnUiThread(java.lang.Runnable)\u003e($r1)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void postOnUiThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$10: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,boolean,java.lang.String,int)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,byte)\u003e($param0, 0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "targetMethod": "\u003cjava.lang.Object: void \u003cinit\u003e()\u003e",
      "sourceStatement": "specialinvoke this.\u003cjava.lang.Object: void \u003cinit\u003e()\u003e()",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputStr(java.lang.String,int,boolean)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: boolean isFinishing()\u003e",
      "sourceStatement": "$z0 \u003d virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: boolean isFinishing()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(java.lang.Runnable)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(java.lang.Runnable)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(java.lang.Runnable)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean c()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.m: boolean c()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: boolean c()\u003e",
      "sourceStatement": "$z0 \u003d staticinvoke \u003ccom.unity3d.player.m: boolean c()\u003e()",
      "kind": "STATIC",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: void d(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003ccom.unity3d.player.m: void d(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void pauseUnity()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.m: void b(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r5.\u003ccom.unity3d.player.m: void b(boolean)\u003e(true)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003candroid.app.Activity: void setIntent(android.content.Intent)\u003e",
      "sourceStatement": "virtualinvoke this.\u003ccom.unity3d.player.UnityPlayerActivity: void setIntent(android.content.Intent)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayerActivity: void onNewIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void newIntent(android.content.Intent)\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003ccom.unity3d.player.UnityPlayer: void newIntent(android.content.Intent)\u003e($param0)",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void newIntent(android.content.Intent)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$e: void e()\u003e",
      "sourceStatement": "virtualinvoke $r3.\u003ccom.unity3d.player.UnityPlayer$e: void e()\u003e()",
      "kind": "VIRTUAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"PAUSE\", 0)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"RESUME\", 1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"QUIT\", 2)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"SURFACE_LOST\", 3)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"SURFACE_ACQUIRED\", 4)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"FOCUS_LOST\", 5)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"FOCUS_GAINED\", 6)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"NEXT_FRAME\", 7)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"URL_ACTIVATED\", 8)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cclinit\u003e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e",
      "sourceStatement": "specialinvoke $r1.\u003ccom.unity3d.player.UnityPlayer$d: void \u003cinit\u003e(java.lang.String,int)\u003e(\"ORIENTATION_ANGLE_CHANGE\", 9)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$e: void e()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$e: void a(com.unity3d.player.UnityPlayer$d)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer$e: void a(com.unity3d.player.UnityPlayer$d)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "\u003cNONE\u003e",
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void postOnUiThread(java.lang.Runnable)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$5: void run()\u003e",
      "sourceStatement": "virtualinvoke $r2.\u003candroid.os.Handler: boolean post(java.lang.Runnable)\u003e($param0)",
      "kind": "EXECUTOR",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$5: void run()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputArea(android.graphics.Rect)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputArea(android.graphics.Rect)\u003e($r2)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$12: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,android.graphics.Rect)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,byte)\u003e($param0, 0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputArea(android.graphics.Rect)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e($r2)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$5: void run()\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputIsVisible(boolean)\u003e",
      "sourceStatement": "virtualinvoke $r1.\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputIsVisible(boolean)\u003e(false)",
      "kind": "VIRTUAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer$13: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,boolean)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer$f: void \u003cinit\u003e(com.unity3d.player.UnityPlayer,byte)\u003e($param0, 0)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    },
    {
      "sourceMethod": "\u003ccom.unity3d.player.UnityPlayer: void reportSoftInputIsVisible(boolean)\u003e",
      "targetMethod": "\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e",
      "sourceStatement": "specialinvoke this.\u003ccom.unity3d.player.UnityPlayer: void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f)\u003e($r1)",
      "kind": "SPECIAL",
      "component": [
        "com.unity3d.player.UnityPlayerActivity"
      ]
    }
  ]
}